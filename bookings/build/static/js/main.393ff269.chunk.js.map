{"version":3,"sources":["util/booking.js","util/secu.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/SuccessPage.jsx","components/Payments.jsx","components/Register.jsx","components/Tickets.jsx","components/Compete.jsx","Main.jsx","Bookings.jsx","index.js","util/database.js"],"names":["crypto","require","config","exports","validateData","data","schema","generalRegister","hash","csrf","key","localStorage","getItem","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","validation","rgn","responseHmac","createHmac","clientKey","update","digest","competeRegister","txn","comReq","comRes","ticketRegister","ticReq","ticRes","getEventData","eventId","eventReq","eventRes","i","arb","atob","calcTaxInclAmount","amt","parseFloat","toFixed","validateToken","undefined","Date","getTime","valReq","k","removeItem","valRes","setItem","generateSecurityFluff","amount","arr","tag","fluff","fluff_len","Math","floor","random","n","toString","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","onClick","document","getElementById","checked","Component","Footer","src","alt","role","aria-label","Loading","ErrorPage","errorCode","errorContent","partials_Loading","LoadingPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Timer","_isMounted","setState","timeOut","state","setTimeout","props","components_ErrorPage","SuccessPage","payment","Payments","paymentSuccesful","console","log","_JSON$parse","sessionStorage","regData","eventData","Database","firestore","collection","doc","txnId","verified","then","hashSequence","hmac","Booking","res","paymentCreated","completion","catch","alert","err","error","paymentCancelled","back","paymentError","action","returnKey","returnPayToken","btoa","tier","window","location","paymentId","required","_this2","returnTxnId","base","POST_DATA","tax","total","payer","name","email","phone","createReq","paymentData","AUTH_TOKEN","concat","API_KEY","title","SALT","createHash","get","snapshot","components_SuccessPage","bind","URI","method","value","SURL","FURL","components_LoadingPage","Register","handleChange","event","payload","truth","_data","target","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","field","return","requiredFulfilled","handleTierChange","premium","errors","validate","match","regName","regEmail","regPhone","regInst","intent","components_Payments","onChange","onBlur","placeholder","Tickets","_trP","metadata","price","number","tierPricing","handleSizeChange","paymentReady","success","specialRequests","trP","defaultValue","passive","Compete","includes","identifier","split","index","members","teamStrictType","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","takesPayment","_err","regTeamName","regTeamEmail","regTeamPhone","regTeamInst","coordinatorMail","req","_takesPayment","collectTeamGit","teamSizeType","teamSize","push","paid","instantPayment","regTeamLeader","max","min","map","mem","Compete_Member","Member","Main","loaded","dates","published","time","teams","conductedBy","components_Register","components_Tickets","components_Compete","Bookings","getParams","searchParams","URLSearchParams","search","ref","params","partials_Header","BrowserRouter","basename","Switch","Route","path","src_Main","component","partials_Footer","ReactDOM","render","src_Bookings","firebase","credentials","apps","length","initializeApp","database","settings","timestampsInSnapshots"],"mappings":"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","file":"static/js/main.393ff269.chunk.js","sourcesContent":["const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', '/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeRegister = (data, hash, txn) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', '/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.ticketRegister = (data, hash, txn) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const ticReq = new XMLHttpRequest();\r\n        ticReq.open('POST', '/_register/tic/', true);\r\n        ticReq.setRequestHeader('Content-Type', 'application/json');\r\n        ticReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\r\n\r\n        ticReq.onreadystatechange = () => {\r\n            if(ticReq.readyState===4 && ticReq.status===200) {\r\n                let ticRes = JSON.parse(ticReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: ticRes.validation, rgn: ticRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (ticRes.hash===responseHmac)\r\n                    resolve(ticRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', '/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.calcTaxInclAmount = (amt) => {\r\n    /**\r\n     * Calculates the net amout to be paid \r\n     * such that the amount recieved after deductions is\r\n     * equal to the fee of the event\r\n    */\r\n    // Flat transaction fee in Rupees\r\n    const flatFee = 3\r\n\r\n    // Transaction fee in percent\r\n    const txnFeePct = 2.5\r\n    \r\n    // Applicable TAX in percent\r\n    // Note: TAX is applied on the transaction fee only\r\n    const taxPct = 18\r\n    \r\n    return (\r\n        parseFloat(\r\n            (amt + flatFee) / \r\n            (1 - txnFeePct/100 - ((taxPct/100) * (txnFeePct/100)))            \r\n        ).toFixed(2)\r\n    )\r\n}","const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', '/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenName+k );\r\n                reject('CSR_TOKEN_INVALID');\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}","import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                {/* <li><a href=\"/about\">about</a></li> */}\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/signup\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\" onClick={() => {\r\n                        document.getElementById(\"sidebar-toggle\").checked = false;\r\n                    }}></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            {/* <li><a href=\"/about\">about</a></li> */}\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/signup\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"base container\">\r\n\t\t\t\t\t<div className=\"collab\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"base-title\">xtacy</span><br/>\r\n\t\t\t\t\t\t\tThe annual techno-cultural extravaganza organized by Faculty of Engineering, Jamia Millia Islamia\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"collab-imgs\">\r\n\t\t\t\t\t\t\t<img src=\"/static/img/collaborators.png\" alt=\"\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    const errorCode = localStorage.getItem('payment-error-code')\r\n    localStorage.removeItem('payment-error-code')\r\n    var errorContent = 'This page isn\\'t working.'\r\n\r\n    switch (errorCode) {\r\n        case 'CSRF_TIMEOUT':\r\n            errorContent = 'The page timed out.'\r\n            break\r\n        case 'SERVER_ERROR':\r\n            errorContent = 'There was a server error.'\r\n            break\r\n        case 'PORTAL_ERROR':\r\n            errorContent = 'The payment service may be down.'\r\n            break\r\n        case 'RESPONSE_HASH_MISMATCH':\r\n            errorContent = 'The payment couldn\\'t be verified.'\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesn't<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    <b>{ errorContent }</b><br/><br/>\r\n                    Try to reload the page or go back. If the issue persists, tell us about it at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = (props) => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container fit\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <div>\r\n                    {\r\n                        props.payment ? (\r\n                            <b>Your payment was successful</b>\r\n                        ) : (\r\n                            <b>Your registration was successful</b>\r\n                        )\r\n                    }\r\n                    \r\n                    <br/><br/>\r\n                    Your registration number is\r\n                    <div className=\"rgn\">{ props.rgn }</div>\r\n                    <br/>\r\n\r\n                    <p className=\"center\">\r\n                        We have sent a confirmation message on the email you entered. If you don't recieve \r\n                        it in the next few minutes, please contact us \r\n                        at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                    </p>\r\n\r\n                    <span><a href=\"/terms\">Terms</a> | <a href=\"/\">Home</a></span>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport LoadingPage from './LoadingPage';\r\n\r\nimport Database from '../util/database';\r\nimport Booking from '../util/booking';\r\nimport './css/Payments.css';\r\nimport SuccessPage from './SuccessPage';\r\nimport ErrorPage from './ErrorPage';\r\nimport { RSA_NO_PADDING } from 'constants';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentCreated: false,\r\n            completion: false,\r\n            paymentSuccesful: false,\r\n            txnId: null,\r\n            paymentId: null,\r\n            amount: null,\r\n            data : null,\r\n            hash: null,\r\n            required: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let returnKey = localStorage.getItem('x-return-key')\r\n        let returnPayToken = localStorage.getItem('x-return-pay-token')\r\n        let returnTxnId = localStorage.getItem('x-txn-id')\r\n\r\n        if(returnKey==='PAY_INITIALIZE') {\r\n            // Payment Initiate Process\r\n            let base = this.props.amount, amt = Booking.calcTaxInclAmount(this.props.amount)\r\n            let POST_DATA = {\r\n                eventData: this.props.eventData,\r\n                amount: {\r\n                    base: base,\r\n                    tax:  (amt - base).toFixed(2),\r\n                    total: amt\r\n                },\r\n                payer: {\r\n                    name: this.props.name,\r\n                    email: this.props.email,\r\n                    phone: this.props.phone,\r\n                }\r\n            }\r\n            \r\n            let hashSequence = JSON.stringify(POST_DATA)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            \r\n            const createReq = new XMLHttpRequest()\r\n            createReq.open('POST', '/_payment/create/', true)\r\n            createReq.setRequestHeader('Content-Type', 'application/json')\r\n            createReq.send(JSON.stringify({\r\n                data: POST_DATA,\r\n                csrf: {\r\n                    key: localStorage.getItem(config.csrfTokenNameKey),\r\n                    token: localStorage.getItem(config.csrfTokenName + localStorage.getItem(config.csrfTokenNameKey))\r\n                }, \r\n                checksum: hmac\r\n            }));\r\n\r\n            createReq.onreadystatechange = () => {\r\n                if(createReq.readyState===4 && createReq.status===200) {\r\n                    let paymentData = JSON.parse(createReq.response)\r\n                    let responseHmac = crypto.createHmac('sha256', config.clientKey).update(paymentData.AUTH_TOKEN).digest('hex')            \r\n                    if(paymentData.hash === responseHmac) {\r\n                        localStorage.setItem('x-txn-id', paymentData.txnId)\r\n                        \r\n                        let hashSequence = `${paymentData.API_KEY}|${paymentData.txnId}|${amt}|` + \r\n                            `${this.props.eventData.title}|${this.props.name}|${this.props.email}|` + \r\n                            `${'XTACY'}||||||||||${paymentData.SALT}`\r\n                        let hash = crypto.createHash('sha512').update(hashSequence).digest('hex')\r\n\r\n                        this.setState({\r\n                            amount: {\r\n                                base: base,\r\n                                total: amt\r\n                            },\r\n                            hash: hash,\r\n                            txnId: paymentData.txnId,\r\n                            paymentData : paymentData,\r\n                            data: {\r\n                                payer: POST_DATA.payer,\r\n                                eventData: POST_DATA.eventData,\r\n                                regData: this.props.regData\r\n                            },\r\n                            paymentCreated: true\r\n                        })\r\n                    } else\r\n                        this.paymentError('RESPONSE_HASH_MISMATCH')\r\n                } else if(createReq.readyState===4 && createReq.status===403) {\r\n                    this.paymentError('CSRF_TIMEOUT')\r\n                } else if(createReq.readyState===4 && createReq.status===500) {\r\n                    this.paymentError('SERVER_ERROR')\r\n                }\r\n            }\r\n        } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\r\n            // Payment Returned from Server\r\n            localStorage.removeItem('x-return-key')\r\n            localStorage.removeItem('x-return-pay-token')\r\n            localStorage.removeItem('x-txn-id')\r\n            /**\r\n             * @author zrthxn\r\n             * Check for transaction success here\r\n             * The transaction ID is available as returnTxnId\r\n             */\r\n         //   setTimeout(()=>{\r\n                Database.firestore.collection('transactions').doc(returnTxnId).get()\r\n                .then((snapshot)=>{\r\n                    let paymentData = snapshot.data()\r\n                    if(paymentData.status==='success')\r\n                        this.paymentSuccesful({ txnId: returnTxnId })\r\n                    else\r\n                        this.paymentError({ txnId: returnTxnId })\r\n                }).catch(()=>{\r\n                    this.paymentError({ txnId: null })\r\n                })\r\n        //    }, 2500)\r\n        }\r\n    }\r\n\r\n    paymentSuccesful = (txn) => {\r\n        console.log('PAYMENT_SUCCESSFUL')\r\n        const { regData, eventData } = JSON.parse(atob(sessionStorage.getItem('x-data-bundle')))\r\n        sessionStorage.removeItem('x-data-bundle')\r\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\r\n            status: 'SUCCESS | VERIFIED',\r\n            verified: true\r\n        }).then(()=>{\r\n            let hashSequence = JSON.stringify(regData)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n\r\n            if(eventData.type==='com') {\r\n                Booking.competeRegister(regData, hmac, txn.txnId).then((res)=>{\r\n                    if (res.validation) \r\n                        this.setState({ paymentCreated: true, completion: true, paymentSuccesful: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            } else if(eventData.type==='tic') {\r\n                Booking.ticketRegister(regData, hmac, txn.txnId).then((res)=>{\r\n                    if (res.validation) \r\n                        this.setState({ paymentCreated: true, completion: true, paymentSuccesful: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            } else if (eventData.type==='gen'){\r\n                Booking.generalRegister(regData, hmac, txn.txnId).then((res) => {\r\n                    if(res.validation)\r\n                        this.setState({ paymentCreated: true, completion:true, paymentSuccesful:true, rgn: res.rgn })\r\n                }).catch(() => {\r\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err);\r\n        })\r\n    }\r\n\r\n    paymentCancelled = () => {\r\n        console.log('PAYMENT_CANCELLED')\r\n        Database.firestore.collection('transactions').doc(this.state.txnId).update({\r\n            status: 'CANCELLED',\r\n        }).then(()=>{\r\n            this.props.back()\r\n        }).catch((err) => console.error(err))\r\n    }\r\n\r\n    paymentError = (txn) => {\r\n        console.error('PAYMENT_FAILED', 'PORTAL_ERROR')\r\n        localStorage.setItem('payment-error-code', 'PORTAL_ERROR')\r\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\r\n            status: 'FAILED | VERIFIED',\r\n        }).then(()=>{\r\n            this.setState({ paymentCreated: false })\r\n        }).catch((err) => console.error(err))\r\n    }\r\n\r\n    action = () => {\r\n        // Redirect to action URL here\r\n        let returnKey = 'KEY'\r\n        for(let i=0;i<24;i++)\r\n            returnKey += Math.floor( Math.random() * 36 ).toString(36)\r\n        let returnPayToken = crypto.createHmac('sha512', config.clientKey).update(returnKey + this.state.txnId).digest('hex')\r\n\r\n        localStorage.setItem('x-return-key', returnKey)\r\n        localStorage.setItem('x-return-pay-token', returnPayToken)\r\n        sessionStorage.setItem('x-data-bundle', btoa(JSON.stringify(this.state.data)))\r\n        //here send the form to paymentData.URI\r\n        // document.getElementById('payForm').submit()\r\n        if(this.props.eventData.tier==='gold')\r\n            window.location = 'https://www.payumoney.com/paybypayumoney/#/0839A766DA2456A41A64631ABE2C883F'\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n            {\r\n                this.state.paymentCreated ? (\r\n                    this.state.completion ? (\r\n                        this.state.paymentSuccesful ? <SuccessPage rgn={ this.state.rgn } payment={true}/> : <ErrorPage/>\r\n                    ) : (\r\n                        <div>\r\n                            <div className=\"action container fit\">\r\n                                <button className=\"button\" onClick={ this.props.back.bind(this) }>CANCEL</button>\r\n                            </div>\r\n                            <form action={this.state.paymentData.URI} method=\"POST\" name=\"payForm\" id=\"payForm\">\r\n                                <input type =\"hidden\" name=\"key\" value={this.state.paymentData.API_KEY} />\r\n                                <input type=\"hidden\" name=\"hash\" value={this.state.paymentData.hash} /> \r\n                                <input type=\"hidden\" name=\"txnid\" value={this.state.paymentData.txnId} />\r\n                                <input type=\"hidden\" name=\"firstname\" value={this.props.name} />                                \r\n                                <input type=\"hidden\" name=\"service_provider\" value=\"payu_paisa\" />\r\n                                <input type=\"hidden\" name=\"amount\" value ={this.state.amount.total} />\r\n                                <input type=\"hidden\" name=\"email\" value={this.props.email} />\r\n                                <input type=\"hidden\" name=\"phone\" value={this.props.phone} />\r\n                                <input type=\"hidden\" name=\"productinfo\" value={this.props.eventData.title} />\r\n                                <input type=\"hidden\" name=\"surl\" value={this.state.paymentData.SURL} />\r\n                                <input type=\"hidden\" name=\"furl\" value={this.state.paymentData.FURL} />\r\n                                <input type=\"hidden\" name=\"udf1\" value=\"XTACY\"/>\r\n                                <input type=\"hidden\" name=\"hash\" value={this.state.hash} />\r\n                                    <div className=\"pricing\">\r\n                                        <p>Total</p>\r\n                                        <h3>{'\\u20B9 ' + Booking.calcTaxInclAmount(this.props.amount)}</h3>\r\n                                        <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    </div>\r\n                                    <p>\r\n                                        By clicking on PAY you agree to the Xtacy terms and conditions.\r\n                                    </p>\r\n                                <button className=\"button solid green\" type=\"button\" onClick = {this.action.bind(this)}>PAY</button>\r\n                            </form> \r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={10000}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\nimport Payments from './Payments';\r\n\r\nimport SuccessPage from './SuccessPage';\r\nimport { throws } from 'assert';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null,\r\n                tier:'standard',\r\n                amount:0\r\n            },\r\n            premium:false,\r\n            errors: {\r\n                email: false,\r\n                phone: false,\r\n                name: false\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let _data = this.state.data\r\n        if(this.props.intent==='gen'){\r\n            _data.tier = 'standard'\r\n            _data.amount=0\r\n            this.setState({\r\n                premium: false,\r\n                data:_data\r\n            })\r\n        }\r\n        else if(this.props.intent==='prm'){\r\n            _data.tier = 'gold'\r\n            _data.amount = 150\r\n            this.setState({\r\n                premium: true,\r\n                data: _data\r\n            })\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data\r\n        if(event.target.value==='gold'){\r\n            _data.amount=150\r\n            _data.tier='gold'\r\n            this.setState({\r\n                premium:true,\r\n                data:_data\r\n            })\r\n        }\r\n        else {\r\n            _data.amount=0\r\n            _data.tier='standard'\r\n            this.setState({\r\n                premium:false,\r\n                data:_data\r\n            })\r\n        }\r\n    }\r\n    \r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\r\n                if(!this.state.premium){\r\n                    let hashSequence = JSON.stringify(this.state.data)\r\n                    let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n                    Booking.generalRegister(this.state.data, hmac)\r\n                        .then((res)=>{\r\n                            if (res.validation)\r\n                                this.setState({ completion: true, rgn: res.rgn })\r\n                        }).catch(()=>{\r\n                            alert('Error')\r\n                        })\r\n                }\r\n                else {\r\n                    localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n                    localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n                    this.setState({completion:true})\r\n                }\r\n            } else {\r\n                alert('Please ensure that the data entered is correct')\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    validate = (event) => {   \r\n        if(event.target.id==='regEmail') {\r\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: this.state.errors.phone,\r\n                        email: true\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: this.state.errors.phone,\r\n                    email: false\r\n                }\r\n            })\r\n        }\r\n        else if (event.target.id==='regPhone'){\r\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \r\n                this.setState({\r\n                    errors: {\r\n                        name: this.state.errors.name,\r\n                        phone: true,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: false,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n        else if(event.target.id==='regName'){\r\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\r\n                this.setState({\r\n                    errors: {\r\n                        name: true,\r\n                        phone: this.state.errors.phone,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors: {\r\n                    name: false,\r\n                    phone: this.state.errors.phone,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? ( this.state.premium ? ( \r\n                    <Payments \r\n                        name = {this.state.data.regName}\r\n                        email = {this.state.data.regEmail}\r\n                        phone = {this.state.data.regPhone}\r\n                        amount = {this.state.data.amount}\r\n                        eventData = {{\r\n                            'title': 'Xtacy Registration',\r\n                            'type': 'gen',\r\n                            'tier': this.state.data.tier\r\n                        }}\r\n                        regData = {this.state.data}\r\n                        back = { () => {this.setState({completion:false})}} />\r\n                    ) :  <SuccessPage rgn={this.state.rgn} payment={false}/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>\r\n                            <p>\r\n                                <b>Gold Pass needed for Kunal Kamra's Show</b> <br/>\r\n                            </p>                         \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                \r\n                                    {\r\n                                        this.props.intent==='gen' ? (\r\n                                            <select className=\"dropdown\" id=\"tier\" onChange={this.handleTierChange}>\r\n                                            <option value=\"standard\">Standard</option>\r\n                                            <option value=\"gold\">Gold</option>\r\n                                            </select>\r\n                                        ):(\r\n                                            <select className=\"dropdown\" id=\"tier\" onChange={this.handleTierChange}>\r\n                                            <option value=\"gold\">Gold</option>\r\n                                            <option value=\"standard\">Standard</option>\r\n                                            </select>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        this.state.premium?(\r\n                                            <div className=\"pricing\"> \r\n                                            <p id=\"trP\">{'\\u20B9 ' + this.state.data.amount +' per person'}</p>\r\n                                            <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                            <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                            <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                                            </div>\r\n                                        ):(\r\n                                            <div className=\"pricing\">\r\n                                                <br /><br /><br />\r\n                                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                                            </div>\r\n                                        )\r\n                                    }       \r\n                                    \r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport Payments from './Payments';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Tickets.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            tierPricing: null,\r\n            data : {\r\n                eventId: null,\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                specialRequests: null,\r\n                tier: null,\r\n                number: 0,\r\n                amount: 0\r\n            },\r\n            errors: {\r\n                email: false,\r\n                phone: false,\r\n                name: false\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let trP, _data = this.state.data;\r\n        _data.eventId = this.props.eventData.eventId\r\n        if( typeof this.props.eventData.metadata.price === 'number' )\r\n            trP = this.props.eventData.metadata.price\r\n        else if( typeof this.props.eventData.metadata.price === 'object' )\r\n            trP = this.props.eventData.metadata.price[1]\r\n\r\n        _data.number = 1\r\n        _data.tier = 'Standard'\r\n        _data.amount = (trP * _data.number)\r\n        this.setState({\r\n            tierPricing: trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\r\n        _data.amount = (_trP * _data.number)\r\n        switch (event.target.value) {\r\n            case '0':\r\n                _data.tier = 'Budget';\r\n                break;\r\n            case '1':\r\n                _data.tier = 'Standard';\r\n                break;\r\n            case '2':\r\n                _data.tier = 'Premium';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        this.setState({\r\n            tierPricing: _trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleSizeChange = (action) =>{\r\n        let _data = this.state.data\r\n        if(action==='incr' && _data.number!==4) \r\n            _data.number++\r\n        else if(action==='decr' && _data.number!==1)\r\n            _data.number--\r\n        let amt = (this.state.tierPricing * _data.number)\r\n        _data.amount = amt\r\n        this.setState({\r\n            data: _data,\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\r\n                localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n                localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n                this.setState({ paymentReady: true })\r\n            } else {\r\n                alert('Please ensure that the data entered is correct')\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.ticketRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation) \r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n    validate(event)\r\n    {\r\n        if(event.target.id==='regEmail') {\r\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: this.state.errors.phone,\r\n                        email: true\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: this.state.errors.phone,\r\n                    email: false\r\n                }\r\n            })\r\n        }\r\n        else if (event.target.id==='regPhone'){\r\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: true,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: false,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n        else if(event.target.id==='regName'){\r\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\r\n                this.setState({\r\n                    errors : {\r\n                        name: true,\r\n                        phone: this.state.errors.phone,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: false,\r\n                    phone: this.state.errors.phone,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={false}/> : (\r\n                        <Payments\r\n                            name={this.state.data.regName}\r\n                            email={this.state.data.regEmail}\r\n                            phone={this.state.data.regPhone}\r\n                            amount={this.state.data.amount}\r\n                            eventData={this.props.eventData}\r\n                            regData={this.state.data}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <div className=\"Tickets container fit\">\r\n                        <div className=\"Details\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Events</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click proceed. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful booking.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regName\" placeholder=\"Name\"/>\r\n                                    <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                    <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\r\n                        <br/><br/>\r\n                        <div className=\"Seats\">\r\n                            {\r\n                                typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                    <div className=\"display container\">\r\n                                        <img src=\"https://xtacy.org/static/img/seatingTiers.png\" alt=\"seating\"/>\r\n                                    </div>\r\n                                ) : console.log()\r\n                            }\r\n                            <div className=\"controls container\">\r\n                                {\r\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                        <div className=\"tiers\">\r\n                                            <p>Select a Teir</p>\r\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\r\n                                                <option value={0}>Budget</option>\r\n                                                <option value={1}>Standard</option>\r\n                                                <option value={2}>Premium</option>\r\n                                            </select>\r\n                                        </div>                          \r\n                                    ) : console.log()\r\n                                }\r\n                                <div className=\"selector\">\r\n                                    <p>Select a Number</p>\r\n\r\n                                    <div className=\"number\">\r\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\r\n                                        \r\n                                        <div className=\"buttons\">\r\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\r\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.tierPricing + ' per ticket'}</p>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                </div>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamEmail: null,\r\n                regTeamPhone: null,\r\n                regTeamInst: null,\r\n                amount: null,\r\n                members : [],\r\n                coordinatorMail : null\r\n            },\r\n            errors :{\r\n                email: false,\r\n                phone: false,\r\n                number: false\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail', 'regTeamPhone'\r\n            ],\r\n            takesPayment: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req, _takesPayment=false\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'regTeamLeader', 'regTeamSize' ]\r\n        }\r\n        _data.amount = (this.props.eventData.metadata.price)\r\n        if(this.props.eventData.coordinatorMail!=null){\r\n            _data.coordinatorMail = this.props.eventData.coordinatorMail\r\n        }\r\n        else { _data.coordinatorMail = 'javed.azimus@gmail.com' }   //email used for dumping purposes, will forward emails to coordinators as the emails keep coming\r\n        if(this.props.eventData.metadata.paid && this.props.eventData.metadata.instantPayment)\r\n            _takesPayment = true\r\n        this.setState({\r\n            data: _data,\r\n            required: req,\r\n            takesPayment: _takesPayment\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                if(this.props.eventData.metadata.teamStrictType==='strict'){\r\n                    for ( let member of this.state.data.members )\r\n                        if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                            truth = false\r\n                }\r\n                else if(this.props.eventData.metadata.teamStrictType==='flex'){\r\n                    if(this.state.data.members[0][field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null))\r\n                            truth = false\r\n                }\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                        truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\r\n                if(this.state.takesPayment) {\r\n                    localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n                    localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n                    this.setState({ paymentReady: true })\r\n                } else {\r\n                    this.success(null)\r\n                }\r\n            } else {\r\n                alert('Please ensure the data entered is correct')\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        if(!this.state.takesPayment) txn = 'NON_PAID'\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.competeRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n    \r\n    validate = (event) => {\r\n        if(event.target.id==='regTeamEmail') {\r\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: this.state.errors.phone,\r\n                        email: true\r\n                    }\r\n                })\r\n            } else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: this.state.errors.phone,\r\n                    email: false\r\n                }\r\n            })\r\n        }\r\n        else if (event.target.id==='regTeamPhone'){\r\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \r\n                let _err = this.state.errors\r\n                _err['phone'] = true\r\n                this.setState({\r\n                    errors : _err\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: false,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n        else if(event.target.id==='regTeamName'){\r\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\r\n                this.setState({\r\n                    errors : {\r\n                        name: true,\r\n                        phone: this.state.errors.phone,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: false,\r\n                    phone: this.state.errors.phone,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.takesPayment ? (\r\n                        <Payments\r\n                            name={this.props.eventData.metadata.teamSizeType==='loose'?(this.state.data.regTeamLeader):(this.state.data.members[0].name)}\r\n                            email={this.state.data.regTeamEmail}\r\n                            phone={this.state.data.regTeamPhone}\r\n                            amount={this.state.data.amount}\r\n                            eventData={this.props.eventData}\r\n                            regData={this.state.data}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={this.state.takesPayment}/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email\r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container\">\r\n                                    <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize} min={0}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                this.state.takesPayment?(\r\n                                    <div className=\"pricing\">\r\n                                        <p id=\"trP\">{'\\u20B9 ' + this.state.data.amount + ' per team'}</p>\r\n                                        <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                        <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                                    </div>\r\n                                ):(\r\n                                    <div className=\"pricing\">\r\n                                        <h3>{'\\u20B9 ' + this.state.data.amount + ' per team'}</h3>\r\n                                        <p id=\"tax\"><i>You will be required to pay this amount on the spot.</i></p>\r\n                                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                                    </div>\r\n                                )\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    \r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React, { Component } from 'react';\r\nimport Booking from './util/booking';\r\nimport './Global.css';\r\n\r\nimport Register from './components/Register';\r\nimport Tickets from './components/Tickets';\r\nimport Compete from './components/Compete';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Loading from './components/partials/Loading';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            // DEBUG ======================================== //\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                event: 'kunalk',\r\n                eventData: {\r\n                    title: 'KK',\r\n                    eventId: 'kunalk',\r\n                    dates: 30,\r\n                    type: this.props.intent,\r\n                    published: true,\r\n                    metadata: {\r\n                        time: '1:00 PM',\r\n                        paid: false,\r\n                        price: 5,\r\n                        teams: false,\r\n                        teamSize: null,\r\n                        teamSizeType: null,\r\n                        collectTeamGit: false,\r\n                        conductedBy: 'Daniyal'\r\n                    }\r\n                },\r\n                loaded: true\r\n            })\r\n            // ---------------------------------------------- //\r\n            // Booking.getEventData(this.props.event)\r\n            //     .then((eventData)=>{\r\n            //         this.setState({\r\n            //             intent: this.props.intent,\r\n            //             event: this.props.event,\r\n            //             eventData: eventData.data,\r\n            //             loaded: true\r\n            //         })\r\n            //     }).catch((err)=>{\r\n            //         console.log(err)\r\n            //     })\r\n            // ============================================== //\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.eventData.published ? (\r\n                            this.state.intent!=='com' ? (\r\n                                this.state.intent!=='tic' ? ( \r\n                                    this.state.intent!=='prm' ? (\r\n                                        <ErrorPage/>\r\n                                    ) : ( \r\n                                        <Register eventData = {this.state.eventData} intent={this.state.intent}/>\r\n                                    )\r\n                                ): (\r\n                                    <Tickets eventData={this.state.eventData}/>\r\n                                )\r\n                            ) : (\r\n                                <Compete eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <div className=\"container\">\r\n                                <Loading/>\r\n                                <h2>Not Published</h2>\r\n                                <p>Registrations are disabled for this event</p>\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <Register eventData={this.state.eventData} intent={this.state.intent}/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Payments from './components/Payments';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // DEBUG ======================================== //\r\n        let params = this.getParams(window.location)\r\n        if (params.intent==='gen') params.event = 'any'\r\n        this.setState({\r\n            intent: params.intent,\r\n            event: params.event,\r\n            ref: params.ref,\r\n            verified: true\r\n        })\r\n        // ---------------------------------------------- //\r\n        // Secu.validateToken().then((result)=>{\r\n        //     if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n        //             result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n        //         console.log('SR Tokens Verified')\r\n        //         Secu.generateSecurityFluff(4);\r\n                \r\n        //         let params = this.getParams(window.location), verified = false, hashSequence, hash\r\n        //         let returnKey = localStorage.getItem('x-return-key')\r\n        //         let returnPayToken = localStorage.getItem('x-return-pay-token')\r\n        //         let returnTxnId = localStorage.getItem('x-txn-id')\r\n        //         if(returnKey==='PAY_INITIALIZE' || returnKey===null) {\r\n        //             if (params.intent==='gen') params.event = 'any'\r\n        //             hashSequence = params.intent + config.clientKey + params.event\r\n        //             hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n        //             if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n        //         } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\r\n        //             verified = true\r\n        //         }\r\n        //         this.setState({\r\n        //             intent: params.intent,\r\n        //             event: params.event,\r\n        //             hash: hash,\r\n        //             ref: params.ref,\r\n        //             verified: verified\r\n        //         }, () => {console.log()})\r\n        //     }\r\n        // }).catch((err)=>{\r\n        //     console.error(err)\r\n        // });\r\n        // ============================================== //\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/register'}>\r\n                                <Switch>\r\n                                    <Route path={'/main'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n                                    \r\n                                    <Route path={'/payment'} component={Payments}/>\r\n\r\n                                    <Route path={'/cancel'} component={ErrorPage}/>\r\n\r\n                                    <Route component={ErrorPage}/>\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Bookings from './Bookings';\r\n\r\nReactDOM.render(<Bookings />, document.getElementById('root'));","const firebase = require('firebase/app');\r\nrequire('firebase/database');\r\nrequire('firebase/auth');\r\nrequire('firebase/firestore');\r\n\r\nconst credentials = require('./config.json').firebase;\r\n\r\nif (firebase.apps.length===0)\r\n    firebase.initializeApp(credentials);\r\n\r\nexports.firebase = firebase\r\n\r\nconst database = firebase.database()\r\nexports.database = database\r\n\r\nconst firestore = firebase.firestore()\r\nfirestore.settings({ timestampsInSnapshots: true })\r\nexports.firestore = firestore\r\n\r\n/**\r\n* @author Alisamar Husain\r\n* \r\n* Standard Firebase/Firestore Export\r\n* ---------------------------------\r\n* Import the object by either\r\n*   const db = require('./database')\r\n* or\r\n*   import db from './database';\r\n* \r\n* Use the object to get a database\r\n* namespace by 'db.firebase.database()'\r\n* Check the firebase docs for more.\r\n*/"],"sourceRoot":""}