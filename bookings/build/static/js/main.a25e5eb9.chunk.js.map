{"version":3,"sources":["util/booking.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/SuccessPage.jsx","components/Payments.jsx","components/Register.jsx","components/Tickets.jsx","components/Compete.jsx","Main.jsx","Bookings.jsx","index.js","util/database.js","util/secu.js"],"names":["crypto","require","config","exports","validateData","data","schema","generalRegister","hash","csrf","key","localStorage","getItem","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","validation","rgn","responseHmac","createHmac","clientKey","update","digest","competeRegister","txn","comReq","comRes","ticketRegister","ticReq","ticRes","getEventData","eventId","eventReq","eventRes","i","arb","atob","calcTaxInclAmount","amt","parseFloat","toFixed","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","onClick","document","getElementById","checked","Component","Footer","src","alt","role","aria-label","Loading","ErrorPage","errorCode","removeItem","errorContent","partials_Loading","LoadingPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Timer","_isMounted","setState","timeOut","state","setTimeout","props","components_ErrorPage","SuccessPage","payment","Payments","paymentSuccesful","console","log","_JSON$parse","sessionStorage","regData","eventData","Database","firestore","collection","doc","txnId","verified","then","hashSequence","hmac","Booking","res","paymentCreated","completion","catch","alert","err","error","paymentCancelled","back","paymentError","setItem","action","returnKey","Math","floor","random","toString","returnPayToken","btoa","redHotURL","window","location","paymentId","amount","required","_this2","returnTxnId","base","POST_DATA","tax","total","payer","name","email","phone","createReq","paymentData","payment_id","redirectUrl","get","snapshot","components_SuccessPage","bind","components_LoadingPage","Register","handleChange","event","payload","truth","_data","target","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","field","return","requiredFulfilled","handleTierChange","tier","premium","errors","validate","match","regName","regEmail","regPhone","regInst","intent","components_Payments","title","onChange","onBlur","placeholder","Tickets","_trP","metadata","price","number","tierPricing","handleSizeChange","paymentReady","success","specialRequests","trP","defaultValue","passive","Compete","includes","identifier","split","index","members","teamStrictType","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","takesPayment","_err","regTeamName","regTeamEmail","regTeamPhone","regTeamInst","coordinatorMail","req","_takesPayment","collectTeamGit","teamSizeType","teamSize","push","paid","instantPayment","regTeamLeader","max","min","map","mem","Compete_Member","Member","Main","loaded","published","components_Register","components_Tickets","components_Compete","Bookings","getParams","searchParams","URLSearchParams","search","ref","Secu","validateToken","result","generateSecurityFluff","params","createHash","hashToken","partials_Header","BrowserRouter","basename","Switch","Route","path","src_Main","component","partials_Footer","ReactDOM","render","src_Bookings","firebase","credentials","apps","length","initializeApp","database","settings","timestampsInSnapshots","Date","getTime","valReq","k","valRes","arr","tag","fluff","fluff_len","n"],"mappings":"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","file":"static/js/main.a25e5eb9.chunk.js","sourcesContent":["const crypto = require('crypto');\nconst config = require('./config.json');\n\nexports.validateData = (data, schema) => {\n\n}\n\nexports.generalRegister = (data, hash) => {\n    let csrf = {\n        key: localStorage.getItem(config.csrfTokenNameKey),\n        token: localStorage.getItem(config.csrfTokenName + \n            localStorage.getItem(config.csrfTokenNameKey))\n    };\n\n    return new Promise((resolve,reject)=>{\n        const genReq = new XMLHttpRequest();\n        genReq.open('POST', '/_register/gen/', true);\n        genReq.setRequestHeader('Content-Type', 'application/json');\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\n\n        genReq.onreadystatechange = () => {\n            if(genReq.readyState===4 && genReq.status===200) {\n                let genRes = JSON.parse(genReq.response);\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\n                if (genRes.hash===responseHmac)\n                    resolve(genRes);\n                else\n                    reject('HASH_MISMATCH');\n            }\n        }\n    });\n}\n\nexports.competeRegister = (data, hash, txn) => {\n    let csrf = {\n        key: localStorage.getItem(config.csrfTokenNameKey),\n        token: localStorage.getItem(config.csrfTokenName + \n            localStorage.getItem(config.csrfTokenNameKey))\n    };\n\n    return new Promise((resolve,reject)=>{\n        const comReq = new XMLHttpRequest();\n        comReq.open('POST', '/_register/com/', true);\n        comReq.setRequestHeader('Content-Type', 'application/json');\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\n\n        comReq.onreadystatechange = () => {\n            if(comReq.readyState===4 && comReq.status===200) {\n                let comRes = JSON.parse(comReq.response);\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\n                if (comRes.hash===responseHmac)\n                    resolve(comRes);\n                else\n                    reject('HASH_MISMATCH');\n            }\n        }\n    });\n}\n\nexports.ticketRegister = (data, hash, txn) => {\n    let csrf = {\n        key: localStorage.getItem(config.csrfTokenNameKey),\n        token: localStorage.getItem(config.csrfTokenName + \n            localStorage.getItem(config.csrfTokenNameKey))\n    };\n\n    return new Promise((resolve,reject)=>{\n        const ticReq = new XMLHttpRequest();\n        ticReq.open('POST', '/_register/tic/', true);\n        ticReq.setRequestHeader('Content-Type', 'application/json');\n        ticReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\n\n        ticReq.onreadystatechange = () => {\n            if(ticReq.readyState===4 && ticReq.status===200) {\n                let ticRes = JSON.parse(ticReq.response);\n                let responseHashSequence = JSON.stringify({ validation: ticRes.validation, rgn: ticRes.rgn })\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\n                if (ticRes.hash===responseHmac)\n                    resolve(ticRes);\n                else\n                    reject('HASH_MISMATCH');\n            }\n        }\n    });\n}\n\n\n//----------------------------------------------------------\n\nexports.getEventData = (eventId) => {\n    return new Promise((resolve,reject)=>{\n        const eventReq = new XMLHttpRequest();\n        eventReq.open('GET', '/register/_eventData/' + eventId + '/', true);\n        eventReq.send();\n        eventReq.onreadystatechange = () => {\n            if(eventReq.readyState===4 && eventReq.status===200) {\n                let eventRes = JSON.parse(eventReq.response);\n                if(eventRes.validation) {\n                    for (let i = 0; i < eventRes.arb; i++) \n                        eventRes.data = atob(eventRes.data)\n                    eventRes.data = JSON.parse(eventRes.data)\n                    resolve(eventRes);\n                } else {\n                    reject('CSRF_INVALID');\n                }\n            }\n        }\n    });\n}\n\nexports.calcTaxInclAmount = (amt) => {\n    /**\n     * Calculates the net amout to be paid \n     * such that the amount recieved after deductions is\n     * equal to the fee of the event\n    */\n    // Flat transaction fee in Rupees\n    const flatFee = 3\n\n    // Transaction fee in percent\n    const txnFeePct = 2.5\n    \n    // Applicable TAX in percent\n    // Note: TAX is applied on the transaction fee only\n    const taxPct = 18\n    \n    return (\n        parseFloat(\n            (amt + flatFee) / \n            (1 - txnFeePct/100 - ((taxPct/100) * (txnFeePct/100)))            \n        ).toFixed(2)\n    )\n}","import React, { Component } from 'react';\nimport '../css/Header.css';\n\nclass Header extends Component {\n  render() {\n        return (\n            <header>\n                <div className=\"container\">\n                    <div className=\"logo\">\n                        <div className=\"logo-rotor\">\n                            <div className=\"rotary\"></div>\n                        </div>\n                        <p className=\"logo-text\">xtacy</p>\n                    </div>\n\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\n\n                    <div className=\"sidebar\">\n                        <nav className=\"sidebar-nav\">\n                            <ul>\n                                <li><a href=\"/\">home</a></li>\n                                {/* <li><a href=\"/about\">about</a></li> */}\n                                <li><a href=\"/events\">events</a></li>\n                                <li><a href=\"/contact\">contact</a></li>\n                                <li><a href=\"/signup\">register</a></li>\n                            </ul>\n                        </nav>\n                        <div className=\"accent\"></div>\n                    </div>\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\" onClick={() => {\n                        document.getElementById(\"sidebar-toggle\").checked = false;\n                    }}></div>\n                    \n                    <nav className=\"desktop-nav\">\n                        <ul>\n                            <li><a href=\"/\">home</a></li>\n                            {/* <li><a href=\"/about\">about</a></li> */}\n                            <li><a href=\"/events\">events</a></li>\n                            <li><a href=\"/contact\">contact</a></li>\n                            <li className=\"highlight\"><a href=\"/signup\" className=\"highlight\">register</a></li>\n                        </ul>\n                    </nav>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../css/Footer.css';\n\nclass Footer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<footer>\n\t\t\t\t<div className=\"base container\">\n\t\t\t\t\t<div className=\"collab\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span className=\"base-title\">xtacy</span><br/>\n\t\t\t\t\t\t\tThe annual techno-cultural extravaganza organized by Faculty of Engineering, Jamia Millia Islamia\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"collab-imgs\">\n\t\t\t\t\t\t\t<img src=\"/static/img/collaborators.png\" alt=\"\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t);\n\t}\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport '../../Global.css';\nimport '../css/Loading.css';\n\nclass Loading extends Component {\n    render() {\n        return (\n            <div className=\"loading\">\n                <div className=\"loading-rotary\">\n                    <div className=\"rotary\"></div>\n                </div>\n                <p className=\"loading-x\">x</p>\n            </div>\n        );\n    }\n}\n\nexport default Loading;","import React from 'react';\nimport Loading from './partials/Loading';\n\nimport './css/Snippets.css';\nimport '../Global.css';\n\nconst ErrorPage = () => {\n    const errorCode = localStorage.getItem('payment-error-code')\n    localStorage.removeItem('payment-error-code')\n    var errorContent = 'This page isn\\'t working.'\n\n    switch (errorCode) {\n        case 'CSRF_TIMEOUT':\n            errorContent = 'The page timed out.'\n            break\n        case 'SERVER_ERROR':\n            errorContent = 'There was a server error.'\n            break\n        case 'PORTAL_ERROR':\n            errorContent = 'The payment service may be down.'\n            break\n        case 'RESPONSE_HASH_MISMATCH':\n            errorContent = 'The payment couldn\\'t be verified.'\n            break\n        default:\n            break\n    }\n\n    return (\n        <section className=\"ErrorPage\">\n            <div className=\"container\">\n                <Loading/>\n                <h3>that doesn't<br/>look right</h3>\n\n                <p className=\"center\">\n                    <b>{ errorContent }</b><br/><br/>\n                    Try to reload the page or go back. If the issue persists, tell us about it at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\n                </p>\n            </div>\n        </section>\n    );\n}\n\nexport default ErrorPage;","import React, { Component } from 'react';\nimport ErrorPage from './ErrorPage';\nimport Loading from './partials/Loading';\n\nimport './css/Snippets.css';\nimport '../Global.css';\n\nclass LoadingPage extends Component {\n    constructor() {\n        super();\n        this._isMounted = false;\n        this.state = { timeOut: false }\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        setTimeout(this.Timer, this.props.timeOut)\n    }\n\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\n    \n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        return (\n            <div>\n            {\n                this.state.timeOut ? (\n                    <ErrorPage/>\n                ) : (\n                    <div className=\"LoadingPage\">\n                        <div className=\"container\">\n                            <Loading/>\n                            <p className=\"center\"> loading </p>\n                        </div>\n                    </div>\n                )\n            }\n            </div>\n           \n            \n        );\n    }    \n}\n\nexport default LoadingPage;","import React from 'react';\nimport Loading from './partials/Loading';\n\nimport './css/Snippets.css';\nimport '../Global.css';\n\nconst SuccessPage = (props) => {\n    return (\n        <div className=\"SuccessPage\">\n            <div className=\"container fit\">\n                <Loading/>\n                <h3>Success!</h3>\n\n                <div>\n                    {\n                        props.payment ? (\n                            <b>Your payment was successful</b>\n                        ) : (\n                            <b>Your registration was successful</b>\n                        )\n                    }\n                    \n                    <br/><br/>\n                    Your registration number is\n                    <div className=\"rgn\">{ props.rgn }</div>\n                    <br/>\n\n                    <p className=\"center\">\n                        We have sent a confirmation message on the email you entered. If you don't recieve \n                        it in the next few minutes, please contact us \n                        at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\n                    </p>\n\n                    <span><a href=\"/terms\">Terms</a> | <a href=\"/\">Home</a></span>\n                </div>\n                \n            </div>\n        </div>\n    );\n}\n\nexport default SuccessPage;","import React, { Component } from 'react';\nimport crypto from 'crypto';\nimport LoadingPage from './LoadingPage';\n\nimport Database from '../util/database';\nimport Booking from '../util/booking';\nimport './css/Payments.css';\nimport SuccessPage from './SuccessPage';\nimport ErrorPage from './ErrorPage';\nimport { RSA_NO_PADDING } from 'constants';\n\nconst config = require('../util/config.json');\n\nclass Payments extends Component {\n    constructor() {\n        super();\n        this.state = {\n            paymentCreated: false,\n            completion: false,\n            paymentSuccesful: false,\n            txnId: null,\n            paymentId: null,\n            amount: null,\n            data : null,\n            required: []\n        }\n    }\n\n    componentDidMount() {\n        let returnKey = localStorage.getItem('x-return-key')\n        let returnPayToken = localStorage.getItem('x-return-pay-token')\n        let returnTxnId = localStorage.getItem('x-txn-id')\n\n        if(returnKey==='PAY_INITIALIZE') {\n            // Payment Initiate Process\n            let base = this.props.amount, amt = Booking.calcTaxInclAmount(this.props.amount)\n            let POST_DATA = {\n                eventData: this.props.eventData,\n                amount: {\n                    base: base,\n                    tax:  (amt - base).toFixed(2),\n                    total: amt\n                },\n                payer: {\n                    name: this.props.name,\n                    email: this.props.email,\n                    phone: this.props.phone,\n                }\n            }\n            \n            let hashSequence = JSON.stringify(POST_DATA)\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\n            \n            const createReq = new XMLHttpRequest()\n            createReq.open('POST', '/_payment/create/', true)\n            createReq.setRequestHeader('Content-Type', 'application/json')\n            createReq.send(JSON.stringify({\n                data: POST_DATA,\n                csrf: {\n                    key: localStorage.getItem(config.csrfTokenNameKey),\n                    token: localStorage.getItem(config.csrfTokenName + localStorage.getItem(config.csrfTokenNameKey))\n                }, \n                checksum: hmac\n            }));\n\n            createReq.onreadystatechange = () => {\n                if(createReq.readyState===4 && createReq.status===200) {\n                    let paymentData = JSON.parse(createReq.response)\n                    let responseHmac = crypto.createHmac('sha256', config.clientKey).update(JSON.stringify(paymentData.payment)).digest('hex')            \n                    if(paymentData.hash === responseHmac) {\n                        localStorage.setItem('x-txn-id', paymentData.txnId)\n                        this.setState({\n                            amount: {\n                                base: base,\n                                total: amt\n                            },\n                            paymentId: paymentData.payment.payment_id,\n                            txnId: paymentData.txnId,\n                            data: {\n                                payer: POST_DATA.payer,\n                                eventData: POST_DATA.eventData,\n                                regData: this.props.regData\n                            },\n                            redHotURL: paymentData.redirectUrl,\n                            paymentCreated: true\n                        })\n                    } else\n                        this.paymentError('RESPONSE_HASH_MISMATCH')\n                } else if(createReq.readyState===4 && createReq.status===403) {\n                    this.paymentError('CSRF_TIMEOUT')\n                } else if(createReq.readyState===4 && createReq.status===500) {\n                    this.paymentError('SERVER_ERROR')\n                }\n            }\n        } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\n            // Payment Returned from Server\n            localStorage.removeItem('x-return-key')\n            localStorage.removeItem('x-return-pay-token')\n            localStorage.removeItem('x-txn-id')\n            /**\n             * @author zrthxn\n             * Check for transaction success here\n             * The transaction ID is available as returnTxnId\n             */\n         //   setTimeout(()=>{\n                Database.firestore.collection('transactions').doc(returnTxnId).get()\n                .then((snapshot)=>{\n                    let paymentData = snapshot.data()\n                    if(paymentData.status==='success')\n                        this.paymentSuccesful({ txnId: returnTxnId })\n                    else\n                        this.paymentError({ txnId: returnTxnId })\n                }).catch(()=>{\n                    this.paymentError({ txnId: null })\n                })\n        //    }, 2500)\n        }\n    }\n\n    paymentSuccesful = (txn) => {\n        console.log('PAYMENT_SUCCESSFUL')\n        const { regData, eventData } = JSON.parse(atob(sessionStorage.getItem('x-data-bundle')))\n        sessionStorage.removeItem('x-data-bundle')\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\n            status: 'SUCCESS | VERIFIED',\n            verified: true\n        }).then(()=>{\n            let hashSequence = JSON.stringify(regData)\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\n\n            if(eventData.type==='com') {\n                Booking.competeRegister(regData, hmac, txn.txnId).then((res)=>{\n                    if (res.validation) \n                        this.setState({ paymentCreated: true, completion: true, paymentSuccesful: true, rgn: res.rgn })\n                }).catch(()=>{\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\n                })\n            } else if(eventData.type==='tic') {\n                Booking.ticketRegister(regData, hmac, txn.txnId).then((res)=>{\n                    if (res.validation) \n                        this.setState({ paymentCreated: true, completion: true, paymentSuccesful: true, rgn: res.rgn })\n                }).catch(()=>{\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\n                })\n            } else if (eventData.type==='gen'){\n                Booking.generalRegister(regData, hmac, txn.txnId).then((res) => {\n                    if(res.validation)\n                        this.setState({ paymentCreated: true, completion:true, paymentSuccesful:true, rgn: res.rgn })\n                }).catch(() => {\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\n                })\n            }\n        }).catch((err)=>{\n            console.error(err);\n        })\n    }\n\n    paymentCancelled = () => {\n        console.log('PAYMENT_CANCELLED')\n        Database.firestore.collection('transactions').doc(this.state.txnId).update({\n            status: 'CANCELLED',\n        }).then(()=>{\n            this.props.back()\n        }).catch((err) => console.error(err))\n    }\n\n    paymentError = (txn) => {\n        console.error('PAYMENT_FAILED', 'PORTAL_ERROR')\n        localStorage.setItem('payment-error-code', 'PORTAL_ERROR')\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\n            status: 'FAILED | VERIFIED',\n        }).then(()=>{\n            this.setState({ paymentCreated: false })\n        }).catch((err) => console.error(err))\n    }\n\n    action = () => {\n        // Redirect to action URL here\n        let returnKey = 'KEY'\n        for(let i=0;i<24;i++)\n            returnKey += Math.floor( Math.random() * 36 ).toString(36)\n        let returnPayToken = crypto.createHmac('sha512', config.clientKey).update(returnKey + this.state.txnId).digest('hex')\n\n        localStorage.setItem('x-return-key', returnKey)\n        localStorage.setItem('x-return-pay-token', returnPayToken)\n\n        sessionStorage.setItem('x-data-bundle', btoa(JSON.stringify(this.state.data)))\n        console.log(this.state.redHotURL)\n        window.location = this.state.redHotURL\n    }\n\n\n    render() {\n        return (\n            <div className=\"Payments container fit\">\n            {\n                this.state.paymentCreated ? (\n                    this.state.completion ? (\n                        this.state.paymentSuccesful ? <SuccessPage rgn={ this.state.rgn } payment={true}/> : <ErrorPage/>\n                    ) : (\n                        <div>\n                            <h2>Payments Page</h2>\n\n                            <div className=\"action container fit\">\n                                <button className=\"button\" onClick={ this.props.back.bind(this) }>CANCEL</button>\n                            </div>\n\n                            <div className=\"pricing\">\n                                <p>Total</p>\n                                <h3>{'\\u20B9 ' + Booking.calcTaxInclAmount(this.props.amount)}</h3>\n                                <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\n                            </div>\n                            <p>\n                                By clicking on PAY you agree to the Xtacy terms and conditions.\n                            </p>\n                            <button className=\"button solid green\" onClick={this.action}>PAY</button>\n                        </div>\n                    )\n                ) : (\n                    <LoadingPage timeOut={10000}/>\n                )\n            }\n            </div>\n        );\n    }\n}\n\nexport default Payments;","import React, { Component } from 'react';\nimport crypto from 'crypto';\nimport Booking from '../util/booking';\nimport './css/Register.css';\nimport '../Global.css';\nimport Payments from './Payments';\n\nimport SuccessPage from './SuccessPage';\nimport { throws } from 'assert';\n\nconst config = require('../util/config.json');\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            requiredFulfilled: false,\n            completion: false,\n            data: {\n                regName: null,\n                regEmail: null,\n                regPhone: null,\n                regInst: null,\n                tier:'standard',\n                amount:0\n            },\n            premium:false,\n            errors: {\n                email: false,\n                phone: false,\n                name: false\n            },\n            required: [\n                'regName', 'regEmail', 'regPhone'\n            ]\n        }\n    }\n    componentDidMount() {\n        let _data = this.state.data\n        if(this.props.intent==='gen'){\n            _data.tier = 'standard'\n            _data.amount=0\n            this.setState({\n                premium: false,\n                data:_data\n            })\n        }\n        else if(this.props.intent==='prm'){\n            _data.tier = 'gold'\n            _data.amount = 150\n            this.setState({\n                premium: true,\n                data: _data\n            })\n        }\n    }\n    handleChange = (event) => {\n        let payload = null, truth = true, _data = this.state.data\n        if ( event.target.value!==\"\" ) payload = event.target.value\n        _data[event.target.id] = payload\n        for ( let field of this.state.required )\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\n                truth = false \n        this.setState({\n            requiredFulfilled: truth,\n            data: _data\n        })\n    }\n\n    handleTierChange = (event) => {\n        let _data = this.state.data\n        if(event.target.value==='gold'){\n            _data.amount=150\n            _data.tier='gold'\n            this.setState({\n                premium:true,\n                data:_data\n            })\n        }\n        else {\n            _data.amount=0\n            _data.tier='standard'\n            this.setState({\n                premium:false,\n                data:_data\n            })\n        }\n    }\n    \n    action = () => {\n        if(this.state.requiredFulfilled) {\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\n                if(!this.state.premium){\n                    let hashSequence = JSON.stringify(this.state.data)\n                    let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\n                    Booking.generalRegister(this.state.data, hmac)\n                        .then((res)=>{\n                            if (res.validation)\n                                this.setState({ completion: true, rgn: res.rgn })\n                        }).catch(()=>{\n                            alert('Error')\n                        })\n                }\n                else {\n                    localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\n                    localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\n                    this.setState({completion:true})\n                }\n            } else {\n                alert('Please ensure that the data entered is correct')\n            }\n        } else {\n            alert('Please fill in the required fields')\n        }\n    }\n\n    validate = (event) => {   \n        if(event.target.id==='regEmail') {\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\n                this.setState({\n                    errors : {\n                        name: this.state.errors.name,\n                        phone: this.state.errors.phone,\n                        email: true\n                    }\n                })\n            }\n            else this.setState({\n                errors : {\n                    name: this.state.errors.name,\n                    phone: this.state.errors.phone,\n                    email: false\n                }\n            })\n        }\n        else if (event.target.id==='regPhone'){\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \n                this.setState({\n                    errors: {\n                        name: this.state.errors.name,\n                        phone: true,\n                        email: this.state.errors.email\n                    }\n                })\n            }\n            else this.setState({\n                errors : {\n                    name: this.state.errors.name,\n                    phone: false,\n                    email: this.state.errors.email\n                }\n            })\n        }\n        else if(event.target.id==='regName'){\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\n                this.setState({\n                    errors: {\n                        name: true,\n                        phone: this.state.errors.phone,\n                        email: this.state.errors.email\n                    }\n                })\n            }\n            else this.setState({\n                errors: {\n                    name: false,\n                    phone: this.state.errors.phone,\n                    email: this.state.errors.email\n                }\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n            {\n                this.state.completion ? ( this.state.premium ? ( \n                    <Payments \n                        name = {this.state.data.regName}\n                        email = {this.state.data.regEmail}\n                        phone = {this.state.data.regPhone}\n                        amount = {this.state.data.amount}\n                        eventData = {{\n                            'title': 'Xtacy Registration',\n                            'type': 'gen',\n                            'tier': this.state.data.tier\n                        }}\n                        regData = {this.state.data}\n                        back = { () => {this.setState({completion:false})}} />\n                    ) :  <SuccessPage rgn={this.state.rgn} payment={false}/>\n                ) : (\n                    <div className=\"Register container fit\">\n                        <div className=\"fluff\">\n                            <h2>Registration</h2>\n                            <p>Fill in the form and click register. \n                                You will recieve a confirmation email \n                                after a successful registration.</p>\n                            <p>\n                                <b>Gold Pass needed for Kunal Kamra's Show</b> <br/>\n                            </p>                         \n                        </div>\n\n                        <div className=\"form\">\n                            <div className=\"container fit\">\n                                <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regName\" placeholder=\"Name\"/>\n                                <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regEmail\" placeholder=\"Email\"/>\n                                <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regPhone\" placeholder=\"Phone\"/>\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\n                                \n                                    {\n                                        this.props.intent==='gen' ? (\n                                            <select className=\"dropdown\" id=\"tier\" onChange={this.handleTierChange}>\n                                            <option value=\"standard\">Standard</option>\n                                            <option value=\"gold\">Gold</option>\n                                            </select>\n                                        ):(\n                                            <select className=\"dropdown\" id=\"tier\" onChange={this.handleTierChange}>\n                                            <option value=\"gold\">Gold</option>\n                                            <option value=\"standard\">Standard</option>\n                                            </select>\n                                        )\n                                    }\n                                    {\n                                        this.state.premium?(\n                                            <div className=\"pricing\"> \n                                            <p id=\"trP\">{'\\u20B9 ' + this.state.data.amount +' per person'}</p>\n                                            <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\n                                            <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\n                                            <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\n                                            </div>\n                                        ):(\n                                            <div className=\"pricing\">\n                                                <br /><br /><br />\n                                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\n                                            </div>\n                                        )\n                                    }       \n                                    \n                               \n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            </div>\n        );\n    }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport Payments from './Payments';\nimport SuccessPage from './SuccessPage';\n\nimport Booking from '../util/booking';\nimport './css/Tickets.css';\nimport '../Global.css'; \n\nconst config = require('../util/config.json');\n\nclass Tickets extends Component {\n    constructor() {\n        super();\n        this.state = {\n            requiredFulfilled: false,\n            completion: false,\n            tierPricing: null,\n            data : {\n                eventId: null,\n                regName: null,\n                regEmail: null,\n                regPhone: null,\n                specialRequests: null,\n                tier: null,\n                number: 0,\n                amount: 0\n            },\n            errors: {\n                email: false,\n                phone: false,\n                name: false\n            },\n            required: [\n                'regName', 'regEmail', 'regPhone'\n            ]\n        }\n    }\n\n    componentDidMount() {\n        let trP, _data = this.state.data;\n        _data.eventId = this.props.eventData.eventId\n        if( typeof this.props.eventData.metadata.price === 'number' )\n            trP = this.props.eventData.metadata.price\n        else if( typeof this.props.eventData.metadata.price === 'object' )\n            trP = this.props.eventData.metadata.price[1]\n\n        _data.number = 1\n        _data.tier = 'Standard'\n        _data.amount = (trP * _data.number)\n        this.setState({\n            tierPricing: trP,\n            data: _data\n        })\n    }\n\n    handleChange = (event) => {\n        let payload = null, truth = true, _data = this.state.data\n        if ( event.target.value!==\"\" ) payload = event.target.value\n        _data[event.target.id] = payload\n        for ( let field of this.state.required )\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\n                truth = false\n        this.setState({\n            requiredFulfilled: truth,\n            data: _data\n        })\n    }\n\n    handleTierChange = (event) => {\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\n        _data.amount = (_trP * _data.number)\n        switch (event.target.value) {\n            case '0':\n                _data.tier = 'Budget';\n                break;\n            case '1':\n                _data.tier = 'Standard';\n                break;\n            case '2':\n                _data.tier = 'Premium';\n                break;\n            default:\n                break;\n        }\n        \n        this.setState({\n            tierPricing: _trP,\n            data: _data\n        })\n    }\n\n    handleSizeChange = (action) =>{\n        let _data = this.state.data\n        if(action==='incr' && _data.number!==4) \n            _data.number++\n        else if(action==='decr' && _data.number!==1)\n            _data.number--\n        let amt = (this.state.tierPricing * _data.number)\n        _data.amount = amt\n        this.setState({\n            data: _data,\n        })\n    }\n\n    action = () => {\n        if(this.state.requiredFulfilled) {\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\n                localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\n                localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\n                this.setState({ paymentReady: true })\n            } else {\n                alert('Please ensure that the data entered is correct')\n            }\n        } else {\n            alert('Please fill in the required fields')\n        }\n    }\n\n    success = (txn) => {\n        let hashSequence = JSON.stringify(this.state.data)\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\n        Booking.ticketRegister(this.state.data, hmac, txn)\n            .then((res)=>{\n                if (res.validation) \n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\n            }).catch(()=>{\n                alert('Error')\n            })\n    }\n    validate(event)\n    {\n        if(event.target.id==='regEmail') {\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\n                this.setState({\n                    errors : {\n                        name: this.state.errors.name,\n                        phone: this.state.errors.phone,\n                        email: true\n                    }\n                })\n            }\n            else this.setState({\n                errors : {\n                    name: this.state.errors.name,\n                    phone: this.state.errors.phone,\n                    email: false\n                }\n            })\n        }\n        else if (event.target.id==='regPhone'){\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \n                this.setState({\n                    errors : {\n                        name: this.state.errors.name,\n                        phone: true,\n                        email: this.state.errors.email\n                    }\n                })\n            }\n            else this.setState({\n                errors : {\n                    name: this.state.errors.name,\n                    phone: false,\n                    email: this.state.errors.email\n                }\n            })\n        }\n        else if(event.target.id==='regName'){\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\n                this.setState({\n                    errors : {\n                        name: true,\n                        phone: this.state.errors.phone,\n                        email: this.state.errors.email\n                    }\n                })\n            }\n            else this.setState({\n                errors : {\n                    name: false,\n                    phone: this.state.errors.phone,\n                    email: this.state.errors.email\n                }\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n            {\n                this.state.paymentReady ? (\n                    this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={false}/> : (\n                        <Payments\n                            name={this.state.data.regName}\n                            email={this.state.data.regEmail}\n                            phone={this.state.data.regPhone}\n                            amount={this.state.data.amount}\n                            eventData={this.props.eventData}\n                            regData={this.state.data}\n                            back={ () => this.setState({ paymentReady: false }) }\n                        />\n                    )\n                ) : (\n                    <div className=\"Tickets container fit\">\n                        <div className=\"Details\">\n                            <div className=\"fluff\">\n                                <p><i>Events</i></p>\n                                <h2>{this.props.eventData.title}</h2>\n                                <p>Fill in the form and click proceed. \n                                    You will recieve a confirmation email \n                                    after a successful booking.</p>\n                            </div>\n\n                            <div className=\"form\">\n                                <div className=\"container fit\">\n                                    <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regName\" placeholder=\"Name\"/>\n                                    <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regEmail\" placeholder=\"Email\"/>\n                                    <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regPhone\" placeholder=\"Phone\"/>\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\n                                </div>\n                            </div>\n                        </div>\n                        <br/><br/>\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\n                        <br/><br/>\n                        <div className=\"Seats\">\n                            {\n                                typeof this.props.eventData.metadata.price === 'object' ? (\n                                    <div className=\"display container\">\n                                        <img src=\"https://xtacy.org/static/img/seatingTiers.png\" alt=\"seating\"/>\n                                    </div>\n                                ) : console.log()\n                            }\n                            <div className=\"controls container\">\n                                {\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\n                                        <div className=\"tiers\">\n                                            <p>Select a Teir</p>\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\n                                                <option value={0}>Budget</option>\n                                                <option value={1}>Standard</option>\n                                                <option value={2}>Premium</option>\n                                            </select>\n                                        </div>                          \n                                    ) : console.log()\n                                }\n                                <div className=\"selector\">\n                                    <p>Select a Number</p>\n\n                                    <div className=\"number\">\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\n                                        \n                                        <div className=\"buttons\">\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"pricing\">\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.tierPricing + ' per ticket'}</p>\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\n                                    <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\n                                </div>\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\n                            </div>\n                        </div>\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \n                    </div>\n                )\n            }\n            </div>\n        );\n    }\n}\n\nexport default Tickets;","import React, { Component } from 'react';\nimport crypto from 'crypto';\nimport SuccessPage from './SuccessPage';\nimport Payments from './Payments';\n\nimport Booking from '../util/booking';\nimport './css/Compete.css';\nimport '../Global.css'; \n\nconst config = require('../util/config.json');\n\nclass Compete extends Component {\n    constructor() {\n        super();\n        this.state = {\n            paymentReady: false,\n            requiredFulfilled: false,\n            completion: false,\n            data : {\n                eventId: null,\n                regTeamName: null,\n                regTeamEmail: null,\n                regTeamPhone: null,\n                regTeamInst: null,\n                amount: null,\n                members : [],\n                coordinatorMail : null\n            },\n            errors :{\n                email: false,\n                phone: false,\n                number: false\n            },\n            required: [\n                'regTeamName', 'regTeamEmail', 'regTeamPhone'\n            ],\n            takesPayment: false\n        }\n    }\n\n    componentDidMount() {\n        let _data = this.state.data, req, _takesPayment=false\n        _data.eventId = this.props.eventData.eventId\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\n                _data.members.push({ index: i, name: null, email: null })\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'members/name', 'members/email' ]\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'regTeamLeader', 'regTeamSize' ]\n        }\n        _data.amount = (this.props.eventData.metadata.price)\n        if(this.props.eventData.coordinatorMail!=null){\n            _data.coordinatorMail = this.props.eventData.coordinatorMail\n        }\n        else { _data.coordinatorMail = 'javed.azimus@gmail.com' }   //email used for dumping purposes, will forward emails to coordinators as the emails keep coming\n        if(this.props.eventData.metadata.paid && this.props.eventData.metadata.instantPayment)\n            _takesPayment = true\n        this.setState({\n            data: _data,\n            required: req,\n            takesPayment: _takesPayment\n        })\n    }\n\n    handleChange = (event) => {\n        let payload = null, truth = true, _data = this.state.data\n        if ( event.target.value!==\"\" ) payload = event.target.value\n        if (event.target.id.includes('/')){\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\n            _data.members[index][identifier] = payload\n        } else\n            _data[event.target.id] = payload \n\n        for ( let field of this.state.required ) {\n            if(field.includes('/')) {\n                field = field.split('/')\n                if(this.props.eventData.metadata.teamStrictType==='strict'){\n                    for ( let member of this.state.data.members )\n                        if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\n                            truth = false\n                }\n                else if(this.props.eventData.metadata.teamStrictType==='flex'){\n                    if(this.state.data.members[0][field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null))\n                            truth = false\n                }\n            } else {\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\n                        truth = false\n            }\n        }\n        this.setState({\n            requiredFulfilled: truth,\n            data: _data\n        })\n    }\n\n    action = () => {\n        if(this.state.requiredFulfilled) {\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\n                if(this.state.takesPayment) {\n                    localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\n                    localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\n                    this.setState({ paymentReady: true })\n                } else {\n                    this.success(null)\n                }\n            } else {\n                alert('Please ensure the data entered is correct')\n            }\n        } else {\n            alert('Please fill in the required fields')\n        }\n    }\n\n    success = (txn) => {\n        if(!this.state.takesPayment) txn = 'NON_PAID'\n        let hashSequence = JSON.stringify(this.state.data)\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\n        Booking.competeRegister(this.state.data, hmac, txn)\n            .then((res)=>{\n                if (res.validation)\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\n            }).catch(()=>{\n                alert('Error')\n            })\n    }\n    \n    validate = (event) => {\n        if(event.target.id==='regTeamEmail') {\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\n                this.setState({\n                    errors : {\n                        name: this.state.errors.name,\n                        phone: this.state.errors.phone,\n                        email: true\n                    }\n                })\n            } else this.setState({\n                errors : {\n                    name: this.state.errors.name,\n                    phone: this.state.errors.phone,\n                    email: false\n                }\n            })\n        }\n        else if (event.target.id==='regTeamPhone'){\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \n                let _err = this.state.errors\n                _err['phone'] = true\n                this.setState({\n                    errors : _err\n                })\n            }\n            else this.setState({\n                errors : {\n                    name: this.state.errors.name,\n                    phone: false,\n                    email: this.state.errors.email\n                }\n            })\n        }\n        else if(event.target.id==='regTeamName'){\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\n                this.setState({\n                    errors : {\n                        name: true,\n                        phone: this.state.errors.phone,\n                        email: this.state.errors.email\n                    }\n                })\n            }\n            else this.setState({\n                errors : {\n                    name: false,\n                    phone: this.state.errors.phone,\n                    email: this.state.errors.email\n                }\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n            {\n                this.state.paymentReady ? (\n                    this.state.takesPayment ? (\n                        <Payments\n                            name={this.props.eventData.metadata.teamSizeType==='loose'?(this.state.data.regTeamLeader):(this.state.data.members[0].name)}\n                            email={this.state.data.regTeamEmail}\n                            phone={this.state.data.regTeamPhone}\n                            amount={this.state.data.amount}\n                            eventData={this.props.eventData}\n                            regData={this.state.data}\n                            back={ () => this.setState({ paymentReady: false }) }\n                        />\n                    ) : (\n                        this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={this.state.takesPayment}/> : console.log()\n                    )\n                ) : (\n                    <div className=\"Compete container fit\">\n                        <div className=\"Team\">\n                            <div className=\"fluff\">\n                                <p><i>Competitions</i></p>\n                                <h2>{this.props.eventData.title}</h2>\n                                <p>Fill in the form and click register. \n                                    You will recieve a confirmation email\n                                    after a successful registration.</p>\n                            </div>\n\n                            <div className=\"form\">\n                                <div className=\"container\">\n                                    <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\n                                    <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\n                                    <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\n                                    {\n                                        this.props.eventData.metadata.collectTeamGit ? (\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\n                                                placeholder=\"Team GitHub (Optional)\"/>\n                                        ) : console.log()\n                                    }\n                                    {\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\n                                            <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\n                                        ) : console.log()\n                                    }\n                                    {\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\n                                                max={this.props.eventData.metadata.teamSize} min={0}/>\n                                        ) : console.log()\n                                    }\n\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \n                                        placeholder=\"Team Institution (Optional)\"/>\n                                </div>\n                            </div>\n                        </div>\n\n                        {\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\n                                <div>\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\n                                    <div className=\"MemberData\">\n                                    {\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\n                                    }\n                                    </div>\n                                </div>\n                            ) : console.log()\n                        }\n\n                        {\n                            this.props.eventData.metadata.paid ? (\n                                this.state.takesPayment?(\n                                    <div className=\"pricing\">\n                                        <p id=\"trP\">{'\\u20B9 ' + this.state.data.amount + ' per team'}</p>\n                                        <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\n                                        <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\n                                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\n                                    </div>\n                                ):(\n                                    <div className=\"pricing\">\n                                        <h3>{'\\u20B9 ' + this.state.data.amount + ' per team'}</h3>\n                                        <p id=\"tax\"><i>You will be required to pay this amount on the spot.</i></p>\n                                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\n                                    </div>\n                                )\n                            ) : (\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\n                            )\n                        }                        \n                    </div>\n                )\n            }\n            </div>\n        );\n    }\n}\n\nclass Member extends Component {\n    \n    render() {\n        let index = this.props.index\n        return (\n            <div className=\"Member container fit\">\n                <h3 className=\"title\">\n                    Team Member { index + 1 }\n                    {\n                        index === 0 ? (\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\n                        ) : console.log()\n                    }\n                </h3>\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\n            </div>\n        );\n    }\n}\n\nexport default Compete;","import React, { Component } from 'react';\nimport Booking from './util/booking';\nimport './Global.css';\n\nimport Register from './components/Register';\nimport Tickets from './components/Tickets';\nimport Compete from './components/Compete';\nimport LoadingPage from './components/LoadingPage';\nimport ErrorPage from './components/ErrorPage';\nimport Loading from './components/partials/Loading';\n\nclass Main extends Component {\n    constructor() {\n        super();\n        this.state = {\n            intent: null,\n            event: null,\n            eventData: null,\n            loaded: false\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.intent!=='gen')\n            // DEBUG ======================================== //\n            // this.setState({\n            //     intent: this.props.intent,\n            //     event: 'dastan',\n            //     eventData: {\n            //         title: 'Mehmood Bhai',\n            //         eventId: 'dastan',\n            //         dates: 16,\n            //         type: this.props.intent,\n            //         published: true,\n            //         metadata: {\n            //             time: '1:00 PM',\n            //             paid: true,\n            //             price: 5,\n            //             teams: false,\n            //             teamSize: null,\n            //             teamSizeType: null,\n            //             collectTeamGit: false,\n            //             conductedBy: 'Daniyal'\n            //         }\n            //     },\n            //     loaded: true\n            // })\n            // ---------------------------------------------- //\n            Booking.getEventData(this.props.event)\n                .then((eventData)=>{\n                    this.setState({\n                        intent: this.props.intent,\n                        event: this.props.event,\n                        eventData: eventData.data,\n                        loaded: true\n                    })\n                }).catch((err)=>{\n                    console.log(err)\n                })\n            // ============================================== //\n        else\n            this.setState({\n                intent: this.props.intent,\n                loaded: true\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"Main\">\n            {\n                this.state.loaded ? (\n                    this.state.intent!== 'gen' ? (\n                        this.state.eventData.published ? (\n                            this.state.intent!=='com' ? (\n                                this.state.intent!=='tic' ? ( \n                                    this.state.intent!=='prm' ? (\n                                        <ErrorPage/>\n                                    ) : ( \n                                        <Register eventData = {this.state.eventData} intent={this.state.intent}/>\n                                    )\n                                ): (\n                                    <Tickets eventData={this.state.eventData}/>\n                                )\n                            ) : (\n                                <Compete eventData={this.state.eventData}/>\n                            )\n                        ) : (\n                            <div className=\"container\">\n                                <Loading/>\n                                <h2>Not Published</h2>\n                                <p>Registrations are disabled for this event</p>\n                            </div>\n                        )\n                    ) : (\n                        <Register eventData={this.state.eventData} intent={this.state.intent}/>\n                    )\n                ) : (\n                    <LoadingPage timeOut={2500}/>\n                )\n            }\n            </div>\n        );\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport crypto from 'crypto';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './components/partials/Header';\nimport Footer from './components/partials/Footer';\nimport Secu from './util/secu';\nimport './Global.css';\n\nimport Main from './Main';\nimport LoadingPage from './components/LoadingPage';\nimport ErrorPage from './components/ErrorPage';\nimport Payments from './components/Payments';\n\nconst config  = require('./util/config.json');\n\nclass Bookings extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            intent: null,\n            event: null,\n            hash: null,\n            ref: null,\n            verified: false\n        }\n    }\n\n    getParams = (location) => {\n        const searchParams = new URLSearchParams(location.search)\n        return ({\n            intent: searchParams.get('int'),\n            event: searchParams.get('evt'),\n            ref: searchParams.get('ref'),\n        })\n    }\n\n    componentDidMount() {\n        // DEBUG ======================================== //\n        // let params = this.getParams(window.location)\n        // if (params.intent==='gen') params.event = 'any'\n        // this.setState({\n        //     intent: params.intent,\n        //     event: params.event,\n        //     ref: params.ref,\n        //     verified: true\n        // })\n        // ---------------------------------------------- //\n        Secu.validateToken().then((result)=>{\n            if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\n                    result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\n                console.log('SR Tokens Verified')\n                Secu.generateSecurityFluff(4);\n                \n                let params = this.getParams(window.location), verified = false, hashSequence, hash\n                let returnKey = localStorage.getItem('x-return-key')\n                let returnPayToken = localStorage.getItem('x-return-pay-token')\n                let returnTxnId = localStorage.getItem('x-txn-id')\n                if(returnKey==='PAY_INITIALIZE' || returnKey===null) {\n                    if (params.intent==='gen') params.event = 'any'\n                    hashSequence = params.intent + config.clientKey + params.event\n                    hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\n                    if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\n                } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\n                    verified = true\n                }\n                this.setState({\n                    intent: params.intent,\n                    event: params.event,\n                    hash: hash,\n                    ref: params.ref,\n                    verified: verified\n                }, () => {console.log()})\n            }\n        }).catch((err)=>{\n            console.error(err)\n        });\n        // ============================================== //\n    }\n    \n    render() {\n        return (\n            <div className=\"Bookings\">\n                <Header/>\n\n                {\n                    this.state.verified ? (\n                        <section>\n                            <Router basename={'/register'}>\n                                <Switch>\n                                    <Route path={'/main'}>\n                                        <Main intent={this.state.intent} event={this.state.event}/>\n                                    </Route>\n                                    \n                                    <Route path={'/payment'} component={Payments}/>\n\n                                    <Route path={'/cancel'} component={ErrorPage}/>\n\n                                    <Route component={ErrorPage}/>\n                                </Switch>\n                            </Router>\n                        </section>\n                    ) : (\n                        <LoadingPage timeOut={2500}/>\n                    )\n                }\n\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default Bookings;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Bookings from './Bookings';\n\nReactDOM.render(<Bookings />, document.getElementById('root'));","const firebase = require('firebase/app');\nrequire('firebase/database');\nrequire('firebase/auth');\nrequire('firebase/firestore');\n\nconst credentials = require('./config.json').firebase;\n\nif (firebase.apps.length===0)\n    firebase.initializeApp(credentials);\n\nexports.firebase = firebase\n\nconst database = firebase.database()\nexports.database = database\n\nconst firestore = firebase.firestore()\nfirestore.settings({ timestampsInSnapshots: true })\nexports.firestore = firestore\n\n/**\n* @author Alisamar Husain\n* \n* Standard Firebase/Firestore Export\n* ---------------------------------\n* Import the object by either\n*   const db = require('./database')\n* or\n*   import db from './database';\n* \n* Use the object to get a database\n* namespace by 'db.firebase.database()'\n* Check the firebase docs for more.\n*/","const config = require('./config.json');\n\nexports.validateToken = () => {\n    return new Promise((resolve, reject)=>{\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\n                resolve('CSR_TIME_VALID');\n        } else {\n            const valReq = new XMLHttpRequest();\n            valReq.open('POST', '/_secu/csrtoken/', true);\n            valReq.setRequestHeader('Content-Type', 'application/json');\n\n            var key = localStorage.getItem( config.csrfTokenNameKey );\n            var token = localStorage.getItem( config.csrfTokenName+key );\n            if(key===null) {\n                let k = localStorage.getItem( config.csrfTokenNameKey );\n                localStorage.removeItem( config.csrfTokenNameKey );\n                localStorage.removeItem( config.csrfTokenName+k );\n                reject('CSR_TOKEN_INVALID');\n            } else {\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\n            }\n            \n            valReq.onreadystatechange = () => {\n                if(valReq.readyState===4 && valReq.status===200) {\n                    let valRes = JSON.parse(valReq.response);\n                    if(valRes.status===true) {\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\n                        resolve('CSR_TOKEN_VALID');\n                    } else if(valRes.status===false) {\n                        localStorage.removeItem(config.csrfTokenName+key);\n                        key = valRes.key;\n                        token = valRes.token;\n                        localStorage.setItem(config.csrfTokenNameKey, key);\n                        localStorage.setItem(config.csrfTokenName+key, token);\n                        resolve('CSR_TOKEN_RENEW');\n                    } else {\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\n                        localStorage.removeItem( config.csrfTokenNameKey );\n                        localStorage.removeItem( config.csrfTokenName+k );\n                        reject('CSR_TOKEN_INVALID');\n                    }\n                }\n            }\n        }\n    })\n}\n\nexports.generateSecurityFluff = (amount) => {\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\n    for(let i=0;i<amount;i++) {\n        let tag = arr[i%4];\n        let fluff = \"\";\n        let fluff_len = Math.floor(Math.random()*24);\n        if(i%2===0) {\n            for(let n=0;n<fluff_len;n++)\n                fluff += Math.floor(Math.random()*36).toString('36')\n        } else {\n            for(let n=0;n<fluff_len;n++)\n                fluff += Math.floor(Math.random()*10)\n        }\n        localStorage.setItem(tag, fluff);\n    }    \n}"],"sourceRoot":""}