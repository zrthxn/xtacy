{"version":3,"sources":["util/booking.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/SuccessPage.jsx","components/Register.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/PaymentPortal.jsx","components/Payments.jsx","components/Tickets.jsx","components/Compete.jsx","Main.jsx","Bookings.jsx","index.js","util/secu.js","util/database.js"],"names":["crypto","require","config","exports","validateData","data","schema","generalRegister","hash","csrf","key","localStorage","getItem","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","validation","rgn","responseHmac","createHmac","clientKey","update","digest","competeRegister","comReq","comRes","ticketRegister","ticReq","ticRes","getEventData","eventId","eventReq","eventRes","i","arb","atob","calcTaxInclAmount","amt","parseFloat","toFixed","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","Component","Footer","src","alt","role","aria-label","Loading","SuccessPage","props","partials_Loading","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","payload","truth","_data","state","target","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","required","Symbol","iterator","next","done","field","err","return","setState","requiredFulfilled","action","hashSequence","hmac","Booking","then","res","completion","catch","alert","regName","regEmail","regPhone","regInst","components_SuccessPage","onChange","placeholder","onClick","bind","ErrorPage","errorCode","removeItem","errorContent","LoadingPage","Timer","_isMounted","timeOut","setTimeout","components_ErrorPage","PaymentPortal","paypal","showButton","window","React","ReactDOM","_this$props","isScriptLoaded","isScriptLoadSucceed","nextProps","_this2","Button","react","style","label","layout","size","shape","color","branding","funding","allowed","FUNDING","CARD","CREDIT","env","clientId","commit","payment","authorizedPayment","onAuthorize","actions","POST_DATA","paymentID","payerID","txnID","txnid","execReq","executedPayment","onSuccess","paid","cancelled","paymentData","paymentError","onCancel","onError","scriptLoader","Payments","paymentSuccesful","success","console","log","paymentCancelled","back","code","error","setItem","paymentAuthorized","CLIENT","paymentId","amount","base","tax","total","payer","name","email","phone","eventData","eventDescription","info","authReq","client","_this3","components_PaymentPortal","payerId","components_LoadingPage","Tickets","handleTierChange","_trP","metadata","price","number","tier","tierPricing","handleSizeChange","paymentReady","specialRequests","trP","components_Payments","title","defaultValue","passive","Compete","includes","identifier","split","index","members","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","txn","regTeamName","regTeamEmail","regTeamPhone","regTeamInst","req","collectTeamGit","teamSizeType","teamSize","push","max","min","map","mem","Compete_Member","Member","Main","intent","loaded","published","components_Tickets","components_Compete","components_Register","Bookings","getParams","location","searchParams","URLSearchParams","search","get","ref","verified","Secu","validateToken","result","generateSecurityFluff","params","createHash","sessionStorage","hashToken","partials_Header","BrowserRouter","basename","Switch","Route","path","src_Main","component","partials_Footer","render","src_Bookings","document","getElementById","Date","getTime","valReq","k","valRes","arr","tag","fluff","fluff_len","Math","floor","random","n","toString","firebase","credentials","apps","length","initializeApp","database","firestore","settings","timestampsInSnapshots"],"mappings":"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","file":"static/js/main.32c97f97.chunk.js","sourcesContent":["const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', 'https://xtacy.org/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', 'https://xtacy.org/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.ticketRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const ticReq = new XMLHttpRequest();\r\n        ticReq.open('POST', 'https://xtacy.org/_register/tic/', true);\r\n        ticReq.setRequestHeader('Content-Type', 'application/json');\r\n        ticReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        ticReq.onreadystatechange = () => {\r\n            if(ticReq.readyState===4 && ticReq.status===200) {\r\n                let ticRes = JSON.parse(ticReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: ticRes.validation, rgn: ticRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (ticRes.hash===responseHmac)\r\n                    resolve(ticRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', 'https://xtacy.org/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.calcTaxInclAmount = (amt) => {\r\n    /**\r\n     * Calculates the net amout to be paid \r\n     * such that the amount recieved after deductions is\r\n     * equal to the fee of the event\r\n    */\r\n    // Flat transaction fee in Rupees\r\n    const flatFee = 3\r\n\r\n    // Transaction fee in percent\r\n    const txnFeePct = 2.5\r\n    \r\n    // Applicable TAX in percent\r\n    // Note: TAX is applied on the transaction fee only\r\n    const taxPct = 18\r\n    \r\n    return (\r\n        parseFloat(\r\n            (amt + flatFee) / \r\n            (1 - txnFeePct/100 - ((taxPct/100) * (txnFeePct/100)))            \r\n        ).toFixed(2)\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                <li><a href=\"/about\">about</a></li>\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/register\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\"></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            <li><a href=\"/about\">about</a></li>\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/register\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"base container\">\r\n\t\t\t\t\t<div className=\"collab\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"base-title\">xtacy</span><br/>\r\n\t\t\t\t\t\t\tThe annual techno-cultural extravaganza organized by Faculty of Engineering, Jamia Millia Islamia\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"collab-imgs\">\r\n\t\t\t\t\t\t\t<img src=\"http://xtacy.org:3000/static/img/collaborators.png\" alt=\"\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = (props) => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container fit\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <div>\r\n                    <b>Your registration was successful</b><br/><br/>\r\n                    \r\n                    Your registration number is\r\n                    <div className=\"rgn\">{ props.rgn }</div>\r\n                    <br/>\r\n\r\n                    <p className=\"center\">\r\n                        We have sent a confirmation message on the email you entered. If you don't recieve \r\n                        it in the next few minutes, please contact us \r\n                        at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                    </p>\r\n\r\n                    <span><a href=\"/terms\">Terms</a> | <a href=\"/\">Home</a></span>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\n\r\nimport SuccessPage from './SuccessPage';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            let hashSequence = JSON.stringify(this.state.data)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            Booking.generalRegister(this.state.data, hmac)\r\n                .then((res)=>{\r\n                    if (res.validation)\r\n                        this.setState({ completion: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Error')\r\n                })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? (\r\n                    <SuccessPage rgn={this.state.rgn}/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>                        \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    const errorCode = localStorage.getItem('payment-error-code')\r\n    localStorage.removeItem('payment-error-code')\r\n    var errorContent = 'This page isn\\'t working.'\r\n\r\n    switch (errorCode) {\r\n        case 'CSRF_TIMEOUT':\r\n            errorContent = 'The page timed out.'\r\n            break\r\n        case 'SERVER_ERROR':\r\n            errorContent = 'There was a server error.'\r\n            break\r\n        case 'PORTAL_ERROR':\r\n            errorContent = 'The payment service may be down.'\r\n            break\r\n        case 'RESPONSE_HASH_MISMATCH':\r\n            errorContent = 'The payment couldn\\'t be verified.'\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesn't<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    <b>{ errorContent }</b><br/><br/>\r\n                    Try to reload the page or go back. If the issue persists, tell us about it at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport crypto from 'crypto';\r\nimport scriptLoader from 'react-async-script-loader';\r\nimport Loading from './partials/Loading';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass PaymentPortal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            paypal: null,\r\n            showButton: false\r\n        }\r\n        window.React = React;\r\n        window.ReactDOM = ReactDOM;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(window.paypal) {\r\n            const { isScriptLoaded, isScriptLoadSucceed } = this.props\r\n            if (isScriptLoaded && isScriptLoadSucceed)\r\n                this.setState({ showButton: true, paypal: window.paypal })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { isScriptLoaded, isScriptLoadSucceed } = nextProps\r\n        const isLoadedButWasntLoadedBefore = (!this.state.showButton) && (!this.props.isScriptLoaded) && (isScriptLoaded)\r\n        if (isLoadedButWasntLoadedBefore)\r\n          if (isScriptLoadSucceed) \r\n            this.setState({ showButton: true, paypal: window.paypal })\r\n    }\r\n\r\n    render() {\r\n        const authorizedPayment = () => { return this.props.authorizedPayment }\r\n\r\n        const executePayment = (data, actions) => {\r\n            let POST_DATA = {\r\n                paymentID: this.props.authorizedPayment,\r\n                payerID: '',\r\n                txnID: this.props.txnid\r\n            }\r\n\r\n            let hashSequence = JSON.stringify(POST_DATA)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            \r\n            const execReq = new XMLHttpRequest()\r\n            execReq.open('POST', 'https://xtacy.org/_payment/execute/', true)\r\n            execReq.setRequestHeader('Content-Type', 'application/json')\r\n            execReq.send(JSON.stringify({\r\n                data: POST_DATA, \r\n                csrf: {\r\n                    key: localStorage.getItem(config.csrfTokenNameKey),\r\n                    token: localStorage.getItem(config.csrfTokenName + \r\n                        localStorage.getItem(config.csrfTokenNameKey))\r\n                },\r\n                checksum: hmac\r\n            }));\r\n\r\n            execReq.onreadystatechange = () => {\r\n                if(execReq.readyState===4 && execReq.status===200) {\r\n                    let executedPayment = JSON.parse(atob(JSON.parse(execReq.response).data))\r\n                    let responseHmac = crypto.createHmac('sha256', config.clientKey).update(JSON.stringify(executedPayment.payment)).digest('hex')\r\n                    if(executedPayment.hash === responseHmac)\r\n                        this.props.onSuccess({\r\n                            paid: true,\r\n                            cancelled: false,\r\n                            paymentData: data\r\n                        })\r\n                    else\r\n                        this.paymentError('RESPONSE_HASH_MISMATCH')\r\n                }\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n            {\r\n                this.state.showButton ? (\r\n                    <this.state.paypal.Button.react\r\n                        style={{\r\n                            label: 'buynow',\r\n                            layout: 'vertical',\r\n                            size: 'responsive',\r\n                            shape: 'rect',\r\n                            color: 'blue',\r\n                            branding: true\r\n                        }}\r\n                        funding= {\r\n                            {\r\n                                allowed: [\r\n                                    this.state.paypal.FUNDING.CARD,\r\n                                    this.state.paypal.FUNDING.CREDIT\r\n                                ]\r\n                            }\r\n                        }\r\n                        env={this.props.env}\r\n                        clientId={this.props.clientId}\r\n                        commit={true}\r\n                        payment={ authorizedPayment }\r\n                        onAuthorize={ executePayment }\r\n                        onCancel={this.props.onCancel}\r\n                        onError={this.props.onError}\r\n                    />\r\n                ) : (\r\n                    <Loading/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaymentPortal);","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport LoadingPage from './LoadingPage';\r\nimport PaymentPortal from './PaymentPortal';\r\n\r\nimport Database from '../util/database';\r\nimport Booking from '../util/booking';\r\nimport './css/Payments.css';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentAuthorized: false,\r\n            CLIENT: null,\r\n            txnID: null,\r\n            paymentId: null,\r\n            amount: null,\r\n            data : null,\r\n            required: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let base = this.props.amount, amt = Booking.calcTaxInclAmount(this.props.amount)\r\n        let POST_DATA = {\r\n            amount: {\r\n                base: base,\r\n                tax:  (amt - base).toFixed(2),\r\n                total: amt\r\n            },\r\n            payer: {\r\n                name: this.props.name,\r\n                email: this.props.email,\r\n                phone: this.props.phone,\r\n            },\r\n            eventData: {\r\n                eventDescription: this.props.info\r\n            }\r\n        }\r\n        \r\n        let hashSequence = JSON.stringify(POST_DATA)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        \r\n        const authReq = new XMLHttpRequest()\r\n        authReq.open('POST', 'https://xtacy.org/_payment/authorize/', true)\r\n        authReq.setRequestHeader('Content-Type', 'application/json')\r\n        authReq.send(JSON.stringify({\r\n            data: POST_DATA, \r\n            csrf: {\r\n                key: localStorage.getItem(config.csrfTokenNameKey),\r\n                token: localStorage.getItem(config.csrfTokenName + localStorage.getItem(config.csrfTokenNameKey))\r\n            }, \r\n            checksum: hmac\r\n        }));\r\n\r\n        authReq.onreadystatechange = () => {\r\n            if(authReq.readyState===4 && authReq.status===200) {\r\n                let authorizedPayment = JSON.parse(atob(JSON.parse(authReq.response).data))\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(JSON.stringify(authorizedPayment.payment)).digest('hex')            \r\n                if(authorizedPayment.hash === responseHmac) {\r\n                    this.setState({\r\n                        amount: {\r\n                            base: base,\r\n                            total: amt\r\n                        },\r\n                        paymentId: authorizedPayment.payment.id,\r\n                        txnID: authorizedPayment.txnID,\r\n                        CLIENT: authorizedPayment.client,\r\n                        data: this.props.data,\r\n                        paymentAuthorized: true\r\n                    })\r\n                } else\r\n                    this.paymentError('RESPONSE_HASH_MISMATCH')\r\n            } else if(authReq.readyState===4 && authReq.status===403) {\r\n                this.paymentError('CSRF_TIMEOUT')\r\n            } else if(authReq.readyState===4 && authReq.status===500) {\r\n                this.paymentError('SERVER_ERROR')\r\n            }\r\n        }        \r\n    }\r\n\r\n    paymentSuccesful = (success) => {\r\n        console.log('PAYMENT_SUCCESSFUL')\r\n        this.props.success(success)\r\n    }\r\n\r\n    paymentCancelled = () => {\r\n        console.log('PAYMENT_CANCELLED')\r\n        \r\n        // Database.firestore.collection('transactions').doc(this.state.txnID).update({\r\n        //         status: 'CANCELLED',\r\n        //         verified: false\r\n        //     }).then(()=>{\r\n                this.props.back()\r\n        //     }).catch((err)=>{\r\n        //         this.paymentError()\r\n        //     })\r\n    }\r\n\r\n    paymentError = (code) => {\r\n        console.error('PAYMENT_FAILED', code)\r\n        localStorage.setItem('payment-error-code', code)\r\n        \r\n        // Database.firestore.collection('transactions').doc(this.state.txnID).update({\r\n        //         status: 'ERROR',\r\n        //         verified: false\r\n        //     }).then(()=>{\r\n                this.setState({ paymentAuthorized: false })\r\n        //     }).catch((err)=>{\r\n        //         console.error(err)\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        const { CLIENT } = this.state\r\n\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n            {\r\n                this.state.paymentAuthorized ? (\r\n                    <div>\r\n                        <h2>Payments Page</h2>\r\n\r\n                        <div className=\"action container fit\">\r\n                            <button className=\"button\" onClick={ this.props.back.bind(this) }>BACK</button>\r\n                        </div>\r\n\r\n                        <div className=\"pricing\">\r\n                            <p>Total</p>\r\n                            <h3>{'\\u20B9 ' + Booking.calcTaxInclAmount(this.props.amount)}</h3>\r\n                            <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                        </div>\r\n\r\n                        <PaymentPortal\r\n                            env={\"sandbox\"}\r\n                            clientId={CLIENT}\r\n                            authorizedPayment={ this.state.paymentId }\r\n                            payerId={ this.state.txnID }\r\n                            onSuccess={ this.paymentSuccesful }\r\n                            onCancel={ this.paymentCancelled }\r\n                            onError={ () => this.paymentError('PORTAL_ERROR') }\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <LoadingPage timeOut={5000}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport Payments from './Payments';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport { firestore } from '../util/database';\r\nimport Booking from '../util/booking';\r\nimport './css/Tickets.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            tierPricing: null,\r\n            data : {\r\n                eventId: null,\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                specialRequests: null,\r\n                tier: null,\r\n                number: 0,\r\n                amount: 0\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let trP, _data = this.state.data;\r\n        _data.eventId = this.props.eventData.eventId\r\n        if( typeof this.props.eventData.metadata.price === 'number' )\r\n            trP = this.props.eventData.metadata.price\r\n        else if( typeof this.props.eventData.metadata.price === 'object' )\r\n            trP = this.props.eventData.metadata.price[1]\r\n\r\n        _data.number = 1\r\n        _data.tier = 'Standard'\r\n        _data.amount = (trP * _data.number)\r\n        this.setState({\r\n            tierPricing: trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\r\n        _data.amount = (_trP * _data.number)\r\n        switch (event.target.value) {\r\n            case '0':\r\n                _data.tier = 'Budget';\r\n                break;\r\n            case '1':\r\n                _data.tier = 'Standard';\r\n                break;\r\n            case '2':\r\n                _data.tier = 'Premium';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        this.setState({\r\n            tierPricing: _trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleSizeChange = (action) =>{\r\n        let _data = this.state.data\r\n        if(action==='incr' && _data.number!==4) \r\n            _data.number++\r\n        else if(action==='decr' && _data.number!==1)\r\n            _data.number--\r\n        let amt = (this.state.tierPricing * _data.number)\r\n        _data.amount = amt\r\n        this.setState({\r\n            data: _data,\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            this.setState({ paymentReady: true })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (success) => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.ticketRegister(this.state.data, hmac)\r\n            .then((res)=>{\r\n                if (res.validation) \r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.completion ? <SuccessPage rgn={this.state.rgn}/> : (\r\n                        <Payments\r\n                            name={this.state.data.regName}\r\n                            email={this.state.data.regEmail}\r\n                            phone={this.state.data.regPhone}\r\n                            amount={this.state.data.amount}\r\n                            data={this.props.eventData}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <div className=\"Tickets container fit\">\r\n                        <div className=\"Details\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Events</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click proceed. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful booking.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\r\n                        <br/><br/>\r\n                        <div className=\"Seats\">\r\n                            {\r\n                                typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                    <div className=\"display container\">\r\n                                        <img src=\"https://xtacy.org/static/img/seatingTiers.png\" alt=\"seating\"/>\r\n                                    </div>\r\n                                ) : console.log()\r\n                            }\r\n                            <div className=\"controls container\">\r\n                                {\r\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                        <div className=\"tiers\">\r\n                                            <p>Select a Teir</p>\r\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\r\n                                                <option value={0}>Budget</option>\r\n                                                <option value={1}>Standard</option>\r\n                                                <option value={2}>Premium</option>\r\n                                            </select>\r\n                                        </div>                          \r\n                                    ) : console.log()\r\n                                }\r\n                                <div className=\"selector\">\r\n                                    <p>Select a Number</p>\r\n\r\n                                    <div className=\"number\">\r\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\r\n                                        \r\n                                        <div className=\"buttons\">\r\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\r\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.tierPricing + ' per ticket'}</p>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                </div>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamEmail: null,\r\n                regTeamPhone: null,\r\n                regTeamInst: null,\r\n                amount: null,\r\n                members : []\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail', 'regTeamPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'regTeamLeader', 'regTeamSize' ]\r\n        }\r\n        _data.amount = (this.props.eventData.metadata.price)\r\n        \r\n        this.setState({\r\n            data: _data,\r\n            required: req\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                for ( let member of this.state.data.members )\r\n                    if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                        truth = false\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                    truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(this.props.eventData.metadata.paid) {\r\n                this.setState({ paymentReady: true })\r\n            } else {\r\n                this.success(null)\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.competeRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.props.eventData.metadata.paid ? (\r\n                        <Payments\r\n                            name={this.state.data.regTeamName}\r\n                            email={this.state.data.regTeamEmail}\r\n                            phone={this.state.data.regTeamPhone}\r\n                            amount={this.state.data.amount}\r\n                            data={this.props.eventData}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage rgn={this.state.rgn}/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email\r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize} min={0}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                <div className=\"pricing\">\r\n                                    <h3>{'Total: \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                                </div>\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React, { Component } from 'react';\r\nimport Booking from './util/booking';\r\nimport './Global.css';\r\n\r\nimport Register from './components/Register';\r\nimport Tickets from './components/Tickets';\r\nimport Compete from './components/Compete';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Loading from './components/partials/Loading';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            // DEBUG ======================================== //\r\n            // this.setState({\r\n            //     intent: this.props.intent,\r\n            //     event: 'dastan',\r\n            //     eventData: {\r\n            //         title: 'Mehmood Bhai',\r\n            //         eventId: 'dastan',\r\n            //         dates: 16,\r\n            //         type: this.props.intent,\r\n            //         published: true,\r\n            //         metadata: {\r\n            //             time: '1:00 PM',\r\n            //             paid: true,\r\n            //             price: 5,\r\n            //             teams: false,\r\n            //             teamSize: null,\r\n            //             teamSizeType: null,\r\n            //             collectTeamGit: false,\r\n            //             conductedBy: 'Daniyal'\r\n            //         }\r\n            //     },\r\n            //     loaded: true\r\n            // })\r\n            // ---------------------------------------------- //\r\n            Booking.getEventData(this.props.event)\r\n                .then((eventData)=>{\r\n                    this.setState({\r\n                        intent: this.props.intent,\r\n                        event: this.props.event,\r\n                        eventData: eventData.data,\r\n                        loaded: true\r\n                    })\r\n                }).catch((err)=>{\r\n                    console.log(err)\r\n                })\r\n            // ============================================== //\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.eventData.published ? (\r\n                            this.state.intent!=='com' ? (\r\n                                this.state.intent!=='tic' ? (\r\n                                    <ErrorPage/>\r\n                                ) : (\r\n                                    <Tickets eventData={this.state.eventData}/>\r\n                                )\r\n                            ) : (\r\n                                <Compete eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <div className=\"container\">\r\n                                <Loading/>\r\n                                <h2>Not Published</h2>\r\n                                <p>Registrations are disabled for this event</p>\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <Register eventData={this.state.eventData}/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport SuccessPage from './components/SuccessPage';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // DEBUG ======================================== //\r\n        // let params = this.getParams(window.location)\r\n        // if (params.intent==='gen') params.event = 'any'\r\n        // this.setState({\r\n        //     intent: params.intent,\r\n        //     event: params.event,\r\n        //     ref: params.ref,\r\n        //     verified: true\r\n        // })\r\n        // ---------------------------------------------- //\r\n        Secu.validateToken().then((result)=>{\r\n            if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n                    result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n                console.log('SR Tokens Verified')\r\n                Secu.generateSecurityFluff(4);\r\n\r\n                let params = this.getParams(window.location), verified = false\r\n                if (params.intent==='gen') params.event = 'any'\r\n        \r\n                let hashSequence = params.intent + config.clientKey + params.event\r\n                let hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n                if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n        \r\n                this.setState({\r\n                    intent: params.intent,\r\n                    event: params.event,\r\n                    hash: hash,\r\n                    ref: params.ref,\r\n                    verified: verified\r\n                })\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err)\r\n        });\r\n        // ============================================== //\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/register'}>\r\n                                <Switch>\r\n                                    <Route path={'/main'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n                                    \r\n                                    <Route path={'/success'} component={SuccessPage}/>\r\n\r\n                                    <Route path={'/cancel'} component={ErrorPage}/>\r\n\r\n                                    <Route component={ErrorPage}/>\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Bookings from './Bookings';\n\nReactDOM.render(<Bookings />, document.getElementById('root'));","const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', 'http://xtacy.org/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenName+k );\r\n                reject('CSR_TOKEN_INVALID');\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}","const firebase = require('firebase/app');\r\nrequire('firebase/database');\r\nrequire('firebase/auth');\r\nrequire('firebase/firestore');\r\n\r\nconst credentials = require('./config.json').firebase;\r\n\r\nif (firebase.apps.length===0)\r\n    firebase.initializeApp(credentials);\r\n\r\nexports.firebase = firebase;\r\nexports.database = firebase.database();\r\nexports.firestore = firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\n/**\r\n* @author Alisamar Husain\r\n* \r\n* Standard Firebase/Firestore Export\r\n* ---------------------------------\r\n* Import the object by either\r\n*   const db = require('./database')\r\n* or\r\n*   import db from './database';\r\n* \r\n* Use the object to get a database\r\n* namespace by 'db.firebase.database()'\r\n* Check the firebase docs for more.\r\n*/"],"sourceRoot":""}