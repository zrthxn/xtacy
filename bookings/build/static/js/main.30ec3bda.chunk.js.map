{"version":3,"sources":["util/booking.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/SuccessPage.jsx","components/Register.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/Payments.jsx","components/Tickets.jsx","components/Compete.jsx","Main.jsx","Bookings.jsx","index.js","util/database.js","util/secu.js"],"names":["crypto","require","config","exports","validateData","data","schema","generalRegister","hash","csrf","key","localStorage","getItem","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","validation","rgn","responseHmac","createHmac","clientKey","update","digest","competeRegister","txn","comReq","comRes","ticketRegister","ticReq","ticRes","getEventData","eventId","eventReq","eventRes","i","arb","atob","calcTaxInclAmount","amt","parseFloat","toFixed","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","onClick","document","getElementById","checked","Component","Footer","src","alt","role","aria-label","Loading","SuccessPage","props","partials_Loading","payment","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","payload","truth","_data","state","target","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","required","Symbol","iterator","next","done","field","err","return","setState","requiredFulfilled","action","hashSequence","hmac","Booking","then","res","completion","catch","alert","regName","regEmail","regPhone","regInst","components_SuccessPage","onChange","placeholder","bind","ErrorPage","errorCode","removeItem","errorContent","LoadingPage","Timer","_isMounted","timeOut","setTimeout","components_ErrorPage","Payments","paymentSuccesful","console","log","regData","sessionStorage","Database","firestore","collection","doc","txnId","verified","eventData","error","paymentCancelled","back","paymentError","setItem","paymentCreated","returnKey","Math","floor","random","toString","returnPayToken","btoa","window","location","redHotURL","paymentId","amount","_this2","returnTxnId","base","POST_DATA","tax","total","payer","name","email","phone","createReq","paymentData","payment_id","longurl","get","snapshot","components_LoadingPage","Tickets","handleTierChange","_trP","metadata","price","number","tier","tierPricing","handleSizeChange","paymentReady","success","specialRequests","trP","components_Payments","title","defaultValue","passive","Compete","includes","identifier","split","index","members","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","paid","regTeamName","regTeamEmail","regTeamPhone","regTeamInst","req","collectTeamGit","teamSizeType","teamSize","push","max","min","map","mem","Compete_Member","Member","Main","intent","loaded","published","components_Tickets","components_Compete","components_Register","Bookings","getParams","searchParams","URLSearchParams","search","ref","Secu","validateToken","result","generateSecurityFluff","params","createHash","hashToken","partials_Header","BrowserRouter","basename","Switch","Route","path","src_Main","component","partials_Footer","ReactDOM","render","src_Bookings","firebase","credentials","apps","length","initializeApp","database","settings","timestampsInSnapshots","Date","getTime","valReq","k","valRes","arr","tag","fluff","fluff_len","n"],"mappings":"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","file":"static/js/main.30ec3bda.chunk.js","sourcesContent":["const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', '/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeRegister = (data, hash, txn) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', '/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.ticketRegister = (data, hash, txn) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const ticReq = new XMLHttpRequest();\r\n        ticReq.open('POST', '/_register/tic/', true);\r\n        ticReq.setRequestHeader('Content-Type', 'application/json');\r\n        ticReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\r\n\r\n        ticReq.onreadystatechange = () => {\r\n            if(ticReq.readyState===4 && ticReq.status===200) {\r\n                let ticRes = JSON.parse(ticReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: ticRes.validation, rgn: ticRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (ticRes.hash===responseHmac)\r\n                    resolve(ticRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', '/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.calcTaxInclAmount = (amt) => {\r\n    /**\r\n     * Calculates the net amout to be paid \r\n     * such that the amount recieved after deductions is\r\n     * equal to the fee of the event\r\n    */\r\n    // Flat transaction fee in Rupees\r\n    const flatFee = 3\r\n\r\n    // Transaction fee in percent\r\n    const txnFeePct = 2.5\r\n    \r\n    // Applicable TAX in percent\r\n    // Note: TAX is applied on the transaction fee only\r\n    const taxPct = 18\r\n    \r\n    return (\r\n        parseFloat(\r\n            (amt + flatFee) / \r\n            (1 - txnFeePct/100 - ((taxPct/100) * (txnFeePct/100)))            \r\n        ).toFixed(2)\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                <li><a href=\"/about\">about</a></li>\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/signup\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\" onClick={() => {\r\n                        document.getElementById(\"sidebar-toggle\").checked = false;\r\n                    }}></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            <li><a href=\"/about\">about</a></li>\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/signup\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"base container\">\r\n\t\t\t\t\t<div className=\"collab\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"base-title\">xtacy</span><br/>\r\n\t\t\t\t\t\t\tThe annual techno-cultural extravaganza organized by Faculty of Engineering, Jamia Millia Islamia\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"collab-imgs\">\r\n\t\t\t\t\t\t\t<img src=\"/static/img/collaborators.png\" alt=\"\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = (props) => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container fit\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <div>\r\n                    {\r\n                        props.payment ? (\r\n                            <b>Your payment was successful</b>\r\n                        ) : (\r\n                            <b>Your registration was successful</b>\r\n                        )\r\n                    }\r\n                    \r\n                    <br/><br/>\r\n                    Your registration number is\r\n                    <div className=\"rgn\">{ props.rgn }</div>\r\n                    <br/>\r\n\r\n                    <p className=\"center\">\r\n                        We have sent a confirmation message on the email you entered. If you don't recieve \r\n                        it in the next few minutes, please contact us \r\n                        at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                    </p>\r\n\r\n                    <span><a href=\"/terms\">Terms</a> | <a href=\"/\">Home</a></span>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\n\r\nimport SuccessPage from './SuccessPage';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            let hashSequence = JSON.stringify(this.state.data)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            Booking.generalRegister(this.state.data, hmac)\r\n                .then((res)=>{\r\n                    if (res.validation)\r\n                        this.setState({ completion: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Error')\r\n                })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? (\r\n                    <SuccessPage rgn={this.state.rgn} payment={false}/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>                        \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    const errorCode = localStorage.getItem('payment-error-code')\r\n    localStorage.removeItem('payment-error-code')\r\n    var errorContent = 'This page isn\\'t working.'\r\n\r\n    switch (errorCode) {\r\n        case 'CSRF_TIMEOUT':\r\n            errorContent = 'The page timed out.'\r\n            break\r\n        case 'SERVER_ERROR':\r\n            errorContent = 'There was a server error.'\r\n            break\r\n        case 'PORTAL_ERROR':\r\n            errorContent = 'The payment service may be down.'\r\n            break\r\n        case 'RESPONSE_HASH_MISMATCH':\r\n            errorContent = 'The payment couldn\\'t be verified.'\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesn't<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    <b>{ errorContent }</b><br/><br/>\r\n                    Try to reload the page or go back. If the issue persists, tell us about it at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport LoadingPage from './LoadingPage';\r\n\r\nimport Database from '../util/database';\r\nimport Booking from '../util/booking';\r\nimport './css/Payments.css';\r\nimport SuccessPage from './SuccessPage';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentCreated: false,\r\n            completion: false,\r\n            paymentSuccesful: false,\r\n            txnId: null,\r\n            paymentId: null,\r\n            amount: null,\r\n            data : null,\r\n            required: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let returnKey = localStorage.getItem('x-return-key')\r\n        let returnPayToken = localStorage.getItem('x-return-pay-token')\r\n        let returnTxnId = localStorage.getItem('x-txn-id')\r\n\r\n        if(returnKey==='PAY_INITIALIZE') {\r\n            // Payment Initiate Process\r\n            let base = this.props.amount, amt = Booking.calcTaxInclAmount(this.props.amount)\r\n            let POST_DATA = {\r\n                eventData: this.props.eventData,\r\n                amount: {\r\n                    base: base,\r\n                    tax:  (amt - base).toFixed(2),\r\n                    total: amt\r\n                },\r\n                payer: {\r\n                    name: this.props.name,\r\n                    email: this.props.email,\r\n                    phone: this.props.phone,\r\n                }\r\n            }\r\n            \r\n            let hashSequence = JSON.stringify(POST_DATA)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            \r\n            const createReq = new XMLHttpRequest()\r\n            createReq.open('POST', '/_payment/create/', true)\r\n            createReq.setRequestHeader('Content-Type', 'application/json')\r\n            createReq.send(JSON.stringify({\r\n                data: POST_DATA,\r\n                csrf: {\r\n                    key: localStorage.getItem(config.csrfTokenNameKey),\r\n                    token: localStorage.getItem(config.csrfTokenName + localStorage.getItem(config.csrfTokenNameKey))\r\n                }, \r\n                checksum: hmac\r\n            }));\r\n\r\n            createReq.onreadystatechange = () => {\r\n                if(createReq.readyState===4 && createReq.status===200) {\r\n                    let paymentData = JSON.parse(createReq.response)\r\n                    let responseHmac = crypto.createHmac('sha256', config.clientKey).update(JSON.stringify(paymentData.payment)).digest('hex')            \r\n                    if(paymentData.hash === responseHmac) {\r\n                        localStorage.setItem('x-txn-id', paymentData.txnId)\r\n                        this.setState({\r\n                            amount: {\r\n                                base: base,\r\n                                total: amt\r\n                            },\r\n                            paymentId: paymentData.payment.payment_id,\r\n                            txnId: paymentData.txnId,\r\n                            data: {\r\n                                payer: POST_DATA.payer,\r\n                                eventData: POST_DATA.eventData,\r\n                                regData: this.props.regData\r\n                            },\r\n                            redHotURL: paymentData.payment.longurl,\r\n                            paymentCreated: true\r\n                        })\r\n                    } else\r\n                        this.paymentError('RESPONSE_HASH_MISMATCH')\r\n                } else if(createReq.readyState===4 && createReq.status===403) {\r\n                    this.paymentError('CSRF_TIMEOUT')\r\n                } else if(createReq.readyState===4 && createReq.status===500) {\r\n                    this.paymentError('SERVER_ERROR')\r\n                }\r\n            }\r\n        } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\r\n            // Payment Returned from Server\r\n            localStorage.removeItem('x-return-key')\r\n            localStorage.removeItem('x-return-pay-token')\r\n            localStorage.removeItem('x-txn-id')\r\n            /**\r\n             * @author zrthxn\r\n             * Check for transaction success here\r\n             * The transaction ID is available as returnTxnId\r\n             */\r\n            setTimeout(()=>{\r\n                Database.firestore.collection('transactions').doc(returnTxnId).get()\r\n                .then((snapshot)=>{\r\n                    let paymentData = snapshot.data()\r\n                    if(paymentData.status==='Credit')\r\n                        this.paymentSuccesful({ txnId: returnTxnId })\r\n                    else\r\n                        this.paymentError({ txnId: returnTxnId })\r\n                }).catch(()=>{\r\n                    this.paymentError({ txnId: null })\r\n                })\r\n            }, 2500)\r\n        }\r\n    }\r\n\r\n    paymentSuccesful = (txn) => {\r\n        console.log('PAYMENT_SUCCESSFUL')\r\n        const regData = JSON.parse(atob(sessionStorage.getItem('x-reg-data-bundle')))\r\n        sessionStorage.removeItem('x-reg-data-bundle')\r\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\r\n            status: 'SUCCESS | VERIFIED',\r\n            verified: true\r\n        }).then(()=>{\r\n            let hashSequence = JSON.stringify(regData)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n\r\n            if(this.state.data.eventData.type==='com') {\r\n                Booking.competeRegister(regData, hmac, txn.txnId).then((res)=>{\r\n                    if (res.validation) \r\n                        this.setState({ completion: true, paymentSuccesful: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Payment Recieved. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            } else if(this.state.data.eventData.type==='tic') {\r\n                Booking.ticketRegister(regData, hmac, txn.txnId).then((res)=>{\r\n                    if (res.validation) \r\n                        this.setState({ completion: true, paymentSuccesful: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Payment Recieved. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err);\r\n        })\r\n    }\r\n\r\n    paymentCancelled = () => {\r\n        console.log('PAYMENT_CANCELLED')\r\n        Database.firestore.collection('transactions').doc(this.state.txnId).update({\r\n            status: 'CANCELLED',\r\n        }).then(()=>{\r\n            this.props.back()\r\n        }).catch((err) => console.error(err))\r\n    }\r\n\r\n    paymentError = (txn) => {\r\n        console.error('PAYMENT_FAILED', 'PORTAL_ERROR')\r\n        localStorage.setItem('payment-error-code', 'PORTAL_ERROR')\r\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\r\n            status: 'FAILED | VERIFIED',\r\n        }).then(()=>{\r\n            this.setState({ paymentCreated: false })\r\n        }).catch((err) => console.error(err))\r\n    }\r\n\r\n    action = () => {\r\n        // Redirect to action URL here\r\n        let returnKey = 'KEY'\r\n        for(let i=0;i<24;i++)\r\n            returnKey += Math.floor( Math.random() * 36 ).toString(36)\r\n        let returnPayToken = crypto.createHmac('sha512', config.clientKey).update(returnKey + this.state.txnId).digest('hex')\r\n\r\n        localStorage.setItem('x-return-key', returnKey)\r\n        localStorage.setItem('x-return-pay-token', returnPayToken)\r\n\r\n        sessionStorage.setItem('x-reg-data-bundle', btoa(JSON.stringify(this.state.data.regData)))\r\n\r\n        window.location = this.state.redHotURL\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n            {\r\n                this.state.paymentCreated ? (\r\n                    this.state.completion ? (\r\n                        this.state.paymentSuccesful ? <SuccessPage rgn={ this.state.rgn } payment={true}/> : <ErrorPage/>\r\n                    ) : (\r\n                        <div>\r\n                            <h2>Payments Page</h2>\r\n\r\n                            <div className=\"action container fit\">\r\n                                <button className=\"button\" onClick={ this.props.back.bind(this) }>CANCEL</button>\r\n                            </div>\r\n\r\n                            <div className=\"pricing\">\r\n                                <p>Total</p>\r\n                                <h3>{'\\u20B9 ' + Booking.calcTaxInclAmount(this.props.amount)}</h3>\r\n                                <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                            </div>\r\n\r\n                            <button className=\"button solid green\" onClick={this.action}>PAY</button>\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={5000}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport Payments from './Payments';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport { firestore } from '../util/database';\r\nimport Booking from '../util/booking';\r\nimport './css/Tickets.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            tierPricing: null,\r\n            data : {\r\n                eventId: null,\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                specialRequests: null,\r\n                tier: null,\r\n                number: 0,\r\n                amount: 0\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let trP, _data = this.state.data;\r\n        _data.eventId = this.props.eventData.eventId\r\n        if( typeof this.props.eventData.metadata.price === 'number' )\r\n            trP = this.props.eventData.metadata.price\r\n        else if( typeof this.props.eventData.metadata.price === 'object' )\r\n            trP = this.props.eventData.metadata.price[1]\r\n\r\n        _data.number = 1\r\n        _data.tier = 'Standard'\r\n        _data.amount = (trP * _data.number)\r\n        this.setState({\r\n            tierPricing: trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\r\n        _data.amount = (_trP * _data.number)\r\n        switch (event.target.value) {\r\n            case '0':\r\n                _data.tier = 'Budget';\r\n                break;\r\n            case '1':\r\n                _data.tier = 'Standard';\r\n                break;\r\n            case '2':\r\n                _data.tier = 'Premium';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        this.setState({\r\n            tierPricing: _trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleSizeChange = (action) =>{\r\n        let _data = this.state.data\r\n        if(action==='incr' && _data.number!==4) \r\n            _data.number++\r\n        else if(action==='decr' && _data.number!==1)\r\n            _data.number--\r\n        let amt = (this.state.tierPricing * _data.number)\r\n        _data.amount = amt\r\n        this.setState({\r\n            data: _data,\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n            localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n            this.setState({ paymentReady: true })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.ticketRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation) \r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={false}/> : (\r\n                        <Payments\r\n                            name={this.state.data.regName}\r\n                            email={this.state.data.regEmail}\r\n                            phone={this.state.data.regPhone}\r\n                            amount={this.state.data.amount}\r\n                            eventData={this.props.eventData}\r\n                            regData={this.state.data}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <div className=\"Tickets container fit\">\r\n                        <div className=\"Details\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Events</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click proceed. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful booking.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\r\n                        <br/><br/>\r\n                        <div className=\"Seats\">\r\n                            {\r\n                                typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                    <div className=\"display container\">\r\n                                        <img src=\"https://xtacy.org/static/img/seatingTiers.png\" alt=\"seating\"/>\r\n                                    </div>\r\n                                ) : console.log()\r\n                            }\r\n                            <div className=\"controls container\">\r\n                                {\r\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                        <div className=\"tiers\">\r\n                                            <p>Select a Teir</p>\r\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\r\n                                                <option value={0}>Budget</option>\r\n                                                <option value={1}>Standard</option>\r\n                                                <option value={2}>Premium</option>\r\n                                            </select>\r\n                                        </div>                          \r\n                                    ) : console.log()\r\n                                }\r\n                                <div className=\"selector\">\r\n                                    <p>Select a Number</p>\r\n\r\n                                    <div className=\"number\">\r\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\r\n                                        \r\n                                        <div className=\"buttons\">\r\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\r\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.tierPricing + ' per ticket'}</p>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                </div>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamEmail: null,\r\n                regTeamPhone: null,\r\n                regTeamInst: null,\r\n                amount: null,\r\n                members : []\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail', 'regTeamPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'regTeamLeader', 'regTeamSize' ]\r\n        }\r\n        _data.amount = (this.props.eventData.metadata.price)\r\n        \r\n        this.setState({\r\n            data: _data,\r\n            required: req\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                for ( let member of this.state.data.members )\r\n                    if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                        truth = false\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                    truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(this.props.eventData.metadata.paid) {\r\n                localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n                localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n                this.setState({ paymentReady: true })\r\n            } else {\r\n                this.success(null)\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        if(!this.props.eventData.metadata.paid) txn = 'NON_PAID'\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.competeRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.props.eventData.metadata.paid ? (\r\n                        <Payments\r\n                            name={this.state.data.regTeamName}\r\n                            email={this.state.data.regTeamEmail}\r\n                            phone={this.state.data.regTeamPhone}\r\n                            amount={this.state.data.amount}\r\n                            eventData={this.props.eventData}\r\n                            regData={this.state.data}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={this.props.eventData.metadata.paid}/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email\r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize} min={0}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.data.amount + ' per team'}</p>\r\n                                    <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                                </div>\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React, { Component } from 'react';\r\nimport Booking from './util/booking';\r\nimport './Global.css';\r\n\r\nimport Register from './components/Register';\r\nimport Tickets from './components/Tickets';\r\nimport Compete from './components/Compete';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Loading from './components/partials/Loading';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            // DEBUG ======================================== //\r\n            // this.setState({\r\n            //     intent: this.props.intent,\r\n            //     event: 'dastan',\r\n            //     eventData: {\r\n            //         title: 'Mehmood Bhai',\r\n            //         eventId: 'dastan',\r\n            //         dates: 16,\r\n            //         type: this.props.intent,\r\n            //         published: true,\r\n            //         metadata: {\r\n            //             time: '1:00 PM',\r\n            //             paid: true,\r\n            //             price: 5,\r\n            //             teams: false,\r\n            //             teamSize: null,\r\n            //             teamSizeType: null,\r\n            //             collectTeamGit: false,\r\n            //             conductedBy: 'Daniyal'\r\n            //         }\r\n            //     },\r\n            //     loaded: true\r\n            // })\r\n            // ---------------------------------------------- //\r\n            Booking.getEventData(this.props.event)\r\n                .then((eventData)=>{\r\n                    this.setState({\r\n                        intent: this.props.intent,\r\n                        event: this.props.event,\r\n                        eventData: eventData.data,\r\n                        loaded: true\r\n                    })\r\n                }).catch((err)=>{\r\n                    console.log(err)\r\n                })\r\n            // ============================================== //\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.eventData.published ? (\r\n                            this.state.intent!=='com' ? (\r\n                                this.state.intent!=='tic' ? (\r\n                                    <ErrorPage/>\r\n                                ) : (\r\n                                    <Tickets eventData={this.state.eventData}/>\r\n                                )\r\n                            ) : (\r\n                                <Compete eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <div className=\"container\">\r\n                                <Loading/>\r\n                                <h2>Not Published</h2>\r\n                                <p>Registrations are disabled for this event</p>\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <Register eventData={this.state.eventData}/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Payments from './components/Payments';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // DEBUG ======================================== //\r\n        // let params = this.getParams(window.location)\r\n        // if (params.intent==='gen') params.event = 'any'\r\n        // this.setState({\r\n        //     intent: params.intent,\r\n        //     event: params.event,\r\n        //     ref: params.ref,\r\n        //     verified: true\r\n        // })\r\n        // ---------------------------------------------- //\r\n        Secu.validateToken().then((result)=>{\r\n            if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n                    result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n                console.log('SR Tokens Verified')\r\n                Secu.generateSecurityFluff(4);\r\n                \r\n                let params = this.getParams(window.location), verified = false, hashSequence, hash\r\n                let returnKey = localStorage.getItem('x-return-key')\r\n                let returnPayToken = localStorage.getItem('x-return-pay-token')\r\n                let returnTxnId = localStorage.getItem('x-txn-id')\r\n                if(returnKey==='PAY_INITIALIZE' || returnKey===null) {\r\n                    if (params.intent==='gen') params.event = 'any'\r\n                    hashSequence = params.intent + config.clientKey + params.event\r\n                    hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n                    if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n                } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\r\n                    verified = true\r\n                }\r\n        \r\n                this.setState({\r\n                    intent: params.intent,\r\n                    event: params.event,\r\n                    hash: hash,\r\n                    ref: params.ref,\r\n                    verified: verified\r\n                })\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err)\r\n        });\r\n        // ============================================== //\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/register'}>\r\n                                <Switch>\r\n                                    <Route path={'/main'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n                                    \r\n                                    <Route path={'/payment'} component={Payments}/>\r\n\r\n                                    <Route path={'/cancel'} component={ErrorPage}/>\r\n\r\n                                    <Route component={ErrorPage}/>\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Bookings from './Bookings';\n\nReactDOM.render(<Bookings />, document.getElementById('root'));","const firebase = require('firebase/app');\r\nrequire('firebase/database');\r\nrequire('firebase/auth');\r\nrequire('firebase/firestore');\r\n\r\nconst credentials = require('./config.json').firebase;\r\n\r\nif (firebase.apps.length===0)\r\n    firebase.initializeApp(credentials);\r\n\r\nexports.firebase = firebase\r\n\r\nconst database = firebase.database()\r\nexports.database = database\r\n\r\nconst firestore = firebase.firestore()\r\nfirestore.settings({ timestampsInSnapshots: true })\r\nexports.firestore = firestore\r\n\r\n/**\r\n* @author Alisamar Husain\r\n* \r\n* Standard Firebase/Firestore Export\r\n* ---------------------------------\r\n* Import the object by either\r\n*   const db = require('./database')\r\n* or\r\n*   import db from './database';\r\n* \r\n* Use the object to get a database\r\n* namespace by 'db.firebase.database()'\r\n* Check the firebase docs for more.\r\n*/","const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', '/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenName+k );\r\n                reject('CSR_TOKEN_INVALID');\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}"],"sourceRoot":""}