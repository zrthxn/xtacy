{"version":3,"sources":["util/booking.js","util/secu.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/SuccessPage.jsx","components/Register.jsx","components/TemporaryLoadingScreen.jsx","components/PaymentPortal.jsx","components/Payments.jsx","components/Tickets.jsx","components/Compete.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/Main.jsx","Bookings.jsx","index.js"],"names":["crypto","require","config","exports","validateData","data","schema","generalRegister","hash","csrf","key","localStorage","getItem","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","validation","rgn","responseHmac","createHmac","clientKey","update","digest","competeRegister","comReq","comRes","ticketRegister","ticReq","ticRes","getEventData","eventId","eventReq","eventRes","i","arb","atob","calcTaxInclAmount","amt","parseFloat","toFixed","validateToken","undefined","Date","getTime","valReq","k","removeItem","valRes","setItem","generateSecurityFluff","amount","arr","tag","fluff","fluff_len","Math","floor","random","n","toString","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","Component","Footer","role","aria-label","Loading","SuccessPage","partials_Loading","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","payload","truth","_data","state","target","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","required","Symbol","iterator","next","done","field","err","return","setState","requiredFulfilled","action","hashSequence","hmac","Booking","then","res","completion","catch","alert","regName","regEmail","regPhone","regInst","components_SuccessPage","onChange","placeholder","onClick","bind","TemporaryLoadingScreen","PaymentPortal","props","paypal","showButton","window","React","ReactDOM","_this$props","isScriptLoaded","isScriptLoadSucceed","nextProps","_this2","Button","react","style","layout","size","shape","color","branding","funding","allowed","FUNDING","CARD","CREDIT","env","clientId","commit","payment","authorizedPayment","onAuthorize","actions","request","post","paymentID","payerID","onSuccess","paid","cancelled","paymentData","onCancel","onError","scriptLoader","Payments","paymentSuccesful","success","console","log","paymentFailed","failure","paymentError","paymentAuthorized","CLIENT_ID","txnid","paymentId","authReq","back","components_PaymentPortal","components_TemporaryLoadingScreen","Tickets","handleTierChange","_trP","eventData","metadata","price","number","tier","tierPricing","handleSizeChange","paymentReady","specialRequests","trP","components_Payments","name","email","phone","info","title","src","alt","defaultValue","passive","Compete","includes","identifier","split","index","members","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","regTeamName","regTeamEmail","regTeamPhone","regTeamInst","req","collectTeamGit","teamSizeType","teamSize","push","max","min","map","mem","Compete_Member","Member","ErrorPage","LoadingPage","Timer","_isMounted","timeOut","setTimeout","components_ErrorPage","Main","intent","loaded","dates","time","teams","conductedBy","components_Tickets","components_Compete","components_Register","components_LoadingPage","Bookings","getParams","location","searchParams","URLSearchParams","search","get","ref","verified","params","partials_Header","BrowserRouter","basename","Switch","Route","path","components_Main","component","partials_Footer","render","src_Bookings","document","getElementById"],"mappings":"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","file":"static/js/main.e933e11c.chunk.js","sourcesContent":["const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', 'https://xtacy.org/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', 'https://xtacy.org/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.ticketRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const ticReq = new XMLHttpRequest();\r\n        ticReq.open('POST', 'https://xtacy.org/_register/tic/', true);\r\n        ticReq.setRequestHeader('Content-Type', 'application/json');\r\n        ticReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        ticReq.onreadystatechange = () => {\r\n            if(ticReq.readyState===4 && ticReq.status===200) {\r\n                let ticRes = JSON.parse(ticReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: ticRes.validation, rgn: ticRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (ticRes.hash===responseHmac)\r\n                    resolve(ticRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', 'https://xtacy.org/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.calcTaxInclAmount = (amt) => {\r\n    /**\r\n     * Calculates the net amout to be paid \r\n     * such that the amount recieved after deductions is\r\n     * equal to the fee of the event\r\n    */\r\n    // Flat transaction fee in Rupees\r\n    const flatFee = 3\r\n\r\n    // Transaction fee in percent\r\n    const txnFeePct = 2.5\r\n    \r\n    // Applicable GST in percent\r\n    const gstPct = 18\r\n    \r\n    return parseFloat(\r\n        (amt + flatFee) / \r\n        (1 - txnFeePct/100 - ((gstPct/100) * (txnFeePct/100)) ))\r\n        .toFixed(2)\r\n}","const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', 'http://xtacy.org/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenName+k );\r\n                reject('CSR_TOKEN_INVALID');\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}","import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                <li><a href=\"/about\">about</a></li>\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/register\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\"></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            <li><a href=\"/about\">about</a></li>\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/register\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"footer-links\">\r\n\t\t\t\t\t<div className=\"links\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"/\">Home</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/about\">About</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/contact\">Contact</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/register\">Register</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"faqs\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"/\">FAQs</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/contact\">Contact</a></li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = () => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <p className=\"center\">\r\n                    You have successfully registered!<br/>\r\n                </p>\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\n\r\nimport SuccessPage from './SuccessPage';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            let hashSequence = JSON.stringify(this.state.data)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            Booking.generalRegister(this.state.data, hmac)\r\n                .then((res)=>{\r\n                    if (res.validation)\r\n                        this.setState({ completion: true })\r\n                }).catch(()=>{\r\n                    alert('Error')\r\n                })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? (\r\n                    <SuccessPage/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>                        \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst TemporaryLoadingScreen = () => {\r\n    return (\r\n        <div className=\"TemporaryLoadingScreen\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <p className=\"center\"> loading </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TemporaryLoadingScreen;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport scriptLoader from 'react-async-script-loader';\r\nimport Loading from './partials/Loading';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass PaymentPortal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            paypal: null,\r\n            showButton: false\r\n        }\r\n        window.React = React;\r\n        window.ReactDOM = ReactDOM;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(window.paypal) {\r\n            const { isScriptLoaded, isScriptLoadSucceed } = this.props\r\n            if (isScriptLoaded && isScriptLoadSucceed)\r\n                this.setState({ showButton: true, paypal: window.paypal })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { isScriptLoaded, isScriptLoadSucceed } = nextProps\r\n        const isLoadedButWasntLoadedBefore = (!this.state.showButton) && (!this.props.isScriptLoaded) && (isScriptLoaded)\r\n        if (isLoadedButWasntLoadedBefore)\r\n          if (isScriptLoadSucceed) \r\n            this.setState({ showButton: true, paypal: window.paypal })\r\n    }\r\n\r\n    render() {\r\n        // const authorizePayment = (data, actions) => {\r\n        //     // return actions.request.post('/my-api/create-payment/')\r\n        //     //     .then((res) => {\r\n        //     //         return res.id\r\n        //     //     })\r\n        //     // paypal.rest.payment.create(this.props.env, this.props.clientId, {\r\n        //     //         transactions: [\r\n        //     //             {\r\n        //     //                 amount: {\r\n        //     //                     total: '',\r\n        //     //                     currency: 'INR', //this.props.currency,\r\n        //     //                 }\r\n        //     //             },\r\n        //     //         ],\r\n        //     // })\r\n        // }\r\n\r\n        const authorizedPayment = () => { return this.props.authorizedPayment }\r\n\r\n        const executePayment = (data, actions) => {\r\n            return actions.request.post('http://xtacy.org:3000/_payment/execute/', {\r\n                paymentID: data.paymentID,\r\n                payerID: data.payerID,\r\n                csrf: {\r\n                    key: localStorage.getItem(config.csrfTokenNameKey),\r\n                    token: localStorage.getItem(config.csrfTokenName + localStorage.getItem(config.csrfTokenNameKey))\r\n                }\r\n            }).then(() => {\r\n                this.props.onSuccess({\r\n                    paid: true,\r\n                    cancelled: false,\r\n                    paymentData: data\r\n                })\r\n            })\r\n        }\r\n\r\n        const buttonStyle = {\r\n            layout: 'vertical', // horizontal | vertical\r\n            size: 'medium', // medium | large | responsive\r\n            shape: 'rect', // pill | rect\r\n            color: 'blue', // gold | blue | silver | white | black\r\n            branding: true // optional\r\n        }\r\n\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.showButton ? (\r\n                    <this.state.paypal.Button.react\r\n                        style={ buttonStyle }\r\n                        funding= {\r\n                            {\r\n                                allowed: [\r\n                                    this.state.paypal.FUNDING.CARD,\r\n                                    this.state.paypal.FUNDING.CREDIT\r\n                                ]\r\n                            }\r\n                        }\r\n                        env={this.props.env}\r\n                        clientId={this.props.clientId}\r\n                        commit={true}\r\n                        payment={ authorizedPayment }\r\n                        onAuthorize={ executePayment }\r\n                        onCancel={this.props.onCancel}\r\n                        onError={this.props.onError}\r\n                    />\r\n                ) : (\r\n                    <Loading/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaymentPortal);","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport TemporaryLoadingScreen from './TemporaryLoadingScreen';\r\nimport PaymentPortal from './PaymentPortal';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Payments.css';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentAuthorized: false,\r\n            CLIENT_ID: null,\r\n            txnid: null,\r\n            paymentId: null,\r\n            amount: null,\r\n            data : null,\r\n            required: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let amt = this.props.amount\r\n        if(this.props.calcTaxInclAmount)\r\n            amt = Booking.calcTaxInclAmount(this.props.amount)\r\n\r\n        // let authorizedPayment\r\n        const authReq = new XMLHttpRequest()\r\n        authReq.open('POST', 'http://xtacy.org:3000/_payment/authorize/', false)\r\n        authReq.setRequestHeader('Content-Type', 'application/json')\r\n        authReq.send()\r\n        // authReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        if(authReq.readyState===4 && authReq.status===200) {\r\n            let authorizedPayment = JSON.parse(authReq.response)\r\n            // let responseHashSequence = JSON.stringify({ validation: authorizedPayment.validation, rgn: authorizedPayment.rgn })\r\n            // let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n            this.setState({\r\n                amount: amt,\r\n                clientId: authorizedPayment.CLIENT_ID,\r\n                txnid: authorizedPayment.txnid,\r\n                paymentId: authorizedPayment.id,\r\n                paymentAuthorized: true\r\n            })\r\n        }\r\n    }\r\n\r\n    paymentSuccesful = (success) => {\r\n        console.log('PAYMENT SUCCESSFUL')\r\n        alert('PAYMENT SUCCESSFUL')\r\n    }\r\n\r\n    paymentFailed = (failure) => {\r\n        console.log('PAYMENT FAILED')\r\n        alert('PAYMENT FAILED')\r\n    }\r\n\r\n    paymentError = (err) => {\r\n        console.log(err)\r\n    }\r\n\r\n    render() {\r\n        const { CLIENT_ID } = this.state\r\n\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n                <h2>Payments Page</h2>\r\n\r\n                <div className=\"display\">\r\n                    <div className=\"amount\">\r\n                        <h3>{ this.state.amount }</h3>\r\n                        <p>AMOUNT</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"action\">\r\n                    <button className=\"button\" onClick={ this.props.back.bind(this) }>BACK</button>\r\n                    {\r\n                        this.state.paymentAuthorized ? (\r\n                            <PaymentPortal\r\n                                env={\"sandbox\"}\r\n                                clientId={CLIENT_ID}\r\n                                authorizedPayment={ this.state.paymentId }\r\n                                onSuccess={ this.paymentSuccesful }\r\n                                onCancel={ this.paymentFailed }\r\n                                onError={ this.paymentFailed }\r\n                            />\r\n                        ) : (\r\n                            <TemporaryLoadingScreen/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport Payments from './Payments';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Tickets.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            tierPricing: null,\r\n            data : {\r\n                eventId: null,\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                specialRequests: null,\r\n                tier: null,\r\n                number: 0,\r\n                amount: 0\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let trP, _data = this.state.data;\r\n        _data.eventId = this.props.eventData.eventId\r\n        if( typeof this.props.eventData.metadata.price === 'number' )\r\n            trP = this.props.eventData.metadata.price\r\n        else if( typeof this.props.eventData.metadata.price === 'object' )\r\n            trP = this.props.eventData.metadata.price[1]\r\n\r\n        _data.number = 1\r\n        _data.tier = 'Standard'\r\n        _data.amount = Booking.calcTaxInclAmount(trP * _data.number)\r\n        this.setState({\r\n            tierPricing: trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\r\n        _data.amount = Booking.calcTaxInclAmount(_trP * _data.number)\r\n        switch (event.target.value) {\r\n            case '0':\r\n                _data.tier = 'Budget';\r\n                break;\r\n            case '1':\r\n                _data.tier = 'Standard';\r\n                break;\r\n            case '2':\r\n                _data.tier = 'Premium';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        this.setState({\r\n            tierPricing: _trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleSizeChange = (action) =>{\r\n        let _data = this.state.data\r\n        if(action==='incr' && _data.number!==4) \r\n            _data.number++\r\n        else if(action==='decr' && _data.number!==1)\r\n            _data.number--\r\n        let amt = Booking.calcTaxInclAmount(this.state.tierPricing * _data.number)\r\n        _data.amount = amt\r\n        this.setState({\r\n            data: _data,\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            this.setState({ paymentReady: true })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = () => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.ticketRegister(this.state.data, hmac)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.completion ? <SuccessPage/> : (\r\n                        <Payments\r\n                            name={this.state.data.regName}\r\n                            email={this.state.data.regEmail}\r\n                            phone={this.state.data.regPhone}\r\n                            amount={this.state.data.amount}\r\n                            calcTaxInclAmount={false}\r\n                            info={this.props.eventData.title}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <div className=\"Tickets container fit\">\r\n                        <div className=\"Details\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Events</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click proceed. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful booking.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\r\n                        <br/><br/>\r\n                        <div className=\"Seats\">\r\n                            {\r\n                                typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                    <div className=\"display container\">\r\n                                        <img src=\"https://xtacy.org/static/img/seatingTiers.png\" alt=\"seating\"/>\r\n                                    </div>\r\n                                ) : console.log()\r\n                            }\r\n                            <div className=\"controls container\">\r\n                                {\r\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                        <div className=\"tiers\">\r\n                                            <p>Select a Teir</p>\r\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\r\n                                                <option value={0}>Budget</option>\r\n                                                <option value={1}>Standard</option>\r\n                                                <option value={2}>Premium</option>\r\n                                            </select>\r\n                                        </div>                          \r\n                                    ) : console.log()\r\n                                }\r\n                                <div className=\"selector\">\r\n                                    <p>Select a Number</p>\r\n\r\n                                    <div className=\"number\">\r\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\r\n                                        \r\n                                        <div className=\"buttons\">\r\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\r\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.tierPricing + ' per ticket'}</p>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <h3>{'Total: \\u20B9 ' + this.state.data.amount}</h3>\r\n                                </div>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamEmail: null,\r\n                regTeamPhone: null,\r\n                regTeamInst: null,\r\n                amount: null,\r\n                members : []\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail', 'regTeamPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'regTeamLeader', 'regTeamSize' ]\r\n        }\r\n        _data.amount = Booking.calcTaxInclAmount(this.props.eventData.metadata.price)\r\n        \r\n        this.setState({\r\n            data: _data,\r\n            required: req\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                for ( let member of this.state.data.members )\r\n                    if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                        truth = false\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                    truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(this.props.eventData.metadata.paid) {\r\n                this.setState({ paymentReady: true })\r\n            } else {\r\n                this.success()\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = () => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.competeRegister(this.state.data, hmac)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.props.eventData.metadata.paid ? (\r\n                        <Payments\r\n                            name={this.state.data.regTeamName}\r\n                            email={this.state.data.regTeamEmail}\r\n                            phone={this.state.data.regTeamPhone}\r\n                            amount={this.state.data.amount}\r\n                            calcTaxInclAmount={true}\r\n                            info={this.props.eventData.title}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email\r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize} min={0}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesnt<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    The page you're trying to visit doesn't seem to be working. \r\n                    Try to reload the page or go back. If the issue persists, tell us about it at <a href=\"mailto:tech@xtacy.org\">tech@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React, { Component } from 'react';\r\nimport Booking from '../util/booking';\r\nimport '../Global.css';\r\n\r\nimport Register from './Register';\r\nimport Tickets from './Tickets';\r\nimport Compete from './Compete';\r\nimport LoadingPage from './LoadingPage';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            // DEBUG ======================================== //\r\n            this.setState({\r\n                intent: 'tic',\r\n                event: 'dastan',\r\n                eventData: {\r\n                    \"title\": \"Mehmood Bhai\",\r\n                    \"eventId\": \"dastan\",\r\n                    \"dates\": \"16\",\r\n                    \"type\": \"tic\",\r\n                    \"metadata\": {\r\n                        \"time\": \"1:00 PM\",\r\n                        \"paid\": true,\r\n                        \"price\": 500,\r\n                        \"teams\": false,\r\n                        \"teamSize\": null,\r\n                        \"teamSizeType\": null,\r\n                        \"collectTeamGit\": false,\r\n                        \"conductedBy\": \"Daniyal\"\r\n                    }\r\n                },\r\n                loaded: true\r\n            })\r\n            // ---------------------------------------------- //\r\n            // Booking.getEventData(this.props.event)\r\n            //     .then((eventData)=>{\r\n            //         this.setState({\r\n            //             intent: this.props.intent,\r\n            //             event: this.props.event,\r\n            //             eventData: eventData.data,\r\n            //             loaded: true\r\n            //         })\r\n            //     }).catch((err)=>{\r\n            //         console.log(err)\r\n            //     })\r\n            // ============================================== //\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.intent!=='com' ? (\r\n                            this.state.intent!=='tic' ? (\r\n                                <ErrorPage/>\r\n                            ) : (\r\n                                <Tickets eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <Compete eventData={this.state.eventData}/>\r\n                        )\r\n                    ) : (\r\n                        <Register/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './components/Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // DEBUG ======================================== //\r\n        let params = this.getParams(window.location)\r\n        if (params.intent==='gen') params.event = 'any'\r\n        this.setState({\r\n            intent: params.intent,\r\n            event: params.event,\r\n            ref: params.ref,\r\n            verified: true\r\n        })\r\n        // ---------------------------------------------- //\r\n        // Secu.validateToken().then((result)=>{\r\n        //     if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n        //             result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n        //         console.log('SR Tokens Verified')\r\n        //         Secu.generateSecurityFluff(4);\r\n\r\n        //         let params = this.getParams(window.location), verified = false\r\n        //         if (params.intent==='gen') params.event = 'any'\r\n        \r\n        //         let hashSequence = params.intent + config.clientKey + params.event\r\n        //         let hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n        //         if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n        \r\n        //         this.setState({\r\n        //             intent: params.intent,\r\n        //             event: params.event,\r\n        //             hash: hash,\r\n        //             ref: params.ref,\r\n        //             verified: verified\r\n        //         })\r\n        //     }\r\n        // }).catch((err)=>{\r\n        //     console.error(err)\r\n        // });\r\n        // ============================================== //\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/book'}>\r\n                                <Switch>\r\n                                    <Route path={'/start'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n\r\n                                    <Route component={ErrorPage} />\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Bookings from './Bookings';\n\nReactDOM.render(<Bookings />, document.getElementById('root'));"],"sourceRoot":""}