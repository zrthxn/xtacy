{"version":3,"sources":["util/booking.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/SuccessPage.jsx","components/Payments.jsx","components/AcknowledgmentPage.jsx","components/Register.jsx","components/Tickets.jsx","components/Compete.jsx","Main.jsx","Bookings.jsx","index.js","util/database.js","util/secu.js"],"names":["crypto","require","config","exports","validateData","data","schema","generalRegister","hash","csrf","key","localStorage","getItem","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","validation","rgn","responseHmac","createHmac","clientKey","update","digest","competeRegister","txn","comReq","comRes","bookingAcknowledegment","ackReq","ticketRegister","ticReq","ticRes","getEventData","eventId","eventReq","eventRes","i","arb","atob","calcTaxInclAmount","amt","parseFloat","toFixed","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","onClick","document","getElementById","checked","Component","Footer","src","alt","role","aria-label","Loading","ErrorPage","errorCode","removeItem","errorContent","partials_Loading","LoadingPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Timer","_isMounted","setState","timeOut","state","setTimeout","props","components_ErrorPage","SuccessPage","payment","Payments","paymentSuccesful","console","log","_JSON$parse","sessionStorage","regData","eventData","Database","firestore","collection","doc","txnId","verified","then","hashSequence","hmac","Booking","res","paymentCreated","completion","catch","alert","err","error","paymentCancelled","back","paymentError","setItem","action","returnKey","Math","floor","random","toString","returnPayToken","btoa","tier","window","location","paymentId","amount","required","_this2","returnTxnId","base","POST_DATA","tax","total","payer","name","email","phone","createReq","paymentData","AUTH_TOKEN","concat","API_KEY","title","SALT","createHash","cookies","decodeURIComponent","cookie","split","cVal","length","addedOn","Date","now","components_SuccessPage","bind","URI","method","value","SURL","FURL","components_LoadingPage","AcknowledgmentPage","Register","handleChange","event","payload","truth","_data","target","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","field","return","requiredFulfilled","handleTierChange","premium","errors","ack","validate","match","regName","regEmail","regPhone","regInst","uploading","intent","components_AcknowledgmentPage","onChange","onBlur","placeholder","Tickets","_trP","metadata","price","number","tierPricing","handleSizeChange","paymentReady","success","specialRequests","trP","components_Payments","defaultValue","passive","Compete","includes","identifier","index","members","teamStrictType","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","takesPayment","_err","regTeamName","regTeamEmail","regTeamPhone","regTeamInst","coordinatorMail","req","_takesPayment","collectTeamGit","teamSizeType","teamSize","push","paid","instantPayment","regTeamLeader","max","min","map","mem","Compete_Member","Member","Main","loaded","published","components_Register","components_Tickets","components_Compete","Bookings","getParams","searchParams","URLSearchParams","search","get","ref","Secu","validateToken","result","generateSecurityFluff","params","hashToken","partials_Header","BrowserRouter","basename","Switch","Route","path","src_Main","component","partials_Footer","ReactDOM","render","src_Bookings","firebase","credentials","apps","initializeApp","database","storage","getTime","valReq","k","valRes","arr","tag","fluff","fluff_len","n"],"mappings":"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","file":"static/js/main.68c89909.chunk.js","sourcesContent":["const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', '/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeRegister = (data, hash, txn) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', '/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.bookingAcknowledegment = (data,hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const ackReq = new XMLHttpRequest();\r\n        ackReq.open('POST', '/_register/ack/', true)\r\n        ackReq.setRequestHeader('Content-Type', 'application/json');\r\n        ackReq.send(JSON.stringify({data: data, checksum: hash, csrf: csrf}))\r\n    \r\n        ackReq.onreadystatechange = () => {\r\n            if(ackReq.readyState===4 && ackReq.status===200){\r\n                resolve(data.txn)\r\n            }\r\n        }\r\n    })\r\n}\r\nexports.ticketRegister = (data, hash, txn) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const ticReq = new XMLHttpRequest();\r\n        ticReq.open('POST', '/_register/tic/', true);\r\n        ticReq.setRequestHeader('Content-Type', 'application/json');\r\n        ticReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\r\n\r\n        ticReq.onreadystatechange = () => {\r\n            if(ticReq.readyState===4 && ticReq.status===200) {\r\n                let ticRes = JSON.parse(ticReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: ticRes.validation, rgn: ticRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (ticRes.hash===responseHmac)\r\n                    resolve(ticRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', '/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.calcTaxInclAmount = (amt) => {\r\n    /**\r\n     * Calculates the net amout to be paid \r\n     * such that the amount recieved after deductions is\r\n     * equal to the fee of the event\r\n    */\r\n    // Flat transaction fee in Rupees\r\n    const flatFee = 3\r\n\r\n    // Transaction fee in percent\r\n    const txnFeePct = 2.5\r\n    \r\n    // Applicable TAX in percent\r\n    // Note: TAX is applied on the transaction fee only\r\n    const taxPct = 18\r\n    \r\n    return (\r\n        parseFloat(\r\n            (amt + flatFee) / \r\n            (1 - txnFeePct/100 - ((taxPct/100) * (txnFeePct/100)))            \r\n        ).toFixed(2)\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                {/* <li><a href=\"/about\">about</a></li> */}\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/signup\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\" onClick={() => {\r\n                        document.getElementById(\"sidebar-toggle\").checked = false;\r\n                    }}></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            {/* <li><a href=\"/about\">about</a></li> */}\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/signup\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"base container\">\r\n\t\t\t\t\t<div className=\"collab\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"base-title\">xtacy</span><br/>\r\n\t\t\t\t\t\t\tThe annual techno-cultural extravaganza organized by Faculty of Engineering, Jamia Millia Islamia\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"collab-imgs\">\r\n\t\t\t\t\t\t\t<img src=\"/static/img/collaborators.png\" alt=\"\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    const errorCode = localStorage.getItem('payment-error-code')\r\n    localStorage.removeItem('payment-error-code')\r\n    var errorContent = 'This page isn\\'t working.'\r\n\r\n    switch (errorCode) {\r\n        case 'CSRF_TIMEOUT':\r\n            errorContent = 'The page timed out.'\r\n            break\r\n        case 'SERVER_ERROR':\r\n            errorContent = 'There was a server error.'\r\n            break\r\n        case 'PORTAL_ERROR':\r\n            errorContent = 'The payment service may be down.'\r\n            break\r\n        case 'RESPONSE_HASH_MISMATCH':\r\n            errorContent = 'The payment couldn\\'t be verified.'\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesn't<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    <b>{ errorContent }</b><br/><br/>\r\n                    Try to reload the page or go back. If the issue persists, tell us about it at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = (props) => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container fit\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <div>\r\n                    {\r\n                        props.payment ? (\r\n                            <b>Your payment was successful</b>\r\n                        ) : (\r\n                            <b>Your registration was successful</b>\r\n                        )\r\n                    }\r\n                    \r\n                    <br/><br/>\r\n                    Your registration number is\r\n                    <div className=\"rgn\">{ props.rgn }</div>\r\n                    <br/>\r\n\r\n                    <p className=\"center\">\r\n                        We have sent a confirmation message on the email you entered. If you don't recieve \r\n                        it in the next few minutes, please contact us \r\n                        at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                    </p>\r\n\r\n                    <span><a href=\"/terms\">Terms</a> | <a href=\"/\">Home</a></span>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport LoadingPage from './LoadingPage';\r\n\r\nimport Database from '../util/database';\r\nimport Booking from '../util/booking';\r\nimport './css/Payments.css';\r\nimport SuccessPage from './SuccessPage';\r\nimport ErrorPage from './ErrorPage';\r\nimport { RSA_NO_PADDING } from 'constants';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentCreated: false,\r\n            completion: false,\r\n            paymentSuccesful: false,\r\n            txnId: null,\r\n            paymentId: null,\r\n            amount: null,\r\n            data : null,\r\n            hash: null,\r\n            required: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let returnKey = localStorage.getItem('x-return-key')\r\n        let returnPayToken = localStorage.getItem('x-return-pay-token')\r\n        let returnTxnId = localStorage.getItem('x-txn-id')\r\n\r\n        if(returnKey==='PAY_INITIALIZE') {\r\n            // Payment Initiate Process\r\n            let base = this.props.amount, amt = Booking.calcTaxInclAmount(this.props.amount)\r\n            let POST_DATA = {\r\n                eventData: this.props.eventData,\r\n                amount: {\r\n                    base: base,\r\n                    tax:  (amt - base).toFixed(2),\r\n                    total: amt\r\n                },\r\n                payer: {\r\n                    name: this.props.name,\r\n                    email: this.props.email,\r\n                    phone: this.props.phone,\r\n                }\r\n            }\r\n            \r\n            let hashSequence = JSON.stringify(POST_DATA)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            \r\n            const createReq = new XMLHttpRequest()\r\n            createReq.open('POST', '/_payment/create/', true)\r\n            createReq.setRequestHeader('Content-Type', 'application/json')\r\n            createReq.send(JSON.stringify({\r\n                data: POST_DATA,\r\n                csrf: {\r\n                    key: localStorage.getItem(config.csrfTokenNameKey),\r\n                    token: localStorage.getItem(config.csrfTokenName + localStorage.getItem(config.csrfTokenNameKey))\r\n                }, \r\n                checksum: hmac\r\n            }));\r\n\r\n            createReq.onreadystatechange = () => {\r\n                if(createReq.readyState===4 && createReq.status===200) {\r\n                    let paymentData = JSON.parse(createReq.response)\r\n                    let responseHmac = crypto.createHmac('sha256', config.clientKey).update(paymentData.AUTH_TOKEN).digest('hex')            \r\n                    if(paymentData.hash === responseHmac) {\r\n                        localStorage.setItem('x-txn-id', paymentData.txnId)\r\n                        \r\n                        let hashSequence = `${paymentData.API_KEY}|${paymentData.txnId}|${amt}|` + \r\n                            `${this.props.eventData.title}|${this.props.name}|${this.props.email}|` + \r\n                            `${'XTACY'}||||||||||${paymentData.SALT}`\r\n                        let hash = crypto.createHash('sha512').update(hashSequence).digest('hex')\r\n\r\n                        this.setState({\r\n                            amount: {\r\n                                base: base,\r\n                                total: amt\r\n                            },\r\n                            hash: hash,\r\n                            txnId: paymentData.txnId,\r\n                            paymentData : paymentData,\r\n                            data: {\r\n                                payer: POST_DATA.payer,\r\n                                eventData: POST_DATA.eventData,\r\n                                regData: this.props.regData\r\n                            },\r\n                            paymentCreated: true\r\n                        })\r\n                    } else\r\n                        this.paymentError('RESPONSE_HASH_MISMATCH')\r\n                } else if(createReq.readyState===4 && createReq.status===403) {\r\n                    this.paymentError('CSRF_TIMEOUT')\r\n                } else if(createReq.readyState===4 && createReq.status===500) {\r\n                    this.paymentError('SERVER_ERROR')\r\n                }\r\n            }\r\n        } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\r\n            // Payment Returned from Server\r\n            localStorage.removeItem('x-return-key')\r\n            localStorage.removeItem('x-return-pay-token')\r\n            localStorage.removeItem('x-txn-id')\r\n            let cookies = decodeURIComponent(document.cookie).split('; '), cVal = ''\r\n            for(let i=0; i<cookies.length; i++){\r\n                let cookie = cookies[i].split('=')\r\n                if(cookie[0]==='x-pay-key'){\r\n                    cVal = cookie[1]\r\n                    break;\r\n                }\r\n            }\r\n            if(cVal===config.clientKey){\r\n                Database.firestore.collection('transactions').doc(returnTxnId).update({\r\n                    status: 'success',\r\n                    addedOn: new Date(Date.now())\r\n                }).then(() => {\r\n                    this.paymentSuccesful({ txnId : returnTxnId})\r\n                })\r\n            } else {\r\n                this.paymentError('SERVER_ERROR')\r\n            }\r\n            /**\r\n             * @author zrthxn\r\n             * Check for transaction success here\r\n             * The transaction ID is available as returnTxnId\r\n             */\r\n         //   setTimeout(()=>{\r\n            /*    Database.firestore.collection('transactions').doc(returnTxnId).get()\r\n                .then((snapshot)=>{\r\n                    let paymentData = snapshot.data()\r\n                    if(paymentData.status==='success')\r\n                        this.paymentSuccesful({ txnId: returnTxnId })\r\n                    else\r\n                        this.paymentError({ txnId: returnTxnId })\r\n                }).catch(()=>{\r\n                    this.paymentError({ txnId: null })\r\n                })          */\r\n        //    }, 2500)\r\n        }\r\n    }\r\n\r\n    paymentSuccesful = (txn) => {\r\n        console.log('PAYMENT_SUCCESSFUL')\r\n        const { regData, eventData } = JSON.parse(atob(sessionStorage.getItem('x-data-bundle')))\r\n        sessionStorage.removeItem('x-data-bundle')\r\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\r\n            status: 'SUCCESS | VERIFIED',\r\n            verified: true\r\n        }).then(()=>{\r\n            let hashSequence = JSON.stringify(regData)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n\r\n            if(eventData.type==='com') {\r\n                Booking.competeRegister(regData, hmac, txn.txnId).then((res)=>{\r\n                    if (res.validation) \r\n                        this.setState({ paymentCreated: true, completion: true, paymentSuccesful: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            } else if(eventData.type==='tic') {\r\n                Booking.ticketRegister(regData, hmac, txn.txnId).then((res)=>{\r\n                    if (res.validation) \r\n                        this.setState({ paymentCreated: true, completion: true, paymentSuccesful: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            } else if (eventData.type==='gen'){\r\n                Booking.generalRegister(regData, hmac, txn.txnId).then((res) => {\r\n                    if(res.validation)\r\n                        this.setState({ paymentCreated: true, completion:true, paymentSuccesful:true, rgn: res.rgn })\r\n                }).catch(() => {\r\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err);\r\n        })\r\n    }\r\n\r\n    paymentCancelled = () => {\r\n        console.log('PAYMENT_CANCELLED')\r\n        Database.firestore.collection('transactions').doc(this.state.txnId).update({\r\n            status: 'CANCELLED',\r\n        }).then(()=>{\r\n            this.props.back()\r\n        }).catch((err) => console.error(err))\r\n    }\r\n\r\n    paymentError = (txn) => {\r\n        console.error('PAYMENT_FAILED', 'PORTAL_ERROR')\r\n        localStorage.setItem('payment-error-code', 'PORTAL_ERROR')\r\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\r\n            status: 'FAILED | VERIFIED',\r\n        }).then(()=>{\r\n            this.setState({ paymentCreated: false })\r\n        }).catch((err) => console.error(err))\r\n    }\r\n\r\n    action = () => {\r\n        // Redirect to action URL here\r\n        let returnKey = 'KEY'\r\n        for(let i=0;i<24;i++)\r\n            returnKey += Math.floor( Math.random() * 36 ).toString(36)\r\n        let returnPayToken = crypto.createHmac('sha512', config.clientKey).update(returnKey + this.state.txnId).digest('hex')\r\n\r\n        localStorage.setItem('x-return-key', returnKey)\r\n        localStorage.setItem('x-return-pay-token', returnPayToken)\r\n        sessionStorage.setItem('x-data-bundle', btoa(JSON.stringify(this.state.data)))\r\n        //here send the form to paymentData.URI\r\n        // document.getElementById('payForm').submit()\r\n        if(this.props.eventData.tier==='gold')\r\n            window.location = 'https://www.payumoney.com/paybypayumoney/#/0839A766DA2456A41A64631ABE2C883F'\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n            {\r\n                this.state.paymentCreated ? (\r\n                    this.state.completion ? (\r\n                        this.state.paymentSuccesful ? <SuccessPage rgn={ this.state.rgn } payment={true}/> : <ErrorPage/>\r\n                    ) : (\r\n                        <div>\r\n                            <div className=\"action container fit\">\r\n                                <button className=\"button\" onClick={ this.props.back.bind(this) }>CANCEL</button>\r\n                            </div>\r\n                            <form action={this.state.paymentData.URI} method=\"POST\" name=\"payForm\" id=\"payForm\">\r\n                                <input type =\"hidden\" name=\"key\" value={this.state.paymentData.API_KEY} />\r\n                                <input type=\"hidden\" name=\"hash\" value={this.state.paymentData.hash} /> \r\n                                <input type=\"hidden\" name=\"txnid\" value={this.state.paymentData.txnId} />\r\n                                <input type=\"hidden\" name=\"firstname\" value={this.props.name} />                                \r\n                                <input type=\"hidden\" name=\"service_provider\" value=\"payu_paisa\" />\r\n                                <input type=\"hidden\" name=\"amount\" value ={this.state.amount.total} />\r\n                                <input type=\"hidden\" name=\"email\" value={this.props.email} />\r\n                                <input type=\"hidden\" name=\"phone\" value={this.props.phone} />\r\n                                <input type=\"hidden\" name=\"productinfo\" value={this.props.eventData.title} />\r\n                                <input type=\"hidden\" name=\"surl\" value={this.state.paymentData.SURL} />\r\n                                <input type=\"hidden\" name=\"furl\" value={this.state.paymentData.FURL} />\r\n                                <input type=\"hidden\" name=\"udf1\" value=\"XTACY\"/>\r\n                                <input type=\"hidden\" name=\"hash\" value={this.state.hash} />\r\n                                    <div className=\"pricing\">\r\n                                        <p>Total</p>\r\n                                        <h3>{'\\u20B9 ' + Booking.calcTaxInclAmount(this.props.amount)}</h3>\r\n                                        <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    </div>\r\n                                    <p>\r\n                                        By clicking on PAY you agree to the Xtacy terms and conditions.\r\n                                    </p>\r\n                                <button className=\"button solid green\" type=\"button\" onClick = {this.action.bind(this)}>PAY</button>\r\n                            </form> \r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={10000}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst AcknowledgmentPage = (props) => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container fit\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <div>\r\n                    {\r\n                        props.payment ? (\r\n                            <b>Your payment was successful</b>\r\n                        ) : (\r\n                            <div>\r\n                                <b>Your request has been successfully received</b><br />\r\n                                <b>Our team will provide you a registration ID after manually verifying your screenshot, on your registered mail</b>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    \r\n                    <br/><br/>\r\n                    Your acknowledgment number is\r\n                    <div className=\"rgn\">{ props.rgn }</div>\r\n                    <br/>\r\n\r\n                    <p className=\"center\">\r\n                        We have sent an acknowledgment message on the email you entered. If you don't recieve \r\n                        it in the next few minutes, please contact us \r\n                        at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                    </p>\r\n\r\n                    <span><a href=\"/terms\">Terms</a> | <a href=\"/\">Home</a></span>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AcknowledgmentPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\nimport Payments from './Payments';\r\n\r\nimport { storage } from '../util/database';\r\nimport SuccessPage from './SuccessPage';\r\nimport CustomUploadButton from 'react-firebase-file-uploader/lib/CustomUploadButton';\r\nimport AcknowledegmentPage from './AcknowledgmentPage';\r\nimport { throws } from 'assert';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null,\r\n                tier:'standard',\r\n                amount:0\r\n            },\r\n            txn: '',\r\n            uploading : false,\r\n            premium:false,\r\n            errors: {\r\n                email: false,\r\n                phone: false,\r\n                name: false\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        var ack = ''\r\n        for(let i=0; i<6; i++){\r\n            ack += Math.floor(Math.random()*10)\r\n        }\r\n        let _data = this.state.data\r\n        if(this.props.intent==='gen'){\r\n            _data.tier = 'standard'\r\n            _data.amount=0\r\n            this.setState({\r\n                premium: false,\r\n                data:_data,\r\n                txn : ack\r\n            })\r\n        }\r\n        else if(this.props.intent==='prm'){\r\n            _data.tier = 'gold'\r\n            _data.amount = 250\r\n            this.setState({\r\n                premium: true,\r\n                data: _data,\r\n                txn: ack\r\n            })\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data\r\n        if(event.target.value==='gold'){\r\n            _data.amount=250\r\n            _data.tier='gold'\r\n            this.setState({\r\n                premium:true,\r\n                data:_data\r\n            })\r\n        }\r\n        else {\r\n            _data.amount=0\r\n            _data.tier='standard'\r\n            this.setState({\r\n                premium:false,\r\n                data:_data\r\n            })\r\n        }\r\n    }\r\n    \r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\r\n                if(!this.state.premium){\r\n                    let hashSequence = JSON.stringify(this.state.data)\r\n                    let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n                    Booking.generalRegister(this.state.data, hmac)\r\n                        .then((res)=>{\r\n                            if (res.validation)\r\n                                this.setState({ completion: true, rgn: res.rgn })\r\n                        }).catch(()=>{\r\n                            alert('Error')\r\n                        })     \r\n                }\r\n                else {\r\n                    \r\n                    let _data = this.state.data   \r\n                    _data['txn'] = this.state.txn\r\n                    localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n                    localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n                    let hashSequence = JSON.stringify(_data)\r\n                        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n                        Booking.bookingAcknowledegment(_data, hmac).then((ack) => {\r\n                            this.setState({\r\n                                completion: true, rgn : ack\r\n                            })\r\n                        })\r\n                }\r\n            } else {\r\n                alert('Please ensure that the data entered is correct')\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    validate = (event) => {   \r\n        if(event.target.id==='regEmail') {\r\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: this.state.errors.phone,\r\n                        email: true\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: this.state.errors.phone,\r\n                    email: false\r\n                }\r\n            })\r\n        }\r\n        else if (event.target.id==='regPhone'){\r\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \r\n                this.setState({\r\n                    errors: {\r\n                        name: this.state.errors.name,\r\n                        phone: true,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: false,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n        else if(event.target.id==='regName'){\r\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\r\n                this.setState({\r\n                    errors: {\r\n                        name: true,\r\n                        phone: this.state.errors.phone,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors: {\r\n                    name: false,\r\n                    phone: this.state.errors.phone,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? ( this.state.premium ? ( \r\n                    <AcknowledegmentPage rgn = {this.state.rgn} payment = {false} />\r\n                /*    <Payments \r\n                        name = {this.state.data.regName}\r\n                        email = {this.state.data.regEmail}\r\n                        phone = {this.state.data.regPhone}\r\n                        amount = {this.state.data.amount}\r\n                        eventData = {{\r\n                            'title': 'Xtacy Registration',\r\n                            'type': 'gen',\r\n                            'tier': this.state.data.tier\r\n                        }}\r\n                        regData = {this.state.data}\r\n                    back = { () => {this.setState({completion:false})}} />  */\r\n                    ) :  <SuccessPage rgn={this.state.rgn} payment={false}/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>\r\n                            <p>\r\n                                <b>Gold Pass needed for Kunal Kamra's Show</b> <br/>\r\n                            </p>  \r\n\r\n                            {\r\n                                this.state.premium ? (\r\n                                    <div>\r\n                                        {/* <br/>\r\n                                        <br/>\r\n                                        <p><b>Step 1</b>: Pay {'\\u20B9 '+Booking.calcTaxInclAmount(this.state.data.amount)} using Google Pay or PhonePe to <b>8173824682</b> (Syed Mohammad Mehdi Rizvi)</p>\r\n                                        <br/><p><b>Step 2</b>: Fill this form and upload a screenshot of the confirmation page.</p><br/>\r\n                                        <p><b>Step 3</b>: We will verify your payment and send you a confirmation email within 2 hours.</p><br/>\r\n                                        <b>YOU NEED TO MAKE SEPERATE REGISTRATIONS FOR EACH INDIVIDUAL i.e. ONE PAYMENT FOR ONE REGISTRATION</b><br/> */}\r\n                                    </div>\r\n                                ) : (\r\n                                    console.log()\r\n                                )\r\n                            }                       \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                \r\n                                    {\r\n                                        this.props.intent==='gen' ? (\r\n                                            <select className=\"dropdown\" id=\"tier\" onChange={this.handleTierChange}>\r\n                                                <option value=\"standard\">Standard</option>\r\n                                                <option value=\"gold\">Gold</option>\r\n                                            </select>\r\n                                        ):(\r\n                                            <select className=\"dropdown\" id=\"tier\" onChange={this.handleTierChange}>\r\n                                                <option value=\"gold\">Gold</option>\r\n                                                <option value=\"standard\">Standard</option>\r\n                                            </select>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        this.state.premium?(\r\n                                            <div className=\"pricing\"> \r\n                                                {/* <p id=\"trP\">{'\\u20B9 ' + this.state.data.amount +' per person'}</p>\r\n                                                <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                                <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                                \r\n                                                <p>Sample Screenshot</p>\r\n                                                <img id=\"SamplePay\" src=\"/static/img/Sample.jpeg\" width=\"200px\" alt=\"Sample\"/> */}\r\n                                                <b>REGISTRATIONS HAVE BEEN CLOSED</b><br/>\r\n                                                <b>Thanks for the overwhelming response</b>\r\n                                               {/* <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button> */}\r\n                                                \r\n                                                {/* <CustomUploadButton\r\n                                                    className=\"button solid\"\r\n                                                    accept=\"image/*\"\r\n                                                    filename = { file => this.state.txn + file.name.split('.')[1]}\r\n                                                    storageRef={storage.ref('payScreenshots')}\r\n                                                    onUploadError={this.handleUploadError}\r\n                                                    onProgress={()=> this.setState({uploading: true})}\r\n                                                    onUploadSuccess={this.action.bind(this)}\r\n                                                    style={{color: 'white', padding: 10}} >\r\n                                                    Upload and Proceed\r\n                                                </CustomUploadButton>\r\n                                                {\r\n                                                    this.state.uploading ? (\r\n                                                        <h3> Uploading... </h3>\r\n                                                    ) : (\r\n                                                        console.log()\r\n                                                    )\r\n                                                } */}\r\n\r\n                                            </div>\r\n                                        ):(\r\n                                            <div className=\"pricing\">\r\n                                                <br /><br /><br />\r\n                                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                                            </div>\r\n                                        )\r\n                                    }                                      \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport Payments from './Payments';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Tickets.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            tierPricing: null,\r\n            data : {\r\n                eventId: null,\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                specialRequests: null,\r\n                tier: null,\r\n                number: 0,\r\n                amount: 0\r\n            },\r\n            errors: {\r\n                email: false,\r\n                phone: false,\r\n                name: false\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let trP, _data = this.state.data;\r\n        _data.eventId = this.props.eventData.eventId\r\n        if( typeof this.props.eventData.metadata.price === 'number' )\r\n            trP = this.props.eventData.metadata.price\r\n        else if( typeof this.props.eventData.metadata.price === 'object' )\r\n            trP = this.props.eventData.metadata.price[1]\r\n\r\n        _data.number = 1\r\n        _data.tier = 'Standard'\r\n        _data.amount = (trP * _data.number)\r\n        this.setState({\r\n            tierPricing: trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\r\n        _data.amount = (_trP * _data.number)\r\n        switch (event.target.value) {\r\n            case '0':\r\n                _data.tier = 'Budget';\r\n                break;\r\n            case '1':\r\n                _data.tier = 'Standard';\r\n                break;\r\n            case '2':\r\n                _data.tier = 'Premium';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        this.setState({\r\n            tierPricing: _trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleSizeChange = (action) =>{\r\n        let _data = this.state.data\r\n        if(action==='incr' && _data.number!==4) \r\n            _data.number++\r\n        else if(action==='decr' && _data.number!==1)\r\n            _data.number--\r\n        let amt = (this.state.tierPricing * _data.number)\r\n        _data.amount = amt\r\n        this.setState({\r\n            data: _data,\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\r\n                localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n                localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n                this.setState({ paymentReady: true })\r\n            } else {\r\n                alert('Please ensure that the data entered is correct')\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.ticketRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation) \r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n    validate(event)\r\n    {\r\n        if(event.target.id==='regEmail') {\r\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: this.state.errors.phone,\r\n                        email: true\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: this.state.errors.phone,\r\n                    email: false\r\n                }\r\n            })\r\n        }\r\n        else if (event.target.id==='regPhone'){\r\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: true,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: false,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n        else if(event.target.id==='regName'){\r\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\r\n                this.setState({\r\n                    errors : {\r\n                        name: true,\r\n                        phone: this.state.errors.phone,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: false,\r\n                    phone: this.state.errors.phone,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={false}/> : (\r\n                        <Payments\r\n                            name={this.state.data.regName}\r\n                            email={this.state.data.regEmail}\r\n                            phone={this.state.data.regPhone}\r\n                            amount={this.state.data.amount}\r\n                            eventData={this.props.eventData}\r\n                            regData={this.state.data}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <div className=\"Tickets container fit\">\r\n                        <div className=\"Details\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Events</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click proceed. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful booking.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regName\" placeholder=\"Name\"/>\r\n                                    <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                    <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\r\n                        <br/><br/>\r\n                        <div className=\"Seats\">\r\n                            {\r\n                                typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                    <div className=\"display container\">\r\n                                        <img src=\"https://xtacy.org/static/img/seatingTiers.png\" alt=\"seating\"/>\r\n                                    </div>\r\n                                ) : console.log()\r\n                            }\r\n                            <div className=\"controls container\">\r\n                                {\r\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                        <div className=\"tiers\">\r\n                                            <p>Select a Teir</p>\r\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\r\n                                                <option value={0}>Budget</option>\r\n                                                <option value={1}>Standard</option>\r\n                                                <option value={2}>Premium</option>\r\n                                            </select>\r\n                                        </div>                          \r\n                                    ) : console.log()\r\n                                }\r\n                                <div className=\"selector\">\r\n                                    <p>Select a Number</p>\r\n\r\n                                    <div className=\"number\">\r\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\r\n                                        \r\n                                        <div className=\"buttons\">\r\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\r\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.tierPricing + ' per ticket'}</p>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                </div>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamEmail: null,\r\n                regTeamPhone: null,\r\n                regTeamInst: null,\r\n                amount: null,\r\n                members : [],\r\n                coordinatorMail : null\r\n            },\r\n            errors :{\r\n                email: false,\r\n                phone: false,\r\n                number: false\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail', 'regTeamPhone'\r\n            ],\r\n            takesPayment: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req, _takesPayment=false\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'regTeamLeader', 'regTeamSize' ]\r\n        }\r\n        _data.amount = (this.props.eventData.metadata.price)\r\n        if(this.props.eventData.coordinatorMail!=null){\r\n            _data.coordinatorMail = this.props.eventData.coordinatorMail\r\n        }\r\n        else { _data.coordinatorMail = 'javed.azimus@gmail.com' }   //email used for dumping purposes, will forward emails to coordinators as the emails keep coming\r\n        if(this.props.eventData.metadata.paid && this.props.eventData.metadata.instantPayment)\r\n            _takesPayment = true\r\n        this.setState({\r\n            data: _data,\r\n            required: req,\r\n            takesPayment: _takesPayment\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                if(this.props.eventData.metadata.teamStrictType==='strict'){\r\n                    for ( let member of this.state.data.members )\r\n                        if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                            truth = false\r\n                }\r\n                else if(this.props.eventData.metadata.teamStrictType==='flex'){\r\n                    if(this.state.data.members[0][field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null))\r\n                            truth = false\r\n                }\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                        truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\r\n                if(this.state.takesPayment) {\r\n                    localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n                    localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n                    this.setState({ paymentReady: true })\r\n                } else {\r\n                    this.success(null)\r\n                }\r\n            } else {\r\n                alert('Please ensure the data entered is correct')\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        if(!this.state.takesPayment) txn = 'NON_PAID'\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.competeRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n    \r\n    validate = (event) => {\r\n        if(event.target.id==='regTeamEmail') {\r\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: this.state.errors.phone,\r\n                        email: true\r\n                    }\r\n                })\r\n            } else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: this.state.errors.phone,\r\n                    email: false\r\n                }\r\n            })\r\n        }\r\n        else if (event.target.id==='regTeamPhone'){\r\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \r\n                let _err = this.state.errors\r\n                _err['phone'] = true\r\n                this.setState({\r\n                    errors : _err\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: false,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n        else if(event.target.id==='regTeamName'){\r\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\r\n                this.setState({\r\n                    errors : {\r\n                        name: true,\r\n                        phone: this.state.errors.phone,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: false,\r\n                    phone: this.state.errors.phone,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.takesPayment ? (\r\n                        <Payments\r\n                            name={this.props.eventData.metadata.teamSizeType==='loose'?(this.state.data.regTeamLeader):(this.state.data.members[0].name)}\r\n                            email={this.state.data.regTeamEmail}\r\n                            phone={this.state.data.regTeamPhone}\r\n                            amount={this.state.data.amount}\r\n                            eventData={this.props.eventData}\r\n                            regData={this.state.data}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={this.state.takesPayment}/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email\r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container\">\r\n                                    <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize} min={0}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                this.state.takesPayment?(\r\n                                    <div className=\"pricing\">\r\n                                        <p id=\"trP\">{'\\u20B9 ' + this.state.data.amount + ' per team'}</p>\r\n                                        <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                        <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                                    </div>\r\n                                ):(\r\n                                    <div className=\"pricing\">\r\n                                        <h3>{'\\u20B9 ' + this.state.data.amount + ' per team'}</h3>\r\n                                        <p id=\"tax\"><i>You will be required to pay this amount on the spot.</i></p>\r\n                                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                                    </div>\r\n                                )\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    \r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React, { Component } from 'react';\r\nimport Booking from './util/booking';\r\nimport './Global.css';\r\n\r\nimport Register from './components/Register';\r\nimport Tickets from './components/Tickets';\r\nimport Compete from './components/Compete';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Loading from './components/partials/Loading';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            // DEBUG ======================================== //\r\n            // this.setState({\r\n            //     intent: this.props.intent,\r\n            //     event: 'kunalk',\r\n            //     eventData: {\r\n            //         title: 'KK',\r\n            //         eventId: 'kunalk',\r\n            //         dates: 30,\r\n            //         type: this.props.intent,\r\n            //         published: true,\r\n            //         metadata: {\r\n            //             time: '1:00 PM',\r\n            //             paid: false,\r\n            //             price: 5,\r\n            //             teams: false,\r\n            //             teamSize: null,\r\n            //             teamSizeType: null,\r\n            //             collectTeamGit: false,\r\n            //             conductedBy: 'Daniyal'\r\n            //         }\r\n            //     },\r\n            //     loaded: true\r\n            // })\r\n            // ---------------------------------------------- //\r\n            Booking.getEventData(this.props.event)\r\n                .then((eventData)=>{\r\n                    this.setState({\r\n                        intent: this.props.intent,\r\n                        event: this.props.event,\r\n                        eventData: eventData.data,\r\n                        loaded: true\r\n                    })\r\n                }).catch((err)=>{\r\n                    console.log(err)\r\n                })\r\n            // ============================================== //\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.eventData.published ? (\r\n                            this.state.intent!=='com' ? (\r\n                                this.state.intent!=='tic' ? ( \r\n                                    this.state.intent!=='prm' ? (\r\n                                        <ErrorPage/>\r\n                                    ) : ( \r\n                                        <Register eventData = {this.state.eventData} intent={this.state.intent}/>\r\n                                    )\r\n                                ): (\r\n                                    <Tickets eventData={this.state.eventData}/>\r\n                                )\r\n                            ) : (\r\n                                <Compete eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <div className=\"container\">\r\n                                <Loading/>\r\n                                <h2>Event Disabled!</h2>\r\n                                <p>Registrations are temporarily disabled for this event due to some problems on our end. \r\n                                    Please try again later.</p>\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <Register eventData={this.state.eventData} intent={this.state.intent}/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Payments from './components/Payments';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // DEBUG ======================================== //\r\n        // let params = this.getParams(window.location)\r\n        // if (params.intent==='gen') params.event = 'any'\r\n        // this.setState({\r\n        //     intent: params.intent,\r\n        //     event: params.event,\r\n        //     ref: params.ref,\r\n        //     verified: true\r\n        // })\r\n        // ---------------------------------------------- //\r\n        Secu.validateToken().then((result)=>{\r\n            if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n                    result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n                console.log('SR Tokens Verified')\r\n                Secu.generateSecurityFluff(4);\r\n                \r\n                let params = this.getParams(window.location), verified = false, hashSequence, hash\r\n                let returnKey = localStorage.getItem('x-return-key')\r\n                let returnPayToken = localStorage.getItem('x-return-pay-token')\r\n                let returnTxnId = localStorage.getItem('x-txn-id')\r\n                if(returnKey==='PAY_INITIALIZE' || returnKey===null) {\r\n                    if (params.intent==='gen') params.event = 'any'\r\n                    hashSequence = params.intent + config.clientKey + params.event\r\n                    hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n                    if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n                } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\r\n                    verified = true\r\n                }\r\n                this.setState({\r\n                    intent: params.intent,\r\n                    event: params.event,\r\n                    hash: hash,\r\n                    ref: params.ref,\r\n                    verified: verified\r\n                }, () => {console.log()})\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err)\r\n        });\r\n        // ============================================== //\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/register'}>\r\n                                <Switch>\r\n                                    <Route path={'/main'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n                                    \r\n                                    <Route path={'/payment'} component={Payments}/>\r\n\r\n                                    <Route path={'/cancel'} component={ErrorPage}/>\r\n\r\n                                    <Route component={ErrorPage}/>\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Bookings from './Bookings';\r\n\r\nReactDOM.render(<Bookings />, document.getElementById('root'));","const firebase = require('firebase/app');\r\nrequire('firebase/database');\r\nrequire('firebase/storage');\r\nrequire('firebase/auth');\r\nrequire('firebase/firestore');\r\n\r\nconst credentials = require('./config.json').firebase;\r\n\r\nif (firebase.apps.length===0)\r\n    firebase.initializeApp(credentials);\r\n\r\nexports.firebase = firebase\r\n\r\nconst database = firebase.database()\r\nexports.database = database\r\n\r\nconst storage = firebase.storage()\r\nexports.storage = storage\r\n\r\nconst firestore = firebase.firestore()\r\nexports.firestore = firestore\r\n\r\n/**\r\n* @author Alisamar Husain\r\n* \r\n* Standard Firebase/Firestore Export\r\n* ---------------------------------\r\n* Import the object by either\r\n*   const db = require('./database')\r\n* or\r\n*   import db from './database';\r\n* \r\n* Use the object to get a database\r\n* namespace by 'db.firebase.database()'\r\n* Check the firebase docs for more.\r\n*/","const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', '/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenName+k );\r\n                reject('CSR_TOKEN_INVALID');\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}"],"sourceRoot":""}