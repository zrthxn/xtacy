{"version":3,"sources":["util/booking.js","util/secu.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/SuccessPage.jsx","components/Register.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/PaymentPortal.jsx","components/Payments.jsx","components/Tickets.jsx","components/Compete.jsx","Main.jsx","Bookings.jsx","index.js","util/database.js"],"names":["crypto","require","config","exports","validateData","data","schema","generalRegister","hash","csrf","key","localStorage","getItem","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","validation","rgn","responseHmac","createHmac","clientKey","update","digest","competeRegister","comReq","comRes","ticketRegister","ticReq","ticRes","getEventData","eventId","eventReq","eventRes","i","arb","atob","calcTaxInclAmount","amt","parseFloat","toFixed","validateToken","undefined","Date","getTime","valReq","k","removeItem","valRes","setItem","generateSecurityFluff","amount","arr","tag","fluff","fluff_len","Math","floor","random","n","toString","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","Component","Footer","role","aria-label","Loading","SuccessPage","partials_Loading","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","payload","truth","_data","state","target","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","required","Symbol","iterator","next","done","field","err","return","setState","requiredFulfilled","action","hashSequence","hmac","Booking","then","res","completion","catch","alert","regName","regEmail","regPhone","regInst","components_SuccessPage","onChange","placeholder","onClick","bind","ErrorPage","errorCode","errorContent","LoadingPage","Timer","_isMounted","timeOut","setTimeout","props","components_ErrorPage","PaymentPortal","paypal","showButton","window","React","ReactDOM","_this$props","isScriptLoaded","isScriptLoadSucceed","nextProps","_this2","Button","react","style","label","layout","size","shape","color","branding","funding","allowed","FUNDING","CARD","CREDIT","env","clientId","commit","payment","authorizedPayment","onAuthorize","actions","POST_DATA","paymentID","payerID","txnID","txnid","execReq","executedPayment","onSuccess","paid","cancelled","paymentData","paymentError","onCancel","onError","scriptLoader","Payments","paymentSuccesful","success","console","log","paymentCancelled","back","code","error","paymentAuthorized","CLIENT","paymentId","base","tax","total","payer","name","email","phone","eventData","eventDescription","info","authReq","client","_this3","components_PaymentPortal","payerId","components_LoadingPage","Tickets","handleTierChange","_trP","metadata","price","number","tier","tierPricing","handleSizeChange","paymentReady","specialRequests","trP","components_Payments","title","src","alt","defaultValue","passive","Compete","includes","identifier","split","index","members","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","txn","regTeamName","regTeamEmail","regTeamPhone","regTeamInst","req","collectTeamGit","teamSizeType","teamSize","push","max","min","map","mem","Compete_Member","Member","Main","intent","loaded","dates","published","time","teams","conductedBy","components_Tickets","components_Compete","components_Register","Bookings","getParams","location","searchParams","URLSearchParams","search","get","ref","verified","params","partials_Header","BrowserRouter","basename","Switch","Route","path","src_Main","component","partials_Footer","render","src_Bookings","document","getElementById","firebase","credentials","apps","length","initializeApp","database","firestore","settings","timestampsInSnapshots"],"mappings":"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","file":"static/js/main.24cec181.chunk.js","sourcesContent":["const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', 'https://xtacy.org/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', 'https://xtacy.org/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.ticketRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const ticReq = new XMLHttpRequest();\r\n        ticReq.open('POST', 'https://xtacy.org/_register/tic/', true);\r\n        ticReq.setRequestHeader('Content-Type', 'application/json');\r\n        ticReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        ticReq.onreadystatechange = () => {\r\n            if(ticReq.readyState===4 && ticReq.status===200) {\r\n                let ticRes = JSON.parse(ticReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: ticRes.validation, rgn: ticRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (ticRes.hash===responseHmac)\r\n                    resolve(ticRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', 'https://xtacy.org/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.calcTaxInclAmount = (amt) => {\r\n    /**\r\n     * Calculates the net amout to be paid \r\n     * such that the amount recieved after deductions is\r\n     * equal to the fee of the event\r\n    */\r\n    // Flat transaction fee in Rupees\r\n    const flatFee = 3\r\n\r\n    // Transaction fee in percent\r\n    const txnFeePct = 2.5\r\n    \r\n    // Applicable TAX in percent\r\n    // Note: TAX is applied on the transaction fee only\r\n    const taxPct = 18\r\n    \r\n    return (\r\n        parseFloat(\r\n            (amt + flatFee) / \r\n            (1 - txnFeePct/100 - ((taxPct/100) * (txnFeePct/100)))            \r\n        ).toFixed(2)\r\n    )\r\n}","const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', 'http://xtacy.org/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenName+k );\r\n                reject('CSR_TOKEN_INVALID');\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}","import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                <li><a href=\"/about\">about</a></li>\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/register\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\"></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            <li><a href=\"/about\">about</a></li>\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/register\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\r\n\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = () => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <p className=\"center\">\r\n                    You have successfully registered!<br/>\r\n                </p>\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\n\r\nimport SuccessPage from './SuccessPage';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            let hashSequence = JSON.stringify(this.state.data)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            Booking.generalRegister(this.state.data, hmac)\r\n                .then((res)=>{\r\n                    if (res.validation)\r\n                        this.setState({ completion: true })\r\n                }).catch(()=>{\r\n                    alert('Error')\r\n                })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? (\r\n                    <SuccessPage/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>                        \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    const errorCode = localStorage.getItem('payment-error-code')\r\n    localStorage.removeItem('payment-error-code')\r\n    var errorContent = 'This page isn\\'t working.'\r\n\r\n    switch (errorCode) {\r\n        case 'CSRF_TIMEOUT':\r\n            errorContent = 'The page timed out.'\r\n            break\r\n        case 'SERVER_ERROR':\r\n            errorContent = 'There was a server error.'\r\n            break\r\n        case 'PORTAL_ERROR':\r\n            errorContent = 'The payment service may be down.'\r\n            break\r\n        case 'RESPONSE_HASH_MISMATCH':\r\n            errorContent = 'The payment couldn\\'t be verified.'\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesnt<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    <b>{ errorContent }</b><br/><br/>\r\n                    Try to reload the page or go back. If the issue persists, tell us about it at <a href=\"mailto:tech@xtacy.org\">tech@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport crypto from 'crypto';\r\nimport scriptLoader from 'react-async-script-loader';\r\nimport Loading from './partials/Loading';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass PaymentPortal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            paypal: null,\r\n            showButton: false\r\n        }\r\n        window.React = React;\r\n        window.ReactDOM = ReactDOM;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(window.paypal) {\r\n            const { isScriptLoaded, isScriptLoadSucceed } = this.props\r\n            if (isScriptLoaded && isScriptLoadSucceed)\r\n                this.setState({ showButton: true, paypal: window.paypal })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { isScriptLoaded, isScriptLoadSucceed } = nextProps\r\n        const isLoadedButWasntLoadedBefore = (!this.state.showButton) && (!this.props.isScriptLoaded) && (isScriptLoaded)\r\n        if (isLoadedButWasntLoadedBefore)\r\n          if (isScriptLoadSucceed) \r\n            this.setState({ showButton: true, paypal: window.paypal })\r\n    }\r\n\r\n    render() {\r\n        const authorizedPayment = () => { return this.props.authorizedPayment }\r\n\r\n        const executePayment = (data, actions) => {\r\n            let POST_DATA = {\r\n                paymentID: this.props.authorizedPayment,\r\n                payerID: '',\r\n                txnID: this.props.txnid\r\n            }\r\n\r\n            let hashSequence = JSON.stringify(POST_DATA)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            \r\n            const execReq = new XMLHttpRequest()\r\n            execReq.open('POST', 'https://xtacy.org/_payment/execute/', true)\r\n            execReq.setRequestHeader('Content-Type', 'application/json')\r\n            execReq.send(JSON.stringify({\r\n                data: POST_DATA, \r\n                csrf: {\r\n                    key: localStorage.getItem(config.csrfTokenNameKey),\r\n                    token: localStorage.getItem(config.csrfTokenName + \r\n                        localStorage.getItem(config.csrfTokenNameKey))\r\n                },\r\n                checksum: hmac\r\n            }));\r\n\r\n            execReq.onreadystatechange = () => {\r\n                if(execReq.readyState===4 && execReq.status===200) {\r\n                    let executedPayment = JSON.parse(atob(JSON.parse(execReq.response).data))\r\n                    let responseHmac = crypto.createHmac('sha256', config.clientKey).update(JSON.stringify(executedPayment.payment)).digest('hex')\r\n                    if(executedPayment.hash === responseHmac)\r\n                        this.props.onSuccess({\r\n                            paid: true,\r\n                            cancelled: false,\r\n                            paymentData: data\r\n                        })\r\n                    else\r\n                        this.paymentError('RESPONSE_HASH_MISMATCH')\r\n                }\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n            {\r\n                this.state.showButton ? (\r\n                    <this.state.paypal.Button.react\r\n                        style={{\r\n                            label: 'buynow',\r\n                            layout: 'vertical',\r\n                            size: 'responsive',\r\n                            shape: 'rect',\r\n                            color: 'blue',\r\n                            branding: true\r\n                        }}\r\n                        funding= {\r\n                            {\r\n                                allowed: [\r\n                                    this.state.paypal.FUNDING.CARD,\r\n                                    this.state.paypal.FUNDING.CREDIT\r\n                                ]\r\n                            }\r\n                        }\r\n                        env={this.props.env}\r\n                        clientId={this.props.clientId}\r\n                        commit={true}\r\n                        payment={ authorizedPayment }\r\n                        onAuthorize={ executePayment }\r\n                        onCancel={this.props.onCancel}\r\n                        onError={this.props.onError}\r\n                    />\r\n                ) : (\r\n                    <Loading/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaymentPortal);","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport LoadingPage from './LoadingPage';\r\nimport PaymentPortal from './PaymentPortal';\r\n\r\nimport Database from '../util/database';\r\nimport Booking from '../util/booking';\r\nimport './css/Payments.css';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentAuthorized: false,\r\n            CLIENT: null,\r\n            txnID: null,\r\n            paymentId: null,\r\n            amount: null,\r\n            data : null,\r\n            required: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let base = this.props.amount, amt = Booking.calcTaxInclAmount(this.props.amount)\r\n        let POST_DATA = {\r\n            amount: {\r\n                base: base,\r\n                tax:  (amt - base).toFixed(2),\r\n                total: amt\r\n            },\r\n            payer: {\r\n                name: this.props.name,\r\n                email: this.props.email,\r\n                phone: this.props.phone,\r\n            },\r\n            eventData: {\r\n                eventDescription: this.props.info\r\n            }\r\n        }\r\n        \r\n        let hashSequence = JSON.stringify(POST_DATA)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        \r\n        const authReq = new XMLHttpRequest()\r\n        authReq.open('POST', 'https://xtacy.org/_payment/authorize/', true)\r\n        authReq.setRequestHeader('Content-Type', 'application/json')\r\n        authReq.send(JSON.stringify({\r\n            data: POST_DATA, \r\n            csrf: {\r\n                key: localStorage.getItem(config.csrfTokenNameKey),\r\n                token: localStorage.getItem(config.csrfTokenName + localStorage.getItem(config.csrfTokenNameKey))\r\n            }, \r\n            checksum: hmac\r\n        }));\r\n\r\n        authReq.onreadystatechange = () => {\r\n            if(authReq.readyState===4 && authReq.status===200) {\r\n                let authorizedPayment = JSON.parse(atob(JSON.parse(authReq.response).data))\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(JSON.stringify(authorizedPayment.payment)).digest('hex')            \r\n                if(authorizedPayment.hash === responseHmac) {\r\n                    this.setState({\r\n                        amount: {\r\n                            base: base,\r\n                            total: amt\r\n                        },\r\n                        paymentId: authorizedPayment.payment.id,\r\n                        txnID: authorizedPayment.txnID,\r\n                        CLIENT: authorizedPayment.client,\r\n                        data: this.props.data,\r\n                        paymentAuthorized: true\r\n                    })\r\n                } else\r\n                    this.paymentError('RESPONSE_HASH_MISMATCH')\r\n            } else if(authReq.readyState===4 && authReq.status===403) {\r\n                this.paymentError('CSRF_TIMEOUT')\r\n            } else if(authReq.readyState===4 && authReq.status===500) {\r\n                this.paymentError('SERVER_ERROR')\r\n            }\r\n        }        \r\n    }\r\n\r\n    paymentSuccesful = (success) => {\r\n        console.log('PAYMENT_SUCCESSFUL')\r\n        this.props.success(success)\r\n    }\r\n\r\n    paymentCancelled = () => {\r\n        console.log('PAYMENT_CANCELLED')\r\n        \r\n        // Database.firestore.collection('transactions').doc(this.state.txnID).update({\r\n        //         status: 'CANCELLED',\r\n        //         verified: false\r\n        //     }).then(()=>{\r\n                this.props.back()\r\n        //     }).catch((err)=>{\r\n        //         this.paymentError()\r\n        //     })\r\n    }\r\n\r\n    paymentError = (code) => {\r\n        console.error('PAYMENT_FAILED', code)\r\n        localStorage.setItem('payment-error-code', code)\r\n        \r\n        // Database.firestore.collection('transactions').doc(this.state.txnID).update({\r\n        //         status: 'ERROR',\r\n        //         verified: false\r\n        //     }).then(()=>{\r\n                this.setState({ paymentAuthorized: false })\r\n        //     }).catch((err)=>{\r\n        //         console.error(err)\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        const { CLIENT } = this.state\r\n\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n            {\r\n                this.state.paymentAuthorized ? (\r\n                    <div>\r\n                        <h2>Payments Page</h2>\r\n\r\n                        <div className=\"action container fit\">\r\n                            <button className=\"button\" onClick={ this.props.back.bind(this) }>BACK</button>\r\n                        </div>\r\n\r\n                        <div className=\"pricing\">\r\n                            <p>Total</p>\r\n                            <h3>{'\\u20B9 ' + Booking.calcTaxInclAmount(this.props.amount)}</h3>\r\n                            <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                        </div>\r\n\r\n                        <PaymentPortal\r\n                            env={\"sandbox\"}\r\n                            clientId={CLIENT}\r\n                            authorizedPayment={ this.state.paymentId }\r\n                            payerId={ this.state.txnID }\r\n                            onSuccess={ this.paymentSuccesful }\r\n                            onCancel={ this.paymentCancelled }\r\n                            onError={ () => this.paymentError('PORTAL_ERROR') }\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <LoadingPage timeOut={5000}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport Payments from './Payments';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport { firestore } from '../util/database';\r\nimport Booking from '../util/booking';\r\nimport './css/Tickets.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            tierPricing: null,\r\n            data : {\r\n                eventId: null,\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                specialRequests: null,\r\n                tier: null,\r\n                number: 0,\r\n                amount: 0\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let trP, _data = this.state.data;\r\n        _data.eventId = this.props.eventData.eventId\r\n        if( typeof this.props.eventData.metadata.price === 'number' )\r\n            trP = this.props.eventData.metadata.price\r\n        else if( typeof this.props.eventData.metadata.price === 'object' )\r\n            trP = this.props.eventData.metadata.price[1]\r\n\r\n        _data.number = 1\r\n        _data.tier = 'Standard'\r\n        _data.amount = (trP * _data.number)\r\n        this.setState({\r\n            tierPricing: trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\r\n        _data.amount = (_trP * _data.number)\r\n        switch (event.target.value) {\r\n            case '0':\r\n                _data.tier = 'Budget';\r\n                break;\r\n            case '1':\r\n                _data.tier = 'Standard';\r\n                break;\r\n            case '2':\r\n                _data.tier = 'Premium';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        this.setState({\r\n            tierPricing: _trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleSizeChange = (action) =>{\r\n        let _data = this.state.data\r\n        if(action==='incr' && _data.number!==4) \r\n            _data.number++\r\n        else if(action==='decr' && _data.number!==1)\r\n            _data.number--\r\n        let amt = (this.state.tierPricing * _data.number)\r\n        _data.amount = amt\r\n        this.setState({\r\n            data: _data,\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            this.setState({ paymentReady: true })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (success) => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.ticketRegister(this.state.data, hmac)\r\n            .then((res)=>{\r\n                if (res.validation) \r\n                    this.setState({ paymentReady: true, completion: true })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.completion ? <SuccessPage/> : (\r\n                        <Payments\r\n                            name={this.state.data.regName}\r\n                            email={this.state.data.regEmail}\r\n                            phone={this.state.data.regPhone}\r\n                            amount={this.state.data.amount}\r\n                            data={this.props.eventData}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <div className=\"Tickets container fit\">\r\n                        <div className=\"Details\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Events</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click proceed. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful booking.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\r\n                        <br/><br/>\r\n                        <div className=\"Seats\">\r\n                            {\r\n                                typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                    <div className=\"display container\">\r\n                                        <img src=\"https://xtacy.org/static/img/seatingTiers.png\" alt=\"seating\"/>\r\n                                    </div>\r\n                                ) : console.log()\r\n                            }\r\n                            <div className=\"controls container\">\r\n                                {\r\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                        <div className=\"tiers\">\r\n                                            <p>Select a Teir</p>\r\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\r\n                                                <option value={0}>Budget</option>\r\n                                                <option value={1}>Standard</option>\r\n                                                <option value={2}>Premium</option>\r\n                                            </select>\r\n                                        </div>                          \r\n                                    ) : console.log()\r\n                                }\r\n                                <div className=\"selector\">\r\n                                    <p>Select a Number</p>\r\n\r\n                                    <div className=\"number\">\r\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\r\n                                        \r\n                                        <div className=\"buttons\">\r\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\r\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.tierPricing + ' per ticket'}</p>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                </div>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamEmail: null,\r\n                regTeamPhone: null,\r\n                regTeamInst: null,\r\n                amount: null,\r\n                members : []\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail', 'regTeamPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'regTeamLeader', 'regTeamSize' ]\r\n        }\r\n        _data.amount = (this.props.eventData.metadata.price)\r\n        \r\n        this.setState({\r\n            data: _data,\r\n            required: req\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                for ( let member of this.state.data.members )\r\n                    if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                        truth = false\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                    truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(this.props.eventData.metadata.paid) {\r\n                this.setState({ paymentReady: true })\r\n            } else {\r\n                this.success(null)\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.competeRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.props.eventData.metadata.paid ? (\r\n                        <Payments\r\n                            name={this.state.data.regTeamName}\r\n                            email={this.state.data.regTeamEmail}\r\n                            phone={this.state.data.regTeamPhone}\r\n                            amount={this.state.data.amount}\r\n                            data={this.props.eventData}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email\r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize} min={0}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                <div className=\"pricing\">\r\n                                    <h3>{'Total: \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                                </div>\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React, { Component } from 'react';\r\nimport Booking from './util/booking';\r\nimport './Global.css';\r\n\r\nimport Register from './components/Register';\r\nimport Tickets from './components/Tickets';\r\nimport Compete from './components/Compete';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Loading from './components/partials/Loading';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            // DEBUG ======================================== //\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                event: 'dastan',\r\n                eventData: {\r\n                    title: 'Mehmood Bhai',\r\n                    eventId: 'dastan',\r\n                    dates: 16,\r\n                    type: this.props.intent,\r\n                    published: true,\r\n                    metadata: {\r\n                        time: '1:00 PM',\r\n                        paid: true,\r\n                        price: 5,\r\n                        teams: false,\r\n                        teamSize: null,\r\n                        teamSizeType: null,\r\n                        collectTeamGit: false,\r\n                        conductedBy: 'Daniyal'\r\n                    }\r\n                },\r\n                loaded: true\r\n            })\r\n            // ---------------------------------------------- //\r\n            // Booking.getEventData(this.props.event)\r\n            //     .then((eventData)=>{\r\n            //         this.setState({\r\n            //             intent: this.props.intent,\r\n            //             event: this.props.event,\r\n            //             eventData: eventData.data,\r\n            //             loaded: true\r\n            //         })\r\n            //     }).catch((err)=>{\r\n            //         console.log(err)\r\n            //     })\r\n            // ============================================== //\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.eventData.published ? (\r\n                            this.state.intent!=='com' ? (\r\n                                this.state.intent!=='tic' ? (\r\n                                    <ErrorPage/>\r\n                                ) : (\r\n                                    <Tickets eventData={this.state.eventData}/>\r\n                                )\r\n                            ) : (\r\n                                <Compete eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <div className=\"container\">\r\n                                <Loading/>\r\n                                <h2>Not Published</h2>\r\n                                <p>Registrations are disabled for this event</p>\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <Register eventData={this.state.eventData}/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport SuccessPage from './components/SuccessPage';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // DEBUG ======================================== //\r\n        let params = this.getParams(window.location)\r\n        if (params.intent==='gen') params.event = 'any'\r\n        this.setState({\r\n            intent: params.intent,\r\n            event: params.event,\r\n            ref: params.ref,\r\n            verified: true\r\n        })\r\n        // ---------------------------------------------- //\r\n        // Secu.validateToken().then((result)=>{\r\n        //     if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n        //             result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n        //         console.log('SR Tokens Verified')\r\n        //         Secu.generateSecurityFluff(4);\r\n\r\n        //         let params = this.getParams(window.location), verified = false\r\n        //         if (params.intent==='gen') params.event = 'any'\r\n        \r\n        //         let hashSequence = params.intent + config.clientKey + params.event\r\n        //         let hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n        //         if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n        \r\n        //         this.setState({\r\n        //             intent: params.intent,\r\n        //             event: params.event,\r\n        //             hash: hash,\r\n        //             ref: params.ref,\r\n        //             verified: verified\r\n        //         })\r\n        //     }\r\n        // }).catch((err)=>{\r\n        //     console.error(err)\r\n        // });\r\n        // ============================================== //\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/register'}>\r\n                                <Switch>\r\n                                    <Route path={'/main'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n                                    \r\n                                    <Route path={'/success'} component={SuccessPage}/>\r\n\r\n                                    <Route path={'/cancel'} component={ErrorPage}/>\r\n\r\n                                    <Route component={ErrorPage}/>\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Bookings from './Bookings';\r\n\r\nReactDOM.render(<Bookings />, document.getElementById('root'));","const firebase = require('firebase/app');\r\nrequire('firebase/database');\r\nrequire('firebase/auth');\r\nrequire('firebase/firestore');\r\n\r\nconst credentials = require('./config.json').firebase;\r\n\r\nif (firebase.apps.length===0)\r\n    firebase.initializeApp(credentials);\r\n\r\nexports.firebase = firebase;\r\nexports.database = firebase.database();\r\nexports.firestore = firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\n/**\r\n* @author Alisamar Husain\r\n* \r\n* Standard Firebase/Firestore Export\r\n* ---------------------------------\r\n* Import the object by either\r\n*   const db = require('./database')\r\n* or\r\n*   import db from './database';\r\n* \r\n* Use the object to get a database\r\n* namespace by 'db.firebase.database()'\r\n* Check the firebase docs for more.\r\n*/"],"sourceRoot":""}