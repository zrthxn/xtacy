{"version":3,"sources":["util/booking.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/SuccessPage.jsx","components/Register.jsx","components/TemporaryLoadingScreen.jsx","components/PaymentPortal.jsx","components/Payments.jsx","components/Tickets.jsx","components/Compete.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/Main.jsx","Bookings.jsx","index.js","util/secu.js"],"names":["crypto","require","config","exports","validateData","data","schema","generalRegister","hash","csrf","key","localStorage","getItem","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","validation","rgn","responseHmac","createHmac","clientKey","update","digest","competeRegister","comReq","comRes","ticketRegister","ticReq","ticRes","getEventData","eventId","eventReq","eventRes","i","arb","atob","calcTaxInclAmount","amt","parseFloat","toFixed","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","Component","Footer","role","aria-label","Loading","SuccessPage","partials_Loading","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","payload","truth","_data","state","target","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","required","Symbol","iterator","next","done","field","err","return","setState","requiredFulfilled","action","hashSequence","hmac","Booking","then","res","completion","catch","alert","regName","regEmail","regPhone","regInst","components_SuccessPage","onChange","placeholder","onClick","bind","TemporaryLoadingScreen","PaymentPortal","props","paypal","showButton","window","React","ReactDOM","_this$props","isScriptLoaded","isScriptLoadSucceed","nextProps","_this2","authorizedPayment","Button","react","style","layout","size","shape","color","env","clientId","commit","payment","onAuthorize","actions","request","post","paymentID","payerID","onSuccess","paid","cancelled","paymentData","onCancel","onError","scriptLoader","Payments","paymentSuccesful","success","console","log","paymentFailed","failure","paymentAuthorized","CLIENT_ID","txnid","paymentId","amount","authReq","back","components_PaymentPortal","components_TemporaryLoadingScreen","Tickets","handleTierChange","_trP","eventData","metadata","price","number","tier","tierPricing","handleSizeChange","paymentReady","specialRequests","trP","components_Payments","name","email","phone","info","title","src","alt","defaultValue","passive","Compete","includes","identifier","split","index","members","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","regTeamName","regTeamEmail","regTeamPhone","regTeamInst","req","collectTeamGit","teamSizeType","teamSize","push","max","min","map","mem","Compete_Member","Member","ErrorPage","LoadingPage","Timer","_isMounted","timeOut","setTimeout","components_ErrorPage","Main","intent","loaded","components_Tickets","components_Compete","components_Register","components_LoadingPage","Bookings","getParams","location","searchParams","URLSearchParams","search","get","ref","verified","Secu","validateToken","result","generateSecurityFluff","params","createHash","sessionStorage","hashToken","error","partials_Header","BrowserRouter","basename","Switch","Route","path","components_Main","component","partials_Footer","render","src_Bookings","document","getElementById","Date","getTime","valReq","k","removeItem","valRes","setItem","arr","tag","fluff","fluff_len","Math","floor","random","n","toString"],"mappings":"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","file":"static/js/main.d7f3187f.chunk.js","sourcesContent":["const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', 'https://xtacy.org/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', 'https://xtacy.org/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.ticketRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const ticReq = new XMLHttpRequest();\r\n        ticReq.open('POST', 'https://xtacy.org/_register/tic/', true);\r\n        ticReq.setRequestHeader('Content-Type', 'application/json');\r\n        ticReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        ticReq.onreadystatechange = () => {\r\n            if(ticReq.readyState===4 && ticReq.status===200) {\r\n                let ticRes = JSON.parse(ticReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: ticRes.validation, rgn: ticRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (ticRes.hash===responseHmac)\r\n                    resolve(ticRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', 'https://xtacy.org/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.calcTaxInclAmount = (amt) => {\r\n    /**\r\n     * Calculates the net amout to be paid \r\n     * such that the amount recieved after deductions is\r\n     * equal to the fee of the event\r\n    */\r\n    // Flat transaction fee in Rupees\r\n    const flatFee = 3\r\n\r\n    // Transaction fee in percent\r\n    const txnFeePct = 2.5\r\n    \r\n    // Applicable GST in percent\r\n    const gstPct = 18\r\n    \r\n    return parseFloat(\r\n        (amt + flatFee) / \r\n        (1 - txnFeePct/100 - ((gstPct/100) * (txnFeePct/100)) ))\r\n        .toFixed(2)\r\n}","import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                <li><a href=\"/about\">about</a></li>\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/register\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\"></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            <li><a href=\"/about\">about</a></li>\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/register\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"footer-links\">\r\n\t\t\t\t\t<div className=\"links\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"/\">Home</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/about\">About</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/contact\">Contact</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/register\">Register</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"faqs\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"/\">FAQs</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/contact\">Contact</a></li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = () => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <p className=\"center\">\r\n                    You have successfully registered!<br/>\r\n                </p>\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\n\r\nimport SuccessPage from './SuccessPage';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            let hashSequence = JSON.stringify(this.state.data)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            Booking.generalRegister(this.state.data, hmac)\r\n                .then((res)=>{\r\n                    if (res.validation)\r\n                        this.setState({ completion: true })\r\n                }).catch(()=>{\r\n                    alert('Error')\r\n                })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? (\r\n                    <SuccessPage/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>                        \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst TemporaryLoadingScreen = () => {\r\n    return (\r\n        <div className=\"TemporaryLoadingScreen\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <p className=\"center\"> loading </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TemporaryLoadingScreen;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport scriptLoader from 'react-async-script-loader';\r\nimport Loading from './partials/Loading';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass PaymentPortal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            paypal: null,\r\n            showButton: false\r\n        }\r\n        window.React = React;\r\n        window.ReactDOM = ReactDOM;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(window.paypal) {\r\n            const { isScriptLoaded, isScriptLoadSucceed } = this.props\r\n            if (isScriptLoaded && isScriptLoadSucceed)\r\n                this.setState({ showButton: true, paypal: window.paypal })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { isScriptLoaded, isScriptLoadSucceed } = nextProps\r\n        const isLoadedButWasntLoadedBefore = (!this.state.showButton) && (!this.props.isScriptLoaded) && (isScriptLoaded)\r\n        if (isLoadedButWasntLoadedBefore)\r\n          if (isScriptLoadSucceed) \r\n            this.setState({ showButton: true, paypal: window.paypal })\r\n    }\r\n\r\n    render() {\r\n        // const authorizePayment = (data, actions) => {\r\n        //     // return actions.request.post('/my-api/create-payment/')\r\n        //     //     .then((res) => {\r\n        //     //         return res.id\r\n        //     //     })\r\n        //     // paypal.rest.payment.create(this.props.env, this.props.clientId, {\r\n        //     //         transactions: [\r\n        //     //             {\r\n        //     //                 amount: {\r\n        //     //                     total: '',\r\n        //     //                     currency: 'INR', //this.props.currency,\r\n        //     //                 }\r\n        //     //             },\r\n        //     //         ],\r\n        //     // })\r\n        // }\r\n\r\n        const { authorizedPayment } = this.props\r\n\r\n        const executePayment = (data, actions) => {\r\n            return actions.request.post('https://xtacy.org/_payment/execute/', {\r\n                paymentID: data.paymentID,\r\n                payerID: data.payerID,\r\n                csrf: {\r\n                    key: localStorage.getItem(config.csrfTokenNameKey),\r\n                    token: localStorage.getItem(config.csrfTokenName + localStorage.getItem(config.csrfTokenNameKey))\r\n                }\r\n            }).then(() => {\r\n                this.props.onSuccess({\r\n                    paid: true,\r\n                    cancelled: false,\r\n                    paymentData: data\r\n                })\r\n            })\r\n            // actions.payment.execute().then(() => {\r\n            //     this.props.onSuccess({\r\n            //         paid: true,\r\n            //         cancelled: false,\r\n            //         paymentData: data\r\n            //     })\r\n            // })\r\n        }\r\n\r\n        const buttonStyle = {\r\n            layout: 'vertical', // horizontal | vertical\r\n            size: 'large', // medium | large | responsive\r\n            shape: 'rect', // pill | rect\r\n            color: 'blue' // gold | blue | silver | white | black\r\n        }\r\n\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.showButton ? (\r\n                    <this.state.paypal.Button.react\r\n                        style={ buttonStyle }\r\n                        env={this.props.env}\r\n                        clientId={this.props.clientId}\r\n                        commit={true}\r\n                        payment={ authorizedPayment }\r\n                        onAuthorize={ executePayment }\r\n                        onCancel={this.props.onCancel}\r\n                        onError={this.props.onError}\r\n                    />\r\n                ) : (\r\n                    <Loading/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaymentPortal);","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport TemporaryLoadingScreen from './TemporaryLoadingScreen';\r\nimport PaymentPortal from './PaymentPortal';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Payments.css';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentAuthorized: false,\r\n            CLIENT_ID: null,\r\n            txnid: null,\r\n            paymentId: null,\r\n            amount: null,\r\n            data : null,\r\n            required: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let amt = this.props.amount\r\n        if(this.props.calcTaxInclAmount)\r\n            amt = Booking.calcTaxInclAmount(this.props.amount)\r\n\r\n        // let authorizedPayment\r\n        const authReq = new XMLHttpRequest()\r\n        authReq.open('POST', 'https://xtacy.org/_payment/authorize/', true)\r\n        authReq.setRequestHeader('Content-Type', 'application/json')\r\n        authReq.send()\r\n        // authReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        authReq.onreadystatechange = () => {\r\n            if(authReq.readyState===4 && authReq.status===200) {\r\n                let authorizedPayment = JSON.parse(authReq.response)\r\n                // let responseHashSequence = JSON.stringify({ validation: authorizedPayment.validation, rgn: authorizedPayment.rgn })\r\n                // let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                this.setState({\r\n                    amount: amt,\r\n                    clientId: authorizedPayment.CLIENT_ID,\r\n                    txnid: authorizedPayment.txnid,\r\n                    paymentId: authorizedPayment.id,\r\n                    paymentAuthorized: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    paymentSuccesful = (success) => {\r\n        console.log('PAYMENT SUCCESSFUL')\r\n        alert('PAYMENT SUCCESSFUL')\r\n    }\r\n\r\n    paymentFailed = (failure) => {\r\n        console.log('PAYMENT FAILED')\r\n        alert('PAYMENT FAILED')\r\n    }\r\n\r\n    render() {\r\n        const { CLIENT_ID } = this.state\r\n\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n                <h2>Payments Page</h2>\r\n\r\n                <div className=\"display\">\r\n                    <div className=\"amount\">\r\n                        <h3>{ this.state.amount }</h3>\r\n                        <p>AMOUNT</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"action\">\r\n                    <button className=\"button\" onClick={ this.props.back.bind(this) }>BACK</button>\r\n                    {\r\n                        this.state.paymentAuthorized ? (\r\n                            <PaymentPortal\r\n                                env={\"sandbox\"}\r\n                                clientId={CLIENT_ID}\r\n                                authorizedPayment={ this.state.paymentId }\r\n                                onSuccess={ this.paymentSuccesful }\r\n                                onCancel={ this.paymentFailed }\r\n                                onError={ this.paymentFailed }\r\n                            />\r\n                        ) : (\r\n                            <TemporaryLoadingScreen/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport Payments from './Payments';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Tickets.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            tierPricing: null,\r\n            data : {\r\n                eventId: null,\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                specialRequests: null,\r\n                tier: null,\r\n                number: 0,\r\n                amount: 0\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let trP, _data = this.state.data;\r\n        _data.eventId = this.props.eventData.eventId\r\n        if( typeof this.props.eventData.metadata.price === 'number' )\r\n            trP = this.props.eventData.metadata.price\r\n        else if( typeof this.props.eventData.metadata.price === 'object' )\r\n            trP = this.props.eventData.metadata.price[1]\r\n\r\n        _data.number = 1\r\n        _data.tier = 'Standard'\r\n        _data.amount = Booking.calcTaxInclAmount(trP * _data.number)\r\n        this.setState({\r\n            tierPricing: trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\r\n        _data.amount = Booking.calcTaxInclAmount(_trP * _data.number)\r\n        switch (event.target.value) {\r\n            case '0':\r\n                _data.tier = 'Budget';\r\n                break;\r\n            case '1':\r\n                _data.tier = 'Standard';\r\n                break;\r\n            case '2':\r\n                _data.tier = 'Premium';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        this.setState({\r\n            tierPricing: _trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleSizeChange = (action) =>{\r\n        let _data = this.state.data\r\n        if(action==='incr' && _data.number!==4) \r\n            _data.number++\r\n        else if(action==='decr' && _data.number!==1)\r\n            _data.number--\r\n        let amt = Booking.calcTaxInclAmount(this.state.tierPricing * _data.number)\r\n        _data.amount = amt\r\n        this.setState({\r\n            data: _data,\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            this.setState({ paymentReady: true })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = () => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.ticketRegister(this.state.data, hmac)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.completion ? <SuccessPage/> : (\r\n                        <Payments\r\n                            name={this.state.data.regName}\r\n                            email={this.state.data.regEmail}\r\n                            phone={this.state.data.regPhone}\r\n                            amount={this.state.data.amount}\r\n                            calcTaxInclAmount={false}\r\n                            info={this.props.eventData.title}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <div className=\"Tickets container fit\">\r\n                        <div className=\"Details\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Events</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click proceed. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful booking.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\r\n                        <br/><br/>\r\n                        <div className=\"Seats\">\r\n                            {\r\n                                typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                    <div className=\"display container\">\r\n                                        <img src=\"https://xtacy.org/static/img/seatingTiers.png\" alt=\"seating\"/>\r\n                                    </div>\r\n                                ) : console.log()\r\n                            }\r\n                            <div className=\"controls container\">\r\n                                {\r\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                        <div className=\"tiers\">\r\n                                            <p>Select a Teir</p>\r\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\r\n                                                <option value={0}>Budget</option>\r\n                                                <option value={1}>Standard</option>\r\n                                                <option value={2}>Premium</option>\r\n                                            </select>\r\n                                        </div>                          \r\n                                    ) : console.log()\r\n                                }\r\n                                <div className=\"selector\">\r\n                                    <p>Select a Number</p>\r\n\r\n                                    <div className=\"number\">\r\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\r\n                                        \r\n                                        <div className=\"buttons\">\r\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\r\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.tierPricing + ' per ticket'}</p>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <h3>{'Total: \\u20B9 ' + this.state.data.amount}</h3>\r\n                                </div>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamEmail: null,\r\n                regTeamPhone: null,\r\n                regTeamInst: null,\r\n                amount: null,\r\n                members : []\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail', 'regTeamPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'regTeamLeader', 'regTeamSize' ]\r\n        }\r\n        _data.amount = Booking.calcTaxInclAmount(this.props.eventData.metadata.price)\r\n        \r\n        this.setState({\r\n            data: _data,\r\n            required: req\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                for ( let member of this.state.data.members )\r\n                    if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                        truth = false\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                    truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(this.props.eventData.metadata.paid) {\r\n                this.setState({ paymentReady: true })\r\n            } else {\r\n                this.success()\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = () => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.competeRegister(this.state.data, hmac)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.props.eventData.metadata.paid ? (\r\n                        <Payments\r\n                            name={this.state.data.regTeamName}\r\n                            email={this.state.data.regTeamEmail}\r\n                            phone={this.state.data.regTeamPhone}\r\n                            amount={this.state.data.amount}\r\n                            calcTaxInclAmount={true}\r\n                            info={this.props.eventData.title}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email\r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize} min={0}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesnt<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    The page you're trying to visit doesn't seem to be working. \r\n                    Try to reload the page or go back. If the issue persists, tell us about it at <a href=\"mailto:tech@xtacy.org\">tech@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React, { Component } from 'react';\r\nimport Booking from '../util/booking';\r\nimport '../Global.css';\r\n\r\nimport Register from './Register';\r\nimport Tickets from './Tickets';\r\nimport Compete from './Compete';\r\nimport LoadingPage from './LoadingPage';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            // DEBUG ---------------------------------------- //\r\n            // this.setState({\r\n            //     intent: 'com',\r\n            //     event: 'nerdwd',\r\n            //     eventData: {\r\n            //         \"title\": \"Nerd Words\",\r\n            //         \"eventId\": \"nerdwd\",\r\n            //         \"dates\": \"15\",\r\n            //         \"type\": \"com\",\r\n            //         \"metadata\": {\r\n            //             \"time\": \"1:00 PM\",\r\n            //             \"paid\": false,\r\n            //             \"price\": 0,\r\n            //             \"teams\": true,\r\n            //             \"teamSize\": 2,\r\n            //             \"teamSizeType\": \"loose\",\r\n            //             \"collectTeamGit\": false,\r\n            //             \"conductedBy\": \"Omair\"\r\n            //         }\r\n            //     },\r\n            //     loaded: true\r\n            // })\r\n            // ============================================== //\r\n            Booking.getEventData(this.props.event)\r\n                .then((eventData)=>{\r\n                    this.setState({\r\n                        intent: this.props.intent,\r\n                        event: this.props.event,\r\n                        eventData: eventData.data,\r\n                        loaded: true\r\n                    })\r\n                }).catch((err)=>{\r\n                    console.log(err)\r\n                })\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.intent!=='com' ? (\r\n                            this.state.intent!=='tic' ? (\r\n                                <ErrorPage/>\r\n                            ) : (\r\n                                <Tickets eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <Compete eventData={this.state.eventData}/>\r\n                        )\r\n                    ) : (\r\n                        <Register/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './components/Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // DEBUG ---------------------------------------- //\r\n        // let params = this.getParams(window.location)\r\n        // if (params.intent==='gen') params.event = 'any'\r\n        // this.setState({\r\n        //     intent: params.intent,\r\n        //     event: params.event,\r\n        //     ref: params.ref,\r\n        //     verified: true\r\n        // })\r\n        // ============================================== //\r\n        Secu.validateToken().then((result)=>{\r\n            if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n                    result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n                console.log('SR Tokens Verified')\r\n                Secu.generateSecurityFluff(4);\r\n\r\n                let params = this.getParams(window.location), verified = false\r\n                if (params.intent==='gen') params.event = 'any'\r\n        \r\n                let hashSequence = params.intent + config.clientKey + params.event\r\n                let hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n                if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n        \r\n                this.setState({\r\n                    intent: params.intent,\r\n                    event: params.event,\r\n                    hash: hash,\r\n                    ref: params.ref,\r\n                    verified: verified\r\n                })\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/book'}>\r\n                                <Switch>\r\n                                    <Route path={'/start'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n\r\n                                    <Route component={ErrorPage} />\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Bookings from './Bookings';\n\nReactDOM.render(<Bookings />, document.getElementById('root'));","const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', 'http://xtacy.org/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenName+k );\r\n                reject('CSR_TOKEN_INVALID');\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}"],"sourceRoot":""}