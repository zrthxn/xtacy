{"version":3,"sources":["util/secu.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/SuccessPage.jsx","components/Register.jsx","components/Payments.jsx","components/Tickets.jsx","components/Compete.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/Main.jsx","Bookings.jsx","index.js","util/booking.js"],"names":["config","require","exports","validateToken","Promise","resolve","reject","undefined","localStorage","getItem","Date","getTime","valReq","XMLHttpRequest","open","setRequestHeader","key","csrfTokenNameKey","token","csrfTokenName","k","removeItem","send","JSON","stringify","onreadystatechange","readyState","status","valRes","parse","response","setItem","generateSecurityFluff","amount","arr","i","tag","fluff","fluff_len","Math","floor","random","n","toString","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","Component","Footer","role","aria-label","Loading","SuccessPage","partials_Loading","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","payload","truth","_data","state","data","target","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","required","Symbol","iterator","next","done","field","err","return","setState","requiredFulfilled","action","hashSequence","hmac","crypto","createHmac","clientKey","update","digest","Booking","generalRegister","then","res","validation","completion","catch","alert","regName","regEmail","regPhone","regInst","components_SuccessPage","onChange","placeholder","onClick","bind","Payments","generateTxnID","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","abrupt","stop","txnid","hash","phone","props","calcTax","parseFloat","concat","payments","info","name","email","salt","createHash","method","readOnly","back","Tickets","handleTierChange","_trP","eventData","metadata","price","number","tier","tierPricing","handleSizeChange","amt","paymentReady","success","trP","_this2","components_Payments","title","src","alt","defaultValue","passive","console","log","Compete","includes","identifier","split","index","members","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","paid","competeFreeRegister","eventId","regTeamName","regTeamPhone","regTeamEmail","regTeamInst","req","collectTeamGit","teamSizeType","teamSize","push","max","map","mem","Compete_Member","Member","ErrorPage","LoadingPage","Timer","_isMounted","timeOut","setTimeout","components_ErrorPage","Main","intent","loaded","dates","time","teams","conductedBy","components_Tickets","components_Compete","components_Register","components_LoadingPage","Bookings","getParams","location","searchParams","URLSearchParams","search","get","ref","verified","params","window","sessionStorage","hashToken","partials_Header","BrowserRouter","basename","Switch","Route","path","components_Main","component","partials_Footer","ReactDOM","render","src_Bookings","document","getElementById","validateData","schema","csrf","genReq","checksum","genRes","responseHashSequence","rgn","responseHmac","comReq","comRes","getEventData","eventReq","eventRes","arb","atob"],"mappings":"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","file":"static/js/main.3664e606.chunk.js","sourcesContent":["const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', 'http://xtacy.org:3000/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenName+k );\r\n                reject('CSR_TOKEN_INVALID');\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}","import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                <li><a href=\"/about\">about</a></li>\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/register\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\"></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            <li><a href=\"/about\">about</a></li>\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/register\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"footer-links\">\r\n\t\t\t\t\t<div className=\"links\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"/\">Home</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/about\">About</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/contact\">Contact</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/register\">Register</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"faqs\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"/\">FAQs</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/contact\">Contact</a></li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = () => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <p className=\"center\">\r\n                    You have successfully registered!<br/>\r\n                </p>\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\n\r\nimport SuccessPage from './SuccessPage';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            let hashSequence = JSON.stringify(this.state.data)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            Booking.generalRegister(this.state.data, hmac)\r\n                .then((res)=>{\r\n                    if (res.validation)\r\n                        this.setState({ completion: true })\r\n                }).catch(()=>{\r\n                    alert('Error')\r\n                })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? (\r\n                    <SuccessPage/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>                        \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport './css/Payments.css';\r\n\r\n// AFTER SUCCESS\r\n// let hashSequence = this.state.data.regTeamName + config.clientKey + this.state.data.regTeamEmail\r\n// let hash = crypto.createHmac('sha256', hashSequence).digest('hex')\r\n// let key = localStorage.getItem(config.csrfTokenNameKey)\r\n// let token = localStorage.getItem(config.csrfTokenName+key)\r\n// Booking.competeRegister(this.state.data, {key: key, token: token}, hash)\r\n//     .then((res)=>{\r\n//         if (res.validation)\r\n//             this.setState({ completion: true })\r\n//     }).catch(()=>{\r\n//         alert('Error')\r\n//     })\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            txnid: 0x00,\r\n            hash: 0x00,\r\n            amount: 0x00,\r\n            data : {\r\n                phone: null\r\n            },\r\n            required: [\r\n                'phone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let txnid = await this.generateTxnID()\r\n        let amount =  this.props.calcTax ? parseFloat(this.props.amount * 1.04) : this.props.amount\r\n        let hashSequence = `${config.payments.key}|${txnid}|${amount}|${this.props.info}|` +\r\n        `${this.props.name}|${this.props.email}|${''}|${''}|${''}|${''}|${''}|${''}|||||${config.payments.salt}`\r\n        let hash = crypto.createHash('sha512').update(hashSequence).digest('hex')\r\n        this.setState({\r\n            amount: amount,\r\n            txnid: txnid,\r\n            hash: hash\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    generateTxnID = async () => {\r\n        let txn = \"992901388911238GVDWO\"\r\n        return txn\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n                <h2>Payments Page</h2>\r\n\r\n                {/* <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"phone\" placeholder=\"Phone\"/> */}\r\n\r\n                <div className=\"display\">\r\n                    <div className=\"amount\">\r\n                        <h3>{this.state.amount}</h3>\r\n                        <p>AMOUNT</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* https://secure.payu.in/_payment on production or https://sandboxsecure.payu.in/_payment in test */}\r\n                <form action=\"https://sandboxsecure.payu.in/_payment\" method=\"POST\" name=\"payuform\" className=\"form\">\r\n                    <input hidden readOnly type=\"text\" name=\"key\" value={config.payments.key}/>\r\n\r\n                    <input hidden readOnly type=\"text\" name=\"firstname\" value={this.props.name}/>\r\n                    <input hidden readOnly type=\"text\" name=\"email\" value={this.props.email}/>\r\n                    <input hidden readOnly type=\"text\" name=\"productinfo\" value={this.props.info}/>\r\n                    <input hidden readOnly type=\"text\" name=\"txnid\" value={this.state.txnid}/>\r\n                    <input hidden readOnly type=\"text\" name=\"amount\" value={this.state.amount}/>\r\n\r\n                    {/* <input hidden readOnly type=\"text\" name=\"phone\" value={this.state.data.phone}/> */}\r\n                    <input required type=\"text\" name=\"phone\" className=\"textbox\" onChange={this.handleChange} \r\n                        id=\"phone\" placeholder=\"Phone\"/>\r\n\r\n                    <p>Information about the booking as seen from space</p>\r\n\r\n                    <input hidden readOnly type=\"text\" name=\"hash\" value={this.state.hash}/>\r\n\r\n                    {/* <input hidden readOnly type=\"text\" name=\"udf1\" value=\"\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"udf2\" value=\"\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"udf3\" value=\"\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"udf4\" value=\"\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"udf5\" value=\"\"/> */}\r\n\r\n                    <input hidden readOnly type=\"text\" name=\"surl\" value=\"http://xtacy.org/s/\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"furl\" value=\"http://xtacy.org/f/\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"service_provider\" value=\"payu_paisa\"/>\r\n\r\n                    <div className=\"action\">\r\n                        <button className=\"button solid\" onClick={ this.props.back.bind(this) }>BACK</button>\r\n                        <button className=\"button solid red\" name=\"submit\">PROCEED</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport Payments from './Payments';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport './css/Tickets.css';\r\nimport '../Global.css'; \r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            tierPricing: null,\r\n            data : {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null,\r\n                tier: null,\r\n                number: 0,\r\n                amount: 0\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let trP, _data = this.state.data;\r\n        if( typeof this.props.eventData.metadata.price === 'number' )\r\n            trP = this.props.eventData.metadata.price\r\n        else if( typeof this.props.eventData.metadata.price === 'object' )\r\n            trP = this.props.eventData.metadata.price[1]\r\n\r\n        _data.number = 1\r\n        _data.tier = 'Standard'\r\n        _data.amount = trP * _data.number * 1.04\r\n        this.setState({\r\n            tierPricing: trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\r\n        _data.amount = _trP * _data.number * 1.04\r\n        switch (event.target.value) {\r\n            case '0':\r\n                _data.tier = 'Budget';\r\n                break;\r\n            case '1':\r\n                _data.tier = 'Standard';\r\n                break;\r\n            case '2':\r\n                _data.tier = 'Premium';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        this.setState({\r\n            tierPricing: _trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleSizeChange = (action) =>{\r\n        let _data = this.state.data\r\n        if(action==='incr' && _data.number!==4) \r\n            _data.number++\r\n        else if(action==='decr' && _data.number!==1)\r\n            _data.number--\r\n        let amt = this.state.tierPricing * _data.number * 1.04\r\n        _data.amount = amt\r\n        this.setState({\r\n            data: _data,\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            this.setState({ paymentReady: true })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = () => {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.completion ? <SuccessPage/> : (\r\n                        <Payments\r\n                            name={this.state.data.regName}\r\n                            email={this.state.data.regEmail}\r\n                            phone={this.state.data.regPhone}\r\n                            amount={this.state.data.amount}\r\n                            calcTax={false}\r\n                            info={this.props.eventData.title}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <div className=\"Tickets container fit\">\r\n                        <div className=\"Details\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Events</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click proceed. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful booking.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\r\n                        <div className=\"Seats\">\r\n                            <div className=\"display container\">\r\n                                <img src=\"/static/img/thumb.jpg\" alt=\"seating\"/>\r\n                            </div>\r\n                            <div className=\"controls container\">\r\n                                {\r\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                        <div className=\"tiers\">\r\n                                            <p>Select a Teir</p>\r\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\r\n                                                <option value={0}>Budget</option>\r\n                                                <option value={1}>Standard</option>\r\n                                                <option value={2}>Premium</option>\r\n                                            </select>\r\n                                        </div>                          \r\n                                    ) : console.log()\r\n                                }\r\n                                <div className=\"selector\">\r\n                                    <p>Select a Number</p>\r\n\r\n                                    <div className=\"number\">\r\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\r\n                                        \r\n                                        <div className=\"buttons\">\r\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\r\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'Rs ' + this.state.tierPricing + ' per ticket'}</p>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <h3>{'Total: Rs ' + this.state.data.amount}</h3>\r\n                                </div>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamPhone: null,\r\n                regTeamEmail: null,\r\n                regTeamInst: null,\r\n                members : []\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamLeader', 'regTeamPhone', 'regTeamSize' ]\r\n        }\r\n        \r\n        this.setState({\r\n            data: _data,\r\n            required: req\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                for ( let member of this.state.data.members )\r\n                    if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                        truth = false\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                    truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(this.props.eventData.metadata.paid) {\r\n                this.setState({ paymentReady: true })\r\n            } else {\r\n                this.success()\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = () => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.competeFreeRegister(this.state.data, hmac)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.props.eventData.metadata.paid ? (\r\n                        <Payments\r\n                            name={this.state.data.regTeamName}\r\n                            email={this.state.data.regTeamEmail}\r\n                            phone={this.state.data.regTeamPhone}\r\n                            amount={this.props.eventData.metadata.price}\r\n                            calcTax={true}\r\n                            info={this.props.eventData.title}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                            success={ this.success }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email\r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesnt<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    The page you're trying to visit doesn't seem to be working. \r\n                    Try to reload the page or go back.<br/>\r\n                    If the issue persists, tell us about it at <a href=\"mailto:tech@xtacy.org\">tech@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React, { Component } from 'react';\r\nimport Booking from '../util/booking';\r\nimport '../Global.css';\r\n\r\nimport Register from './Register';\r\nimport Tickets from './Tickets';\r\nimport Compete from './Compete';\r\nimport LoadingPage from './LoadingPage';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            this.setState({\r\n                intent: 'tic',\r\n                event: 'dastan',\r\n                eventData: {\r\n                    \"title\": \"Mehmood Bhai\",\r\n                    \"eventId\": \"dastan\",\r\n                    \"dates\": \"16\",\r\n                    \"type\": \"tic\",\r\n                    \"metadata\": {\r\n                        \"time\": \"1:00 PM\",\r\n                        \"paid\": true,\r\n                        \"price\": [\r\n                            100, 150, 250\r\n                        ],\r\n                        \"teams\": false,\r\n                        \"teamSize\": null,\r\n                        \"teamSizeType\": null,\r\n                        \"collectTeamGit\": false,\r\n                        \"conductedBy\": \"Daniyal\"\r\n                    }\r\n                },\r\n                loaded: true\r\n            })\r\n            // Booking.getEventData(this.props.event)\r\n            //     .then((eventData)=>{\r\n            //         this.setState({\r\n            //             intent: this.props.intent,\r\n            //             event: this.props.event,\r\n            //             eventData: eventData.data,\r\n            //             loaded: true\r\n            //         })\r\n            //     }).catch((err)=>{\r\n            //         console.log(err)\r\n            //     })\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.intent!=='com' ? (\r\n                            this.state.intent!=='tic' ? (\r\n                                <ErrorPage/>\r\n                            ) : (\r\n                                <Tickets eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <Compete eventData={this.state.eventData}/>\r\n                        )\r\n                    ) : (\r\n                        <Register/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './components/Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let params = this.getParams(window.location), verified = false\r\n        if (params.intent==='gen') params.event = 'any'\r\n\r\n        let hashSequence = params.intent + config.clientKey + params.event\r\n        let hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n        if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n\r\n        this.setState({\r\n            intent: params.intent,\r\n            event: params.event,\r\n            hash: hash,\r\n            ref: params.ref,\r\n            verified: true\r\n        })\r\n        // Secu.validateToken().then((result)=>{\r\n        //     if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n        //             result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n        //         console.log('SR Tokens Verified')\r\n        //         Secu.generateSecurityFluff(4);\r\n\r\n        //         let params = this.getParams(window.location), verified = false\r\n        //         if (params.intent==='gen') params.event = 'any'\r\n        \r\n        //         let hashSequence = params.intent + config.clientKey + params.event\r\n        //         let hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n        //         if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n        \r\n        //         this.setState({\r\n        //             intent: params.intent,\r\n        //             event: params.event,\r\n        //             hash: hash,\r\n        //             ref: params.ref,\r\n        //             verified: verified\r\n        //         })\r\n        //     }\r\n        // }).catch((err)=>{\r\n        //     console.error(err)\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/book'}>\r\n                                <Switch>\r\n                                    <Route path={'/start'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n\r\n                                    <Route component={ErrorPage} />\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Bookings from './Bookings';\n\nReactDOM.render(<Bookings />, document.getElementById('root'));","const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', 'http://xtacy.org:3000/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash}));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                \r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                console.log(genRes)\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n\r\n                // let responseHashSequence = JSON.parse(genReq.response).rgn + config.clientKey + data.regName\r\n                // let responseHash = crypto.createHash('sha256').update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeFreeRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', 'http://xtacy.org:3000/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash}));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                \r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                console.log(comRes.rgn)\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n\r\n                // let responseHashSequence = JSON.parse(genReq.response).rgn + config.clientKey + data.regName\r\n                // let responseHash = crypto.createHash('sha256').update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n\r\n                // let responseHashSequence = JSON.parse(comReq.response).rgn + config.clientKey + data.regTeamName\r\n                // let responseHash = crypto.createHash('sha256').update(responseHashSequence).digest('hex')\r\n                // if (JSON.parse(comReq.response).hash===responseHash)\r\n                //     resolve(JSON.parse(comReq.response));\r\n                // else\r\n                //     reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', 'http://xtacy.org:3000/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}"],"sourceRoot":""}