{"version":3,"sources":["components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/SuccessPage.jsx","components/Register.jsx","components/Tickets.jsx","components/Payments.jsx","components/Compete.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/Main.jsx","Bookings.jsx","index.js","util/booking.js","util/secu.js"],"names":["Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","Component","Footer","role","aria-label","Loading","SuccessPage","partials_Loading","config","require","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","payload","truth","_data","state","data","target","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","required","Symbol","iterator","next","done","field","err","return","setState","requiredFulfilled","action","hashSequence","JSON","stringify","hmac","crypto","createHmac","clientKey","update","digest","Booking","generalRegister","then","res","validation","completion","catch","alert","regName","regEmail","regPhone","regInst","components_SuccessPage","onChange","placeholder","onClick","bind","Tickets","Payments","generateTxnID","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","abrupt","stop","txnid","hash","amount","phone","parseFloat","props","concat","payments","key","info","name","email","salt","createHash","method","readOnly","back","Compete","includes","identifier","split","index","members","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","eventData","metadata","paid","paymentReady","competeFreeRegister","eventId","regTeamName","regTeamEmail","regTeamInst","req","collectTeamGit","teamSizeType","i","teamSize","push","_this2","components_Payments","price","title","console","log","max","map","mem","Compete_Member","Member","ErrorPage","LoadingPage","Timer","_isMounted","timeOut","setTimeout","components_ErrorPage","Main","intent","loaded","getEventData","components_Tickets","components_Compete","components_Register","components_LoadingPage","Bookings","getParams","location","searchParams","URLSearchParams","search","get","ref","verified","Secu","validateToken","result","generateSecurityFluff","params","window","sessionStorage","getItem","hashToken","error","partials_Header","BrowserRouter","basename","Switch","Route","path","components_Main","component","partials_Footer","ReactDOM","render","src_Bookings","document","getElementById","exports","validateData","schema","csrf","localStorage","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","rgn","responseHmac","comReq","comRes","eventReq","eventRes","arb","atob","Date","getTime","valReq","genTReq","setItem","valRes","removeItem","k","arr","tag","fluff","fluff_len","Math","floor","random","n","toString"],"mappings":"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","file":"static/js/main.8f12d0b5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                <li><a href=\"/about\">about</a></li>\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/register\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\"></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            <li><a href=\"/about\">about</a></li>\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/register\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"footer-links\">\r\n\t\t\t\t\t<div className=\"links\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"/\">Home</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/about\">About</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/contact\">Contact</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/register\">Register</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"faqs\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href=\"/\">FAQs</a></li>\r\n\t\t\t\t\t\t<li><a href=\"/contact\">Contact</a></li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = () => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <p className=\"center\">\r\n                    You have successfully registered!<br/>\r\n                </p>\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\n\r\nimport SuccessPage from './SuccessPage';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            let hashSequence = JSON.stringify(this.state.data)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            Booking.generalRegister(this.state.data, hmac)\r\n                .then((res)=>{\r\n                    if (res.validation)\r\n                        this.setState({ completion: true })\r\n                }).catch(()=>{\r\n                    alert('Error')\r\n                })\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? (\r\n                    <SuccessPage/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>                        \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\n\r\nimport '../Global.css'; \r\n\r\n// non competitve PAID i.e. Ticketed events\r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                regName: null\r\n            },\r\n            required: [\r\n                'regName'\r\n            ]\r\n        }\r\n    }\r\n\r\n    // let hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Tickets\">\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport './css/Payments.css';\r\n\r\n// AFTER SUCCESS\r\n// let hashSequence = this.state.data.regTeamName + config.clientKey + this.state.data.regTeamEmail\r\n// let hash = crypto.createHmac('sha256', hashSequence).digest('hex')\r\n// let key = localStorage.getItem(config.csrfTokenNameKey)\r\n// let token = localStorage.getItem(config.csrfTokenName+key)\r\n// Booking.competeRegister(this.state.data, {key: key, token: token}, hash)\r\n//     .then((res)=>{\r\n//         if (res.validation)\r\n//             this.setState({ completion: true })\r\n//     }).catch(()=>{\r\n//         alert('Error')\r\n//     })\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            txnid: 0x00,\r\n            hash: 0x00,\r\n            amount: 0x00,\r\n            data : {\r\n                phone: null\r\n            },\r\n            required: [\r\n                'phone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let txnid = await this.generateTxnID()\r\n        let amount = parseFloat(this.props.amount * 1.04) \r\n        let hashSequence = `${config.payments.key}|${txnid}|${amount}|${this.props.info}|` +\r\n        `${this.props.name}|${this.props.email}|${''}|${''}|${''}|${''}|${''}|${''}|||||${config.payments.salt}`\r\n        let hash = crypto.createHash('sha512').update(hashSequence).digest('hex')\r\n        this.setState({\r\n            amount: amount,\r\n            txnid: txnid,\r\n            hash: hash\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    generateTxnID = async () => {\r\n        let txn = \"992901388911238GVDWO\"\r\n        return txn\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n                <h2>Payments Page</h2>\r\n\r\n                {/* <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"phone\" placeholder=\"Phone\"/> */}\r\n\r\n                <div className=\"display\">\r\n                    <div className=\"amount\">\r\n                        <h3>{this.state.amount}</h3>\r\n                        <p>AMOUNT</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* https://secure.payu.in/_payment on production or https://sandboxsecure.payu.in/_payment in test */}\r\n                <form action=\"https://sandboxsecure.payu.in/_payment\" method=\"POST\" name=\"payuform\" className=\"form\">\r\n                    <input hidden readOnly type=\"text\" name=\"key\" value={config.payments.key}/>\r\n\r\n                    <input hidden readOnly type=\"text\" name=\"firstname\" value={this.props.name}/>\r\n                    <input hidden readOnly type=\"text\" name=\"email\" value={this.props.email}/>\r\n                    <input hidden readOnly type=\"text\" name=\"productinfo\" value={this.props.info}/>\r\n                    <input hidden readOnly type=\"text\" name=\"txnid\" value={this.state.txnid}/>\r\n                    <input hidden readOnly type=\"text\" name=\"amount\" value={this.state.amount}/>\r\n\r\n                    {/* <input hidden readOnly type=\"text\" name=\"phone\" value={this.state.data.phone}/> */}\r\n                    <input required type=\"text\" name=\"phone\" className=\"textbox\" onChange={this.handleChange} \r\n                        id=\"phone\" placeholder=\"Phone\"/>\r\n\r\n                    <p>Information about the booking as seen from space</p>\r\n\r\n                    <input hidden readOnly type=\"text\" name=\"hash\" value={this.state.hash}/>\r\n\r\n                    {/* <input hidden readOnly type=\"text\" name=\"udf1\" value=\"\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"udf2\" value=\"\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"udf3\" value=\"\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"udf4\" value=\"\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"udf5\" value=\"\"/> */}\r\n\r\n                    <input hidden readOnly type=\"text\" name=\"surl\" value=\"http://xtacy.org/s/\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"furl\" value=\"http://xtacy.org/f/\"/>\r\n                    <input hidden readOnly type=\"text\" name=\"service_provider\" value=\"payu_paisa\"/>\r\n\r\n                    <div className=\"action\">\r\n                        <button className=\"button solid\" onClick={ this.props.back.bind(this) }>BACK</button>\r\n                        <button className=\"button solid red\" name=\"submit\">PROCEED</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamEmail: null,\r\n                regTeamInst: null,\r\n                members : []\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamLeader', 'regTeamPhone', 'regTeamSize' ]\r\n        }\r\n        \r\n        this.setState({\r\n            data: _data,\r\n            required: req\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                for ( let member of this.state.data.members )\r\n                    if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                        truth = false\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                    truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(this.props.eventData.metadata.paid) {\r\n                this.setState({ paymentReady: true })\r\n            } else {                \r\n                let hashSequence = JSON.stringify(this.state.data)\r\n                let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n                Booking.competeFreeRegister(this.state.data, hmac)\r\n                    .then((res)=>{\r\n                        if (res.validation)\r\n                            this.setState({ paymentReady: true, completion: true })\r\n                    }).catch(()=>{\r\n                        alert('Error')\r\n                    })\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.props.eventData.metadata.paid ? (\r\n                        <Payments\r\n                            name={this.state.data.regTeamName}\r\n                            email={this.state.data.regTeamEmail}\r\n                            amount={this.props.eventData.metadata.price}\r\n                            info={this.props.eventData.title}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesnt<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    The page you're trying to visit doesn't seem to be working. \r\n                    Try to reload the page or go back.<br/>\r\n                    If the issue persists, tell us about it at <a href=\"mailto:tech@xtacy.org\">tech@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React, { Component } from 'react';\r\nimport Booking from '../util/booking';\r\nimport '../Global.css';\r\n\r\nimport Register from './Register';\r\nimport Tickets from './Tickets';\r\nimport Compete from './Compete';\r\nimport LoadingPage from './LoadingPage';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            Booking.getEventData(this.props.event)\r\n                .then((eventData)=>{\r\n                    this.setState({\r\n                        intent: this.props.intent,\r\n                        event: this.props.event,\r\n                        eventData: eventData.data,\r\n                        loaded: true\r\n                    })\r\n                }).catch((err)=>{\r\n                    console.log(err)\r\n                })\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.intent!=='com' ? (\r\n                            this.state.intent!=='tic' ? (\r\n                                <ErrorPage/>\r\n                            ) : (\r\n                                <Tickets eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <Compete eventData={this.state.eventData}/>\r\n                        )\r\n                    ) : (\r\n                        <Register/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './components/Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Secu.validateToken().then((result)=>{\r\n            if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n                    result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n                console.log('SR Tokens Verified')\r\n                Secu.generateSecurityFluff(4);\r\n\r\n                let params = this.getParams(window.location), verified = false\r\n                if (params.intent==='gen') params.event = 'any'\r\n        \r\n                let hashSequence = params.intent + config.clientKey + params.event\r\n                let hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n                if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n        \r\n                this.setState({\r\n                    intent: params.intent,\r\n                    event: params.event,\r\n                    hash: hash,\r\n                    ref: params.ref,\r\n                    verified: verified\r\n                })\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/book'}>\r\n                                <Switch>\r\n                                    <Route path={'/start'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n\r\n                                    <Route component={ErrorPage} />\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Bookings from './Bookings';\n\nReactDOM.render(<Bookings />, document.getElementById('root'));","const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', 'http://xtacy.org:3000/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash}));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                \r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                console.log(genRes)\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n\r\n                // let responseHashSequence = JSON.parse(genReq.response).rgn + config.clientKey + data.regName\r\n                // let responseHash = crypto.createHash('sha256').update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeFreeRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', 'http://xtacy.org:3000/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash}));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                \r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                console.log(comRes.rgn)\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n\r\n                // let responseHashSequence = JSON.parse(genReq.response).rgn + config.clientKey + data.regName\r\n                // let responseHash = crypto.createHash('sha256').update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n\r\n                // let responseHashSequence = JSON.parse(comReq.response).rgn + config.clientKey + data.regTeamName\r\n                // let responseHash = crypto.createHash('sha256').update(responseHashSequence).digest('hex')\r\n                // if (JSON.parse(comReq.response).hash===responseHash)\r\n                //     resolve(JSON.parse(comReq.response));\r\n                // else\r\n                //     reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', 'http://xtacy.org:3000/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}","const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', 'http://xtacy.org:3000/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                const genTReq = new XMLHttpRequest();\r\n                genTReq.open('GET', 'http://xtacy.org:3000/_secu/csrtoken/', true);\r\n                genTReq.send();\r\n                genTReq.onreadystatechange = () => {\r\n                    if(genTReq.readyState===4 && genTReq.status===200) {\r\n                        key = JSON.parse(genTReq.response).key;\r\n                        token = JSON.parse(genTReq.response).token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_GEN');\r\n                    }\r\n                }\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}"],"sourceRoot":""}