{"version":3,"sources":["util/booking.js","components/partials/Header.jsx","components/partials/Footer.jsx","components/partials/Loading.jsx","components/ErrorPage.jsx","components/LoadingPage.jsx","components/SuccessPage.jsx","components/Payments.jsx","components/Register.jsx","components/Tickets.jsx","components/Compete.jsx","Main.jsx","Bookings.jsx","index.js","util/database.js","util/secu.js"],"names":["crypto","require","config","exports","validateData","data","schema","generalRegister","hash","csrf","key","localStorage","getItem","csrfTokenNameKey","token","csrfTokenName","Promise","resolve","reject","genReq","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","checksum","onreadystatechange","readyState","status","genRes","parse","response","responseHashSequence","validation","rgn","responseHmac","createHmac","clientKey","update","digest","competeRegister","txn","comReq","comRes","ticketRegister","ticReq","ticRes","getEventData","eventId","eventReq","eventRes","i","arb","atob","calcTaxInclAmount","amt","parseFloat","toFixed","Header","react_default","a","createElement","className","type","id","hidden","htmlFor","href","onClick","document","getElementById","checked","Component","Footer","src","alt","role","aria-label","Loading","ErrorPage","errorCode","removeItem","errorContent","partials_Loading","LoadingPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Timer","_isMounted","setState","timeOut","state","setTimeout","props","components_ErrorPage","SuccessPage","payment","Payments","paymentSuccesful","console","log","_JSON$parse","sessionStorage","regData","eventData","Database","firestore","collection","doc","txnId","verified","then","hashSequence","hmac","Booking","res","paymentCreated","completion","catch","alert","err","error","paymentCancelled","back","paymentError","setItem","action","returnKey","Math","floor","random","toString","returnPayToken","btoa","window","location","redHotURL","paymentId","amount","required","_this2","returnTxnId","base","POST_DATA","tax","total","payer","name","email","phone","createReq","paymentData","payment_id","longurl","get","snapshot","components_SuccessPage","bind","components_LoadingPage","Register","handleChange","event","payload","truth","_data","target","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","field","return","requiredFulfilled","handleTierChange","tier","premium","errors","regName","regEmail","regPhone","regInst","match","components_Payments","title","onChange","onBlur","validate","placeholder","intent","Tickets","_trP","metadata","price","number","tierPricing","handleSizeChange","paymentReady","success","specialRequests","trP","defaultValue","passive","Compete","includes","identifier","split","index","members","teamStrictType","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","paid","_err","regTeamName","regTeamEmail","regTeamPhone","regTeamInst","req","collectTeamGit","teamSizeType","teamSize","push","regTeamLeader","max","min","map","mem","Compete_Member","Member","Main","loaded","published","components_Register","components_Tickets","components_Compete","Bookings","getParams","searchParams","URLSearchParams","search","ref","Secu","validateToken","result","generateSecurityFluff","params","createHash","hashToken","partials_Header","BrowserRouter","basename","Switch","Route","path","src_Main","component","partials_Footer","ReactDOM","render","src_Bookings","firebase","credentials","apps","length","initializeApp","database","settings","timestampsInSnapshots","Date","getTime","valReq","k","valRes","arr","tag","fluff","fluff_len","n"],"mappings":"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","file":"static/js/main.6c6b1e5c.chunk.js","sourcesContent":["const crypto = require('crypto');\r\nconst config = require('./config.json');\r\n\r\nexports.validateData = (data, schema) => {\r\n\r\n}\r\n\r\nexports.generalRegister = (data, hash) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const genReq = new XMLHttpRequest();\r\n        genReq.open('POST', '/_register/gen/', true);\r\n        genReq.setRequestHeader('Content-Type', 'application/json');\r\n        genReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash }));\r\n\r\n        genReq.onreadystatechange = () => {\r\n            if(genReq.readyState===4 && genReq.status===200) {\r\n                let genRes = JSON.parse(genReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: genRes.validation, rgn: genRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (genRes.hash===responseHmac)\r\n                    resolve(genRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.competeRegister = (data, hash, txn) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const comReq = new XMLHttpRequest();\r\n        comReq.open('POST', '/_register/com/', true);\r\n        comReq.setRequestHeader('Content-Type', 'application/json');\r\n        comReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\r\n\r\n        comReq.onreadystatechange = () => {\r\n            if(comReq.readyState===4 && comReq.status===200) {\r\n                let comRes = JSON.parse(comReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: comRes.validation, rgn: comRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (comRes.hash===responseHmac)\r\n                    resolve(comRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.ticketRegister = (data, hash, txn) => {\r\n    let csrf = {\r\n        key: localStorage.getItem(config.csrfTokenNameKey),\r\n        token: localStorage.getItem(config.csrfTokenName + \r\n            localStorage.getItem(config.csrfTokenNameKey))\r\n    };\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const ticReq = new XMLHttpRequest();\r\n        ticReq.open('POST', '/_register/tic/', true);\r\n        ticReq.setRequestHeader('Content-Type', 'application/json');\r\n        ticReq.send(JSON.stringify({ \"data\": data, \"csrf\": csrf, \"checksum\": hash, \"txn\": txn }));\r\n\r\n        ticReq.onreadystatechange = () => {\r\n            if(ticReq.readyState===4 && ticReq.status===200) {\r\n                let ticRes = JSON.parse(ticReq.response);\r\n                let responseHashSequence = JSON.stringify({ validation: ticRes.validation, rgn: ticRes.rgn })\r\n                let responseHmac = crypto.createHmac('sha256', config.clientKey).update(responseHashSequence).digest('hex')\r\n                if (ticRes.hash===responseHmac)\r\n                    resolve(ticRes);\r\n                else\r\n                    reject('HASH_MISMATCH');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//----------------------------------------------------------\r\n\r\nexports.getEventData = (eventId) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const eventReq = new XMLHttpRequest();\r\n        eventReq.open('GET', '/register/_eventData/' + eventId + '/', true);\r\n        eventReq.send();\r\n        eventReq.onreadystatechange = () => {\r\n            if(eventReq.readyState===4 && eventReq.status===200) {\r\n                let eventRes = JSON.parse(eventReq.response);\r\n                if(eventRes.validation) {\r\n                    for (let i = 0; i < eventRes.arb; i++) \r\n                        eventRes.data = atob(eventRes.data)\r\n                    eventRes.data = JSON.parse(eventRes.data)\r\n                    resolve(eventRes);\r\n                } else {\r\n                    reject('CSRF_INVALID');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexports.calcTaxInclAmount = (amt) => {\r\n    /**\r\n     * Calculates the net amout to be paid \r\n     * such that the amount recieved after deductions is\r\n     * equal to the fee of the event\r\n    */\r\n    // Flat transaction fee in Rupees\r\n    const flatFee = 3\r\n\r\n    // Transaction fee in percent\r\n    const txnFeePct = 2.5\r\n    \r\n    // Applicable TAX in percent\r\n    // Note: TAX is applied on the transaction fee only\r\n    const taxPct = 18\r\n    \r\n    return (\r\n        parseFloat(\r\n            (amt + flatFee) / \r\n            (1 - txnFeePct/100 - ((taxPct/100) * (txnFeePct/100)))            \r\n        ).toFixed(2)\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport '../css/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo-rotor\">\r\n                            <div className=\"rotary\"></div>\r\n                        </div>\r\n                        <p className=\"logo-text\">xtacy</p>\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true} />\r\n                    <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\r\n\r\n                    <div className=\"sidebar\">\r\n                        <nav className=\"sidebar-nav\">\r\n                            <ul>\r\n                                <li><a href=\"/\">home</a></li>\r\n                                {/* <li><a href=\"/about\">about</a></li> */}\r\n                                <li><a href=\"/events\">events</a></li>\r\n                                <li><a href=\"/contact\">contact</a></li>\r\n                                <li><a href=\"/signup\">register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"accent\"></div>\r\n                    </div>\r\n                    <div className=\"sidebar-shadow\" id=\"sidebar-shadow\" onClick={() => {\r\n                        document.getElementById(\"sidebar-toggle\").checked = false;\r\n                    }}></div>\r\n                    \r\n                    <nav className=\"desktop-nav\">\r\n                        <ul>\r\n                            <li><a href=\"/\">home</a></li>\r\n                            {/* <li><a href=\"/about\">about</a></li> */}\r\n                            <li><a href=\"/events\">events</a></li>\r\n                            <li><a href=\"/contact\">contact</a></li>\r\n                            <li className=\"highlight\"><a href=\"/signup\" className=\"highlight\">register</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../css/Footer.css';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"base container\">\r\n\t\t\t\t\t<div className=\"collab\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"base-title\">xtacy</span><br/>\r\n\t\t\t\t\t\t\tThe annual techno-cultural extravaganza organized by Faculty of Engineering, Jamia Millia Islamia\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"collab-imgs\">\r\n\t\t\t\t\t\t\t<img src=\"/static/img/collaborators.png\" alt=\"\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"dev\">Developed with <span role=\"img\" aria-label=\"love\">💛</span> by NAMAK</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../../Global.css';\r\nimport '../css/Loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-rotary\">\r\n                    <div className=\"rotary\"></div>\r\n                </div>\r\n                <p className=\"loading-x\">x</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst ErrorPage = () => {\r\n    const errorCode = localStorage.getItem('payment-error-code')\r\n    localStorage.removeItem('payment-error-code')\r\n    var errorContent = 'This page isn\\'t working.'\r\n\r\n    switch (errorCode) {\r\n        case 'CSRF_TIMEOUT':\r\n            errorContent = 'The page timed out.'\r\n            break\r\n        case 'SERVER_ERROR':\r\n            errorContent = 'There was a server error.'\r\n            break\r\n        case 'PORTAL_ERROR':\r\n            errorContent = 'The payment service may be down.'\r\n            break\r\n        case 'RESPONSE_HASH_MISMATCH':\r\n            errorContent = 'The payment couldn\\'t be verified.'\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    return (\r\n        <section className=\"ErrorPage\">\r\n            <div className=\"container\">\r\n                <Loading/>\r\n                <h3>that doesn't<br/>look right</h3>\r\n\r\n                <p className=\"center\">\r\n                    <b>{ errorContent }</b><br/><br/>\r\n                    Try to reload the page or go back. If the issue persists, tell us about it at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport ErrorPage from './ErrorPage';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nclass LoadingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this._isMounted = false;\r\n        this.state = { timeOut: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        setTimeout(this.Timer, this.props.timeOut)\r\n    }\r\n\r\n    Timer = () => this._isMounted && this.setState({ timeOut: true })\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.timeOut ? (\r\n                    <ErrorPage/>\r\n                ) : (\r\n                    <div className=\"LoadingPage\">\r\n                        <div className=\"container\">\r\n                            <Loading/>\r\n                            <p className=\"center\"> loading </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n           \r\n            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default LoadingPage;","import React from 'react';\r\nimport Loading from './partials/Loading';\r\n\r\nimport './css/Snippets.css';\r\nimport '../Global.css';\r\n\r\nconst SuccessPage = (props) => {\r\n    return (\r\n        <div className=\"SuccessPage\">\r\n            <div className=\"container fit\">\r\n                <Loading/>\r\n                <h3>Success!</h3>\r\n\r\n                <div>\r\n                    {\r\n                        props.payment ? (\r\n                            <b>Your payment was successful</b>\r\n                        ) : (\r\n                            <b>Your registration was successful</b>\r\n                        )\r\n                    }\r\n                    \r\n                    <br/><br/>\r\n                    Your registration number is\r\n                    <div className=\"rgn\">{ props.rgn }</div>\r\n                    <br/>\r\n\r\n                    <p className=\"center\">\r\n                        We have sent a confirmation message on the email you entered. If you don't recieve \r\n                        it in the next few minutes, please contact us \r\n                        at <a href=\"mailto:support@xtacy.org\">support@xtacy.org</a>\r\n                    </p>\r\n\r\n                    <span><a href=\"/terms\">Terms</a> | <a href=\"/\">Home</a></span>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuccessPage;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport LoadingPage from './LoadingPage';\r\n\r\nimport Database from '../util/database';\r\nimport Booking from '../util/booking';\r\nimport './css/Payments.css';\r\nimport SuccessPage from './SuccessPage';\r\nimport ErrorPage from './ErrorPage';\r\nimport { RSA_NO_PADDING } from 'constants';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Payments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentCreated: false,\r\n            completion: false,\r\n            paymentSuccesful: false,\r\n            txnId: null,\r\n            paymentId: null,\r\n            amount: null,\r\n            data : null,\r\n            required: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let returnKey = localStorage.getItem('x-return-key')\r\n        let returnPayToken = localStorage.getItem('x-return-pay-token')\r\n        let returnTxnId = localStorage.getItem('x-txn-id')\r\n\r\n        if(returnKey==='PAY_INITIALIZE') {\r\n            // Payment Initiate Process\r\n            let base = this.props.amount, amt = Booking.calcTaxInclAmount(this.props.amount)\r\n            let POST_DATA = {\r\n                eventData: this.props.eventData,\r\n                amount: {\r\n                    base: base,\r\n                    tax:  (amt - base).toFixed(2),\r\n                    total: amt\r\n                },\r\n                payer: {\r\n                    name: this.props.name,\r\n                    email: this.props.email,\r\n                    phone: this.props.phone,\r\n                }\r\n            }\r\n            \r\n            let hashSequence = JSON.stringify(POST_DATA)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n            \r\n            const createReq = new XMLHttpRequest()\r\n            createReq.open('POST', '/_payment/create/', true)\r\n            createReq.setRequestHeader('Content-Type', 'application/json')\r\n            createReq.send(JSON.stringify({\r\n                data: POST_DATA,\r\n                csrf: {\r\n                    key: localStorage.getItem(config.csrfTokenNameKey),\r\n                    token: localStorage.getItem(config.csrfTokenName + localStorage.getItem(config.csrfTokenNameKey))\r\n                }, \r\n                checksum: hmac\r\n            }));\r\n\r\n            createReq.onreadystatechange = () => {\r\n                if(createReq.readyState===4 && createReq.status===200) {\r\n                    let paymentData = JSON.parse(createReq.response)\r\n                    let responseHmac = crypto.createHmac('sha256', config.clientKey).update(JSON.stringify(paymentData.payment)).digest('hex')            \r\n                    if(paymentData.hash === responseHmac) {\r\n                        localStorage.setItem('x-txn-id', paymentData.txnId)\r\n                        this.setState({\r\n                            amount: {\r\n                                base: base,\r\n                                total: amt\r\n                            },\r\n                            paymentId: paymentData.payment.payment_id,\r\n                            txnId: paymentData.txnId,\r\n                            data: {\r\n                                payer: POST_DATA.payer,\r\n                                eventData: POST_DATA.eventData,\r\n                                regData: this.props.regData\r\n                            },\r\n                            redHotURL: paymentData.payment.longurl,\r\n                            paymentCreated: true\r\n                        })\r\n                    } else\r\n                        this.paymentError('RESPONSE_HASH_MISMATCH')\r\n                } else if(createReq.readyState===4 && createReq.status===403) {\r\n                    this.paymentError('CSRF_TIMEOUT')\r\n                } else if(createReq.readyState===4 && createReq.status===500) {\r\n                    this.paymentError('SERVER_ERROR')\r\n                }\r\n            }\r\n        } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\r\n            // Payment Returned from Server\r\n            localStorage.removeItem('x-return-key')\r\n            localStorage.removeItem('x-return-pay-token')\r\n            localStorage.removeItem('x-txn-id')\r\n            /**\r\n             * @author zrthxn\r\n             * Check for transaction success here\r\n             * The transaction ID is available as returnTxnId\r\n             */\r\n            setTimeout(()=>{\r\n                Database.firestore.collection('transactions').doc(returnTxnId).get()\r\n                .then((snapshot)=>{\r\n                    let paymentData = snapshot.data()\r\n                    if(paymentData.status==='Credit')\r\n                        this.paymentSuccesful({ txnId: returnTxnId })\r\n                    else\r\n                        this.paymentError({ txnId: returnTxnId })\r\n                }).catch(()=>{\r\n                    this.paymentError({ txnId: null })\r\n                })\r\n            }, 2500)\r\n        }\r\n    }\r\n\r\n    paymentSuccesful = (txn) => {\r\n        console.log('PAYMENT_SUCCESSFUL')\r\n        const { regData, eventData } = JSON.parse(atob(sessionStorage.getItem('x-data-bundle')))\r\n        sessionStorage.removeItem('x-data-bundle')\r\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\r\n            status: 'SUCCESS | VERIFIED',\r\n            verified: true\r\n        }).then(()=>{\r\n            let hashSequence = JSON.stringify(regData)\r\n            let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n\r\n            if(eventData.type==='com') {\r\n                Booking.competeRegister(regData, hmac, txn.txnId).then((res)=>{\r\n                    if (res.validation) \r\n                        this.setState({ paymentCreated: true, completion: true, paymentSuccesful: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            } else if(eventData.type==='tic') {\r\n                Booking.ticketRegister(regData, hmac, txn.txnId).then((res)=>{\r\n                    if (res.validation) \r\n                        this.setState({ paymentCreated: true, completion: true, paymentSuccesful: true, rgn: res.rgn })\r\n                }).catch(()=>{\r\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            } else if (eventData.type==='gen'){\r\n                Booking.generalRegister(regData, hmac, txn.txnId).then((res) => {\r\n                    if(res.validation)\r\n                        this.setState({ paymentCreated: true, completion:true, paymentSuccesful:true, rgn: res.rgn })\r\n                }).catch(() => {\r\n                    alert('Payment Received. Registration Error. Please take a screenshot of this message and contact us :: ' + txn.txnId)\r\n                })\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err);\r\n        })\r\n    }\r\n\r\n    paymentCancelled = () => {\r\n        console.log('PAYMENT_CANCELLED')\r\n        Database.firestore.collection('transactions').doc(this.state.txnId).update({\r\n            status: 'CANCELLED',\r\n        }).then(()=>{\r\n            this.props.back()\r\n        }).catch((err) => console.error(err))\r\n    }\r\n\r\n    paymentError = (txn) => {\r\n        console.error('PAYMENT_FAILED', 'PORTAL_ERROR')\r\n        localStorage.setItem('payment-error-code', 'PORTAL_ERROR')\r\n        Database.firestore.collection('transactions').doc(txn.txnId).update({\r\n            status: 'FAILED | VERIFIED',\r\n        }).then(()=>{\r\n            this.setState({ paymentCreated: false })\r\n        }).catch((err) => console.error(err))\r\n    }\r\n\r\n    action = () => {\r\n        // Redirect to action URL here\r\n        let returnKey = 'KEY'\r\n        for(let i=0;i<24;i++)\r\n            returnKey += Math.floor( Math.random() * 36 ).toString(36)\r\n        let returnPayToken = crypto.createHmac('sha512', config.clientKey).update(returnKey + this.state.txnId).digest('hex')\r\n\r\n        localStorage.setItem('x-return-key', returnKey)\r\n        localStorage.setItem('x-return-pay-token', returnPayToken)\r\n\r\n        sessionStorage.setItem('x-data-bundle', btoa(JSON.stringify(this.state.data)))\r\n\r\n        window.location = this.state.redHotURL\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Payments container fit\">\r\n            {\r\n                this.state.paymentCreated ? (\r\n                    this.state.completion ? (\r\n                        this.state.paymentSuccesful ? <SuccessPage rgn={ this.state.rgn } payment={true}/> : <ErrorPage/>\r\n                    ) : (\r\n                        <div>\r\n                            <h2>Payments Page</h2>\r\n\r\n                            <div className=\"action container fit\">\r\n                                <button className=\"button\" onClick={ this.props.back.bind(this) }>CANCEL</button>\r\n                            </div>\r\n\r\n                            <div className=\"pricing\">\r\n                                <p>Total</p>\r\n                                <h3>{'\\u20B9 ' + Booking.calcTaxInclAmount(this.props.amount)}</h3>\r\n                                <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                            </div>\r\n                            <p>\r\n                                By clicking on PAY you agree to the Xtacy terms and conditions.\r\n                            </p>\r\n                            <button className=\"button solid green\" onClick={this.action}>PAY</button>\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={10000}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport Booking from '../util/booking';\r\nimport './css/Register.css';\r\nimport '../Global.css';\r\nimport Payments from './Payments';\r\n\r\nimport SuccessPage from './SuccessPage';\r\nimport { throws } from 'assert';\r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data: {\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                regInst: null,\r\n                tier:'standard',\r\n                amount:0\r\n            },\r\n            premium:false,\r\n            errors: {\r\n                email: false,\r\n                phone: false,\r\n                name: false\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false \r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        console.log(this.state)\r\n        let _data = this.state.data\r\n        if(event.target.value==='gold'){\r\n            _data.amount=500\r\n            this.setState({\r\n                tier:'gold',\r\n                premium:true,\r\n                data:_data\r\n            })\r\n        }\r\n        else if(event.target.value==='silver'){\r\n            _data.amount = 300\r\n            this.setState({\r\n                tier: 'silver',\r\n                premium:true,\r\n                data:_data\r\n            })\r\n        }\r\n        else {\r\n            _data.amount=0\r\n            this.setState({\r\n                tier: 'standard',\r\n                premium:true,\r\n                data:_data\r\n            })\r\n        }\r\n    }\r\n    \r\n    action = () => {\r\n        console.log(this.state)\r\n        if(this.state.requiredFulfilled) {\r\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\r\n                if(!this.state.premium){\r\n                    let hashSequence = JSON.stringify(this.state.data)\r\n                    let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n                    Booking.generalRegister(this.state.data, hmac)\r\n                        .then((res)=>{\r\n                            if (res.validation)\r\n                                this.setState({ completion: true, rgn: res.rgn })\r\n                        }).catch(()=>{\r\n                            alert('Error')\r\n                        })\r\n                }\r\n                else {\r\n                    this.setState({completion:true})\r\n                }\r\n            } else {\r\n                alert('Please ensure that the data entered is correct')\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    validate(event)\r\n    {   \r\n        if(event.target.id==='regEmail') {\r\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: this.state.errors.phone,\r\n                        email: true\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: this.state.errors.phone,\r\n                    email: false\r\n                }\r\n            })\r\n        }\r\n        else if (event.target.id==='regPhone'){\r\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \r\n                this.setState({\r\n                    errors: {\r\n                        name: this.state.errors.name,\r\n                        phone: true,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: false,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n        else if(event.target.id==='regName'){\r\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\r\n                this.setState({\r\n                    errors: {\r\n                        name: true,\r\n                        phone: this.state.errors.phone,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors: {\r\n                    name: false,\r\n                    phone: this.state.errors.phone,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.completion ? ( this.state.premium ? ( \r\n                    <Payments \r\n                        name = {this.state.data.regName}\r\n                        email = {this.state.data.regEmail}\r\n                        phone = {this.state.data.phone}\r\n                        amount = {this.state.data.amount}\r\n                        eventData = {{\r\n                            'title': 'Xtacy Registration',\r\n                            'type': 'gen'\r\n                        }}\r\n                        regData = {this.state.data}\r\n                        back = { () => {this.setState({completion:false})}} />\r\n                    ) :  <SuccessPage rgn={this.state.rgn} payment={false}/>\r\n                ) : (\r\n                    <div className=\"Register container fit\">\r\n                        <div className=\"fluff\">\r\n                            <h2>Registration</h2>\r\n                            <p>Fill in the form and click register. \r\n                                You will recieve a confirmation email \r\n                                after a successful registration.</p>\r\n                            <p>\r\n                                You can decide between Standard, Silver and Gold passes for Xtacy'19.<br/>\r\n                                Standard pass only gives you entry to the fest, while Silver and Gold Passes come with their own perks.<br/>\r\n                                Silver pass perks <br/>\r\n                                Gold pass perks <br/>\r\n                                </p>                        \r\n                        </div>\r\n\r\n                        <div className=\"form\">\r\n                            <div className=\"container fit\">\r\n                                <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regName\" placeholder=\"Name\"/>\r\n                                <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                \r\n                                    {\r\n                                        this.props.intent==='gen' ? (\r\n                                            <select className=\"dropdown\" id=\"tier\" onChange={this.handleTierChange}>\r\n                                            <option value=\"standard\">Standard</option>\r\n                                            <option value=\"silver\">Silver</option>\r\n                                            <option value=\"gold\">Gold</option>\r\n                                            </select>\r\n                                        ):(\r\n                                            <select className=\"dropdown\" id=\"tier\" onChange={this.handleTierChange}>\r\n                                            <option value=\"silver\">Silver</option>\r\n                                            <option value=\"gold\">Gold</option>\r\n                                            </select>\r\n                                        )\r\n                                    }\r\n                                    \r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport Payments from './Payments';\r\nimport SuccessPage from './SuccessPage';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Tickets.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Tickets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            tierPricing: null,\r\n            data : {\r\n                eventId: null,\r\n                regName: null,\r\n                regEmail: null,\r\n                regPhone: null,\r\n                specialRequests: null,\r\n                tier: null,\r\n                number: 0,\r\n                amount: 0\r\n            },\r\n            errors: {\r\n                email: false,\r\n                phone: false,\r\n                name: false\r\n            },\r\n            required: [\r\n                'regName', 'regEmail', 'regPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let trP, _data = this.state.data;\r\n        _data.eventId = this.props.eventData.eventId\r\n        if( typeof this.props.eventData.metadata.price === 'number' )\r\n            trP = this.props.eventData.metadata.price\r\n        else if( typeof this.props.eventData.metadata.price === 'object' )\r\n            trP = this.props.eventData.metadata.price[1]\r\n\r\n        _data.number = 1\r\n        _data.tier = 'Standard'\r\n        _data.amount = (trP * _data.number)\r\n        this.setState({\r\n            tierPricing: trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        _data[event.target.id] = payload\r\n        for ( let field of this.state.required )\r\n            if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                truth = false\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleTierChange = (event) => {\r\n        let _data = this.state.data, _trP = this.props.eventData.metadata.price[ event.target.value ]\r\n        _data.amount = (_trP * _data.number)\r\n        switch (event.target.value) {\r\n            case '0':\r\n                _data.tier = 'Budget';\r\n                break;\r\n            case '1':\r\n                _data.tier = 'Standard';\r\n                break;\r\n            case '2':\r\n                _data.tier = 'Premium';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        this.setState({\r\n            tierPricing: _trP,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    handleSizeChange = (action) =>{\r\n        let _data = this.state.data\r\n        if(action==='incr' && _data.number!==4) \r\n            _data.number++\r\n        else if(action==='decr' && _data.number!==1)\r\n            _data.number--\r\n        let amt = (this.state.tierPricing * _data.number)\r\n        _data.amount = amt\r\n        this.setState({\r\n            data: _data,\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\r\n                localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n                localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n                this.setState({ paymentReady: true })\r\n            } else {\r\n                alert('Please ensure that the data entered is correct')\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.ticketRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation) \r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n    validate(event)\r\n    {\r\n        if(event.target.id==='regEmail') {\r\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: this.state.errors.phone,\r\n                        email: true\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: this.state.errors.phone,\r\n                    email: false\r\n                }\r\n            })\r\n        }\r\n        else if (event.target.id==='regPhone'){\r\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: true,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: false,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n        else if(event.target.id==='regName'){\r\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\r\n                this.setState({\r\n                    errors : {\r\n                        name: true,\r\n                        phone: this.state.errors.phone,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: false,\r\n                    phone: this.state.errors.phone,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={false}/> : (\r\n                        <Payments\r\n                            name={this.state.data.regName}\r\n                            email={this.state.data.regEmail}\r\n                            phone={this.state.data.regPhone}\r\n                            amount={this.state.data.amount}\r\n                            eventData={this.props.eventData}\r\n                            regData={this.state.data}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <div className=\"Tickets container fit\">\r\n                        <div className=\"Details\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Events</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click proceed. \r\n                                    You will recieve a confirmation email \r\n                                    after a successful booking.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container fit\">\r\n                                    <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regName\" placeholder=\"Name\"/>\r\n                                    <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regEmail\" placeholder=\"Email\"/>\r\n                                    <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regPhone\" placeholder=\"Phone\"/>\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regInst\" placeholder=\"Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <h3><span className=\"highlight\">Book Tickets</span></h3>\r\n                        <br/><br/>\r\n                        <div className=\"Seats\">\r\n                            {\r\n                                typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                    <div className=\"display container\">\r\n                                        <img src=\"https://xtacy.org/static/img/seatingTiers.png\" alt=\"seating\"/>\r\n                                    </div>\r\n                                ) : console.log()\r\n                            }\r\n                            <div className=\"controls container\">\r\n                                {\r\n                                    typeof this.props.eventData.metadata.price === 'object' ? (\r\n                                        <div className=\"tiers\">\r\n                                            <p>Select a Teir</p>\r\n                                            <select className=\"dropdown\" defaultValue={1} onChange={this.handleTierChange} passive=\"true\">\r\n                                                <option value={0}>Budget</option>\r\n                                                <option value={1}>Standard</option>\r\n                                                <option value={2}>Premium</option>\r\n                                            </select>\r\n                                        </div>                          \r\n                                    ) : console.log()\r\n                                }\r\n                                <div className=\"selector\">\r\n                                    <p>Select a Number</p>\r\n\r\n                                    <div className=\"number\">\r\n                                        <h3 className=\"actual-number\">{this.state.data.number + ' ' + (this.state.data.number>1 ? 'Tickets' : 'Ticket')}</h3>\r\n                                        \r\n                                        <div className=\"buttons\">\r\n                                            <label id=\"decr\" onClick={() => { this.handleSizeChange('decr') }}>-</label>\r\n                                            <label id=\"incr\" onClick={() => { this.handleSizeChange('incr') }}>+</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.tierPricing + ' per ticket'}</p>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                </div>\r\n                                <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"specialRequests\" placeholder=\"Special Requests (if any)\"/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>                     \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport SuccessPage from './SuccessPage';\r\nimport Payments from './Payments';\r\n\r\nimport Booking from '../util/booking';\r\nimport './css/Compete.css';\r\nimport '../Global.css'; \r\n\r\nconst config = require('../util/config.json');\r\n\r\nclass Compete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            paymentReady: false,\r\n            requiredFulfilled: false,\r\n            completion: false,\r\n            data : {\r\n                eventId: null,\r\n                regTeamName: null,\r\n                regTeamEmail: null,\r\n                regTeamPhone: null,\r\n                regTeamInst: null,\r\n                amount: null,\r\n                members : []\r\n            },\r\n            errors :{\r\n                email: false,\r\n                phone: false,\r\n                number: false\r\n            },\r\n            required: [\r\n                'regTeamName', 'regTeamEmail', 'regTeamPhone'\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _data = this.state.data, req\r\n        _data.eventId = this.props.eventData.eventId\r\n        if(this.props.eventData.metadata.collectTeamGit) _data['regTeamGit'] = null\r\n        if(this.props.eventData.metadata.teamSizeType==='strict') {\r\n            for (let i=0; i<this.props.eventData.metadata.teamSize; i++)\r\n                _data.members.push({ index: i, name: null, email: null })\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'members/name', 'members/email' ]\r\n        } else if(this.props.eventData.metadata.teamSizeType==='loose') {\r\n            req = [ 'regTeamName', 'regTeamEmail', 'regTeamPhone', 'regTeamLeader', 'regTeamSize' ]\r\n        }\r\n        _data.amount = (this.props.eventData.metadata.price)\r\n        console.log(this.props.eventData)\r\n        this.setState({\r\n            data: _data,\r\n            required: req\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let payload = null, truth = true, _data = this.state.data\r\n        if ( event.target.value!==\"\" ) payload = event.target.value\r\n        if (event.target.id.includes('/')){\r\n            let identifier = event.target.id.split('/')[1], index = event.target.id.split('/')[0].split('#')[1]\r\n            _data.members[index][identifier] = payload\r\n        } else\r\n            _data[event.target.id] = payload \r\n\r\n        for ( let field of this.state.required ) {\r\n            if(field.includes('/')) {\r\n                field = field.split('/')\r\n                if(this.props.eventData.metadata.teamStrictType==='strict'){\r\n                    for ( let member of this.state.data.members )\r\n                        if ( member[field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null) )\r\n                            truth = false\r\n                }\r\n                else if(this.props.eventData.metadata.teamStrictType==='flex'){\r\n                    if(this.state.data.members[0][field[1]]===null || (event.target.id.split('/')[1]===field[1] && payload===null))\r\n                            truth = false\r\n                }\r\n            } else {\r\n                if ( this.state.data[field]===null || (event.target.id===field && payload===null) )\r\n                        truth = false\r\n            }\r\n        }\r\n        this.setState({\r\n            requiredFulfilled: truth,\r\n            data: _data\r\n        })\r\n    }\r\n\r\n    action = () => {\r\n        if(this.state.requiredFulfilled) {\r\n            if(!(this.state.errors.name || this.state.errors.phone || this.state.errors.email)){\r\n                if(this.props.eventData.metadata.paid) {\r\n                    localStorage.setItem('x-return-key', 'PAY_INITIALIZE')\r\n                    localStorage.setItem('x-return-pay-token', 'PAY_INITIALIZE')\r\n                    this.setState({ paymentReady: true })\r\n                } else {\r\n                    this.success(null)\r\n                }\r\n            } else {\r\n                alert('Please ensure the data entered is correct')\r\n            }\r\n        } else {\r\n            alert('Please fill in the required fields')\r\n        }\r\n    }\r\n\r\n    success = (txn) => {\r\n        if(!this.props.eventData.metadata.paid) txn = 'NON_PAID'\r\n        let hashSequence = JSON.stringify(this.state.data)\r\n        let hmac = crypto.createHmac('sha256', config.clientKey).update(hashSequence).digest('hex')\r\n        Booking.competeRegister(this.state.data, hmac, txn)\r\n            .then((res)=>{\r\n                if (res.validation)\r\n                    this.setState({ paymentReady: true, completion: true, rgn: res.rgn })\r\n            }).catch(()=>{\r\n                alert('Error')\r\n            })\r\n    }\r\n    \r\n    validate = (event) => {\r\n        if(event.target.id==='regTeamEmail') {\r\n            if(event.target.value.match(/^\\S+@\\S+[\\.][0-9a-z]+$/)==null){\r\n                this.setState({\r\n                    errors : {\r\n                        name: this.state.errors.name,\r\n                        phone: this.state.errors.phone,\r\n                        email: true\r\n                    }\r\n                })\r\n            } else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: this.state.errors.phone,\r\n                    email: false\r\n                }\r\n            })\r\n        }\r\n        else if (event.target.id==='regTeamPhone'){\r\n            if(event.target.value.match(/^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[6789]\\d{9}|(\\d[ -]?){10}\\d$/)==null){  \r\n                let _err = this.state.errors\r\n                _err['phone'] = true\r\n                this.setState({\r\n                    errors : _err\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: this.state.errors.name,\r\n                    phone: false,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n        else if(event.target.id==='regTeamName'){\r\n            if(event.target.value.match(/^([^0-9]*)$/)==null){  //doesnt have a digit\r\n                this.setState({\r\n                    errors : {\r\n                        name: true,\r\n                        phone: this.state.errors.phone,\r\n                        email: this.state.errors.email\r\n                    }\r\n                })\r\n            }\r\n            else this.setState({\r\n                errors : {\r\n                    name: false,\r\n                    phone: this.state.errors.phone,\r\n                    email: this.state.errors.email\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {\r\n                this.state.paymentReady ? (\r\n                    this.props.eventData.metadata.paid ? (\r\n                        <Payments\r\n                            name={this.props.eventData.metadata.teamSizeType==='loose'?(this.state.data.regTeamLeader):(this.state.data.members[0].name)}\r\n                            email={this.state.data.regTeamEmail}\r\n                            phone={this.state.data.regTeamPhone}\r\n                            amount={this.state.data.amount}\r\n                            eventData={this.props.eventData}\r\n                            regData={this.state.data}\r\n                            back={ () => this.setState({ paymentReady: false }) }\r\n                        />\r\n                    ) : (\r\n                        this.state.completion ? <SuccessPage rgn={this.state.rgn} payment={this.props.eventData.metadata.paid}/> : console.log()\r\n                    )\r\n                ) : (\r\n                    <div className=\"Compete container fit\">\r\n                        <div className=\"Team\">\r\n                            <div className=\"fluff\">\r\n                                <p><i>Competitions</i></p>\r\n                                <h2>{this.props.eventData.title}</h2>\r\n                                <p>Fill in the form and click register. \r\n                                    You will recieve a confirmation email\r\n                                    after a successful registration.</p>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <div className=\"container\">\r\n                                    <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} id=\"regTeamName\" placeholder=\"Team Name\"/>\r\n                                    <input type=\"text\" className={this.state.errors.email?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamEmail\" placeholder=\"Team Email\"/>\r\n                                    <input type=\"text\" className={this.state.errors.phone?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamPhone\" placeholder=\"Phone Number\"/>\r\n                                    {\r\n                                        this.props.eventData.metadata.collectTeamGit ? (\r\n                                            <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamGit\"\r\n                                                placeholder=\"Team GitHub (Optional)\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"text\" className={this.state.errors.name?\"textbox error\":\"textbox\"} onChange={this.handleChange} onBlur={this.validate.bind(this)} id=\"regTeamLeader\" placeholder=\"Team Leader Name\"/>\r\n                                        ) : console.log()\r\n                                    }\r\n                                    {\r\n                                        this.props.eventData.metadata.teamSizeType==='loose' ? (\r\n                                            <input type=\"number\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamSize\" placeholder=\"Team Size\"\r\n                                                max={this.props.eventData.metadata.teamSize} min={0}/>\r\n                                        ) : console.log()\r\n                                    }\r\n\r\n                                    <input type=\"text\" className=\"textbox\" onChange={this.handleChange} id=\"regTeamInst\" \r\n                                        placeholder=\"Team Institution (Optional)\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.eventData.metadata.teamSizeType==='strict' ? (\r\n                                <div>\r\n                                    <h3><span className=\"highlight\">Team Member Details</span></h3>\r\n                                    <div className=\"MemberData\">\r\n                                    {\r\n                                        this.state.data.members.map((mem, i) => { return <Member key={i} index={i} handleChange={this.handleChange}/> })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            ) : console.log()\r\n                        }\r\n\r\n                        {\r\n                            this.props.eventData.metadata.paid ? (\r\n                                <div className=\"pricing\">\r\n                                    <p id=\"trP\">{'\\u20B9 ' + this.state.data.amount + ' per team'}</p>\r\n                                    <h3>{'Total \\u20B9 ' + Booking.calcTaxInclAmount(this.state.data.amount)}</h3>\r\n                                    <p id=\"tax\"><i>Incl. of 18% GST and 2.5% fees</i></p>\r\n                                    <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>PROCEED</button>\r\n                                </div>\r\n                            ) : (\r\n                                <button className=\"button solid\" id=\"reg\" onClick={ this.action.bind(this) }>REGISTER</button>\r\n                            )\r\n                        }                        \r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Member extends Component {\r\n    \r\n    render() {\r\n        let index = this.props.index\r\n        return (\r\n            <div className=\"Member container fit\">\r\n                <h3 className=\"title\">\r\n                    Team Member { index + 1 }\r\n                    {\r\n                        index === 0 ? (\r\n                            <span className=\"team-leader-text\"><span></span>TEAM LEADER<span></span></span>\r\n                        ) : console.log()\r\n                    }\r\n                </h3>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/name'} placeholder=\"Name\"/>\r\n                <input type=\"text\" className=\"textbox\" onChange={this.props.handleChange} id={'mem#' + index +'/email'} placeholder=\"Email\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compete;","import React, { Component } from 'react';\r\nimport Booking from './util/booking';\r\nimport './Global.css';\r\n\r\nimport Register from './components/Register';\r\nimport Tickets from './components/Tickets';\r\nimport Compete from './components/Compete';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Loading from './components/partials/Loading';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            eventData: null,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.intent!=='gen')\r\n            // DEBUG ======================================== //\r\n            // this.setState({\r\n            //     intent: this.props.intent,\r\n            //     event: 'dastan',\r\n            //     eventData: {\r\n            //         title: 'Mehmood Bhai',\r\n            //         eventId: 'dastan',\r\n            //         dates: 16,\r\n            //         type: this.props.intent,\r\n            //         published: true,\r\n            //         metadata: {\r\n            //             time: '1:00 PM',\r\n            //             paid: true,\r\n            //             price: 5,\r\n            //             teams: false,\r\n            //             teamSize: null,\r\n            //             teamSizeType: null,\r\n            //             collectTeamGit: false,\r\n            //             conductedBy: 'Daniyal'\r\n            //         }\r\n            //     },\r\n            //     loaded: true\r\n            // })\r\n            // ---------------------------------------------- //\r\n            Booking.getEventData(this.props.event)\r\n                .then((eventData)=>{\r\n                    this.setState({\r\n                        intent: this.props.intent,\r\n                        event: this.props.event,\r\n                        eventData: eventData.data,\r\n                        loaded: true\r\n                    })\r\n                }).catch((err)=>{\r\n                    console.log(err)\r\n                })\r\n            // ============================================== //\r\n        else\r\n            this.setState({\r\n                intent: this.props.intent,\r\n                loaded: true\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n            {\r\n                this.state.loaded ? (\r\n                    this.state.intent!== 'gen' ? (\r\n                        this.state.eventData.published ? (\r\n                            this.state.intent!=='com' ? (\r\n                                this.state.intent!=='tic' ? ( \r\n                                    this.state.intent!=='prm' ? (\r\n                                        <ErrorPage/>\r\n                                    ) : ( \r\n                                        <Register eventData = {this.state.eventData} intent={this.state.intent}/>\r\n                                    )\r\n                                ): (\r\n                                    <Tickets eventData={this.state.eventData}/>\r\n                                )\r\n                            ) : (\r\n                                <Compete eventData={this.state.eventData}/>\r\n                            )\r\n                        ) : (\r\n                            <div className=\"container\">\r\n                                <Loading/>\r\n                                <h2>Not Published</h2>\r\n                                <p>Registrations are disabled for this event</p>\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <Register eventData={this.state.eventData} intent={this.state.intent}/>\r\n                    )\r\n                ) : (\r\n                    <LoadingPage timeOut={2500}/>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './components/partials/Header';\r\nimport Footer from './components/partials/Footer';\r\nimport Secu from './util/secu';\r\nimport './Global.css';\r\n\r\nimport Main from './Main';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Payments from './components/Payments';\r\n\r\nconst config  = require('./util/config.json');\r\n\r\nclass Bookings extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            intent: null,\r\n            event: null,\r\n            hash: null,\r\n            ref: null,\r\n            verified: false\r\n        }\r\n    }\r\n\r\n    getParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        return ({\r\n            intent: searchParams.get('int'),\r\n            event: searchParams.get('evt'),\r\n            ref: searchParams.get('ref'),\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // DEBUG ======================================== //\r\n        // let params = this.getParams(window.location)\r\n        // if (params.intent==='gen') params.event = 'any'\r\n        // this.setState({\r\n        //     intent: params.intent,\r\n        //     event: params.event,\r\n        //     ref: params.ref,\r\n        //     verified: true\r\n        // })\r\n        // ---------------------------------------------- //\r\n        Secu.validateToken().then((result)=>{\r\n            if (result==='CSR_TOKEN_VALID' || result==='CSR_TOKEN_GEN' || result==='CSR_TOKEN_GEN' ||\r\n                    result==='CSR_TOKEN_RENEW' || result==='CSR_TIME_VALID') {\r\n                console.log('SR Tokens Verified')\r\n                Secu.generateSecurityFluff(4);\r\n                \r\n                let params = this.getParams(window.location), verified = false, hashSequence, hash\r\n                let returnKey = localStorage.getItem('x-return-key')\r\n                let returnPayToken = localStorage.getItem('x-return-pay-token')\r\n                let returnTxnId = localStorage.getItem('x-txn-id')\r\n                if(returnKey==='PAY_INITIALIZE' || returnKey===null) {\r\n                    if (params.intent==='gen') params.event = 'any'\r\n                    hashSequence = params.intent + config.clientKey + params.event\r\n                    hash = crypto.createHash('sha256').update(hashSequence).digest('hex')\r\n                    if ( sessionStorage.getItem(config.hashToken) === hash ) verified = true\r\n                } else if(returnPayToken===crypto.createHmac('sha512', config.clientKey).update(returnKey + returnTxnId).digest('hex')) {\r\n                    verified = true\r\n                }\r\n                this.setState({\r\n                    intent: params.intent,\r\n                    event: params.event,\r\n                    hash: hash,\r\n                    ref: params.ref,\r\n                    verified: verified\r\n                })\r\n            }\r\n        }).catch((err)=>{\r\n            console.error(err)\r\n        });\r\n        // ============================================== //\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Bookings\">\r\n                <Header/>\r\n\r\n                {\r\n                    this.state.verified ? (\r\n                        <section>\r\n                            <Router basename={'/register'}>\r\n                                <Switch>\r\n                                    <Route path={'/main'}>\r\n                                        <Main intent={this.state.intent} event={this.state.event}/>\r\n                                    </Route>\r\n                                    \r\n                                    <Route path={'/payment'} component={Payments}/>\r\n\r\n                                    <Route path={'/cancel'} component={ErrorPage}/>\r\n\r\n                                    <Route component={ErrorPage}/>\r\n                                </Switch>\r\n                            </Router>\r\n                        </section>\r\n                    ) : (\r\n                        <LoadingPage timeOut={2500}/>\r\n                    )\r\n                }\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bookings;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Bookings from './Bookings';\r\n\r\nReactDOM.render(<Bookings />, document.getElementById('root'));","const firebase = require('firebase/app');\r\nrequire('firebase/database');\r\nrequire('firebase/auth');\r\nrequire('firebase/firestore');\r\n\r\nconst credentials = require('./config.json').firebase;\r\n\r\nif (firebase.apps.length===0)\r\n    firebase.initializeApp(credentials);\r\n\r\nexports.firebase = firebase\r\n\r\nconst database = firebase.database()\r\nexports.database = database\r\n\r\nconst firestore = firebase.firestore()\r\nfirestore.settings({ timestampsInSnapshots: true })\r\nexports.firestore = firestore\r\n\r\n/**\r\n* @author Alisamar Husain\r\n* \r\n* Standard Firebase/Firestore Export\r\n* ---------------------------------\r\n* Import the object by either\r\n*   const db = require('./database')\r\n* or\r\n*   import db from './database';\r\n* \r\n* Use the object to get a database\r\n* namespace by 'db.firebase.database()'\r\n* Check the firebase docs for more.\r\n*/","const config = require('./config.json');\r\n\r\nexports.validateToken = () => {\r\n    return new Promise((resolve, reject)=>{\r\n        if (localStorage.getItem('x-sr-vtime')!==undefined &&\r\n            (new Date()).getTime()-localStorage.getItem('x-sr-vtime')<(5*60000)){\r\n                resolve('CSR_TIME_VALID');\r\n        } else {\r\n            const valReq = new XMLHttpRequest();\r\n            valReq.open('POST', '/_secu/csrtoken/', true);\r\n            valReq.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            var key = localStorage.getItem( config.csrfTokenNameKey );\r\n            var token = localStorage.getItem( config.csrfTokenName+key );\r\n            if(key===null) {\r\n                let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenNameKey );\r\n                localStorage.removeItem( config.csrfTokenName+k );\r\n                reject('CSR_TOKEN_INVALID');\r\n            } else {\r\n                valReq.send(JSON.stringify({ \"key\" : key, \"token\" : token }));\r\n            }\r\n            \r\n            valReq.onreadystatechange = () => {\r\n                if(valReq.readyState===4 && valReq.status===200) {\r\n                    let valRes = JSON.parse(valReq.response);\r\n                    if(valRes.status===true) {\r\n                        localStorage.setItem('x-sr-vtime', (new Date()).getTime())\r\n                        resolve('CSR_TOKEN_VALID');\r\n                    } else if(valRes.status===false) {\r\n                        localStorage.removeItem(config.csrfTokenName+key);\r\n                        key = valRes.key;\r\n                        token = valRes.token;\r\n                        localStorage.setItem(config.csrfTokenNameKey, key);\r\n                        localStorage.setItem(config.csrfTokenName+key, token);\r\n                        resolve('CSR_TOKEN_RENEW');\r\n                    } else {\r\n                        let k = localStorage.getItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenNameKey );\r\n                        localStorage.removeItem( config.csrfTokenName+k );\r\n                        reject('CSR_TOKEN_INVALID');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexports.generateSecurityFluff = (amount) => {\r\n    let arr = ['_td-xhr', '__id', 'k_0-g01G', '_fl_namk-xtc'];\r\n    for(let i=0;i<amount;i++) {\r\n        let tag = arr[i%4];\r\n        let fluff = \"\";\r\n        let fluff_len = Math.floor(Math.random()*24);\r\n        if(i%2===0) {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*36).toString('36')\r\n        } else {\r\n            for(let n=0;n<fluff_len;n++)\r\n                fluff += Math.floor(Math.random()*10)\r\n        }\r\n        localStorage.setItem(tag, fluff);\r\n    }    \r\n}"],"sourceRoot":""}